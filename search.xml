<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>01 | 开发环境：如何使用 Ruby 工具链统一开发环境？</title>
    <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20%7C%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="01-开发环境：如何使用-Ruby-工具链统一开发环境？"><a href="#01-开发环境：如何使用-Ruby-工具链统一开发环境？" class="headerlink" title="01 | 开发环境：如何使用 Ruby 工具链统一开发环境？"></a>01 | 开发环境：如何使用 Ruby 工具链统一开发环境？</h1><p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/2021-03-17_10.25.34.png" alt="2021-03-17_10.25.34"></p>
<span id="more"></span>

<p>在 iOS 开发过程中，你是不是会经常遇到这些情况：</p>
<p>每次打开一个新项目，都需要手动搭建开发环境；有时候在安装第三方工具时使用到 <code>sudo 权限</code>，导致以后安装工具都需要手工输入密码而无法实施自动化。还有，每当启动一台新 <code>CI</code> 时，就需要手工登录并配置一遍，更可怕的是，原先搭建好的 CI 会随着 Xcode 版本更新需要重新配置。</p>
<p>为什么会这么麻烦呢？就是因为你在项目开始之初没有做好统一配置。</p>
<p>所谓统一配置，就是所有的配置信息都以文本的格式存放在 Git 里面，我们可以随时查看修改记录，以此来帮助我们比较不同配置之间的差异性，然后在这个基础上不断更新迭代。</p>
<p>可以说，有了统一配置，任何工程师都可以搭建出一模一样的开发环境，构建出功能一致的 App；有了统一配置，还可以让我们按需延展 CI 服务，而不用任何手工操作。更重要的是，它还可以应用到各个类似的 iOS 项目中，极大地减轻了项目前期的搭建成本。</p>
<p>既然统一的配置那么重要，那么我们怎样搭建统一配置的开发环境呢？</p>
<h2 id="Ruby-工具链"><a href="#Ruby-工具链" class="headerlink" title="Ruby 工具链"></a>Ruby 工具链</h2><p>我们可以通过 Ruby 工具链为整个项目搭建一致的开发和构建环境。为什么选择 <code>Ruby</code> 而不是其他语言环境呢？因为在 iOS 开发方面，目前流行的第三方工具 <code>CocoaPods</code> 和 <code>fastlane</code> 都是使用 Ruby 来开发的。特别是 Ruby 有非常成熟的依赖库管理工具 <code>RubyGems</code> 和 <code>Bundler</code>，其中 Bundler 可以帮我们有效地管理 CocoaPods 和 fastlane 的版本。</p>
<p>下面一起来看看怎样搭建一个统一的开发环境吧。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/2021-03-17_10.02.14.png" alt="2021-03-17_10.02.14"></p>
<p>通常，统一的开发环境应该从操作系统开始。对于 iOS 开发来说，<strong>MacOS</strong> 是目前 iOS 开发唯一支持的操作系统。在公司，MacOS 的版本一般由 IT 部门统一管理和更新。要注意，当公司统一更新了我们开发环境的 MacOS 版本以后，需要同时更新 CI 上 MacOS 的版本，以保持一致。</p>
<h2 id="Xcode"><a href="#Xcode" class="headerlink" title="Xcode"></a>Xcode</h2><p>位于 MacOS 上层的是 Xcode 和 rbenv。其中，<strong>Xcode</strong> 是 iOS 开发和构建工具，在同一个项目里，最好使用同一个版本的 Xcode 进行开发和构建，我们可以在项目的 README.md 文件标注 Xcode 的版本。</p>
<p>像我们将要开发的这款类似朋友圈的 Moments App 项目，我就在对应的 README.md 文件里标明了需要使用 <code>Xcode Version 12.2 (12B45b)</code>。具体内容你也可以在代码仓库找到。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/2021-03-17_10.12.38.png" alt="2021-03-17_10.12.38"></p>
<p>那我们怎样才能保证每个人都安装同一个版本号的 Xcode 呢？技巧就是我们不要到有自动更新功能的 Mac App Store 中下载 Xcode，而是到苹果的开发者网站搜索并下载。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/2021-03-17_10.14.30.png" alt="2021-03-17_10.14.30"></p>
<p>有时候我们会同时开发多个项目，这样有可能要安装多个不同版本的 Xcode。如果你的机器有多于一个版本的 Xcode，此时需要特别注意，为了保证所使用的编译器版本一致，在每次执行自动化命令之前（如执行<code>bundle exec fastlane test</code>），要先使用<code>xcode-select -s</code>来选择该项目所对应版本的 Xcode。</p>
<p>比如说我的电脑上有多个 Xcode 版本，在开发 Moments App 时，每次执行自动化命令之前都会执行这样一条命令<code>xcode-select -s /Applications/Xcode12.2.app/Contents/Developer</code>来选择 Moments App 项目所使用的 Xcode。这里的<code>Xcode12.2.app</code>就是我安装的 Xcode 12.2 版所在的位置。</p>
<h2 id="rbenv"><a href="#rbenv" class="headerlink" title="rbenv"></a>rbenv</h2><p>有了版本一致的 Xcode 以后，因为后期我们会用到 CocoaPods 等第三方 Ruby 工具，为了自动化安装和管理这些工具，整个项目团队所使用的 Ruby 版本也必须保持一致。为此，我们就需要用到 Ruby 环境管理工具。</p>
<p>目前流行的 Ruby 环境管理工具有 RVM 和 rbenv。我推荐使用的是 rbenv，因为它使用 shims 文件夹来分离各个 Ruby 版本，相对于 RVM 更加轻装而方便使用。千万注意，团队内部不要同时使用不同的 Ruby 环境管理工具，否则项目编译会出错。</p>
<p><strong>rbenv</strong> 是 Ruby 环境管理工具，能够安装、管理、隔离以及在多个 Ruby 版本之间切换。要使用 rbenv，我们可以通过 Homebrew 来安装它，下面是安装 Homebrew 和 rbenv 的脚本。</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">$ /bin/bash -c <span class="string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</span></span><br><span class="line">brew install rbenv ruby-build rbenv-vars</span><br></pre></td></tr></table></figure>

<p>一旦安装 rbenv 完毕，我们需要把以下的设置信息放到你的 Shell 配置文件里面，例如 <code>~/.bash_profile</code> 或者 <code>~/.zshrc</code> 等文件，这样能保证每次打开终端的时候都会初始化 rbenv。</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="string">&quot;$HOME/.rbenv/bin:$PATH&quot;</span> </span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;$(rbenv init -)&quot;</span></span><br></pre></td></tr></table></figure>

<p>接着我们就可以安装和设置项目的 Ruby 环境了。</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">$ cd $(<span class="variable constant_">PROJECT_DIR</span>)</span><br><span class="line">$ rbenv install <span class="number">2.7</span><span class="number">.1</span></span><br><span class="line">$ rbenv local <span class="number">2.7</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<p>此处是把项目的 Ruby 环境配置为 2.7.1 版本。rbenv 会帮我们建立 一个叫作<code>.ruby-version</code> 的文件，该文件里面只保存一个版本号（例如<code>2.7.1</code>）的字符串。这个包含了版本号的文件可以用 Git 进行管理。如果要更新版本，可以通过<code>rbenv local</code>命令进行，每次更新也由 Git 统一管理，这样就能让其他开发者使用同一版本的 Ruby 开发环境了。</p>
<h2 id="RubyGems-和-Bundler"><a href="#RubyGems-和-Bundler" class="headerlink" title="RubyGems 和 Bundler"></a>RubyGems 和 Bundler</h2><p>RubyGems 和 Bundler 主要是用来安装和管理 CocoaPods 和 fastlane 等第三方工具。</p>
<p>具体来说，RubyGems 是 Ruby 依赖包管理工具。在 Ruby 的世界，包叫作 Gem，我们可以通过<code>gem install</code>命令来安装。但是 RubyGems 在管理 Gem 版本的时候有些缺陷，就有人开发了 Bundler，用它来检查和安装 Gem 的特定版本，以此为 Ruby 项目提供一致性的环境。</p>
<p>要安装 Bundler，我们可执行<code>gem install bundler</code>命令进行，之后，再执行<code>bundle init</code>就可以生成一个 Gemfile 文件，像 CocoaPods 和 fastlane 等依赖包，我们就可以添加到这个文件里面。</p>
<p>具体代码如下：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">source <span class="string">&quot;https://rubygems.org&quot;</span></span><br><span class="line">gem <span class="string">&quot;cocoapods&quot;</span>, <span class="string">&quot;1.10.0&quot;</span></span><br><span class="line">gem <span class="string">&quot;fastlane&quot;</span>, <span class="string">&quot;2.166.0&quot;</span></span><br></pre></td></tr></table></figure>

<p>注意我们在<code>gem</code>命令里面都指定了依赖包的特定版本号。例如，在我们的 Moment App 就使用了<code>1.10.0</code>版的 CocoaPods，然后执行<code>bundle install</code>来安装各个 Gem。 Bundler 会自动生成一个 <code>Gemfile.lock</code> 文件来锁定所安装的 Gem 的版本，例如：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">DEPENDENCIES</span></span><br><span class="line">  cocoapods (= <span class="number">1.10</span><span class="number">.0</span>)</span><br><span class="line">  fastlane (= <span class="number">2.166</span><span class="number">.0</span>)</span><br></pre></td></tr></table></figure>

<p>为了保证团队其他成员都可以使用版本号一致的 Gem，我们需要把 <code>Gemfile</code> 和 <code>Gemfile.lock</code> 一同保存到 Git 里面统一管理起来。</p>
<p>到此为止，我们已经知道怎样使用 Ruby 工具链配置一个统一的开发环境。但在真实的开发环境中，搭建环境只需要一个人来完成即可，其他成员执行以下脚本就能完成整套开发环境的搭建。</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">$ ./scripts/setup.<span class="property">sh</span></span><br></pre></td></tr></table></figure>

<p>我们一起看看这个脚本做了些什么？</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Install</span> ruby using rbenv</span><br><span class="line">ruby_version=<span class="string">`cat .ruby-version`</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -d <span class="string">&quot;$HOME/.rbenv/versions/$ruby_version&quot;</span> ]]; then</span><br><span class="line">  rbenv install $ruby_version;</span><br><span class="line">fi</span><br><span class="line"># <span class="title class_">Install</span> bunlder</span><br><span class="line">gem install bundler</span><br><span class="line"># <span class="title class_">Install</span> all gems</span><br><span class="line">bundle install</span><br><span class="line"># <span class="title class_">Install</span> all pods</span><br><span class="line">bundle exec pod install</span><br></pre></td></tr></table></figure>

<p>该脚本主要做了四件事情，第一步是在 rbenv 下安装特定版本的 Ruby 开发环境，然后通过 RubyGems 安装 Bunlder，接着使用 Bundler 安装 CocoaPods 和 fastlane 等依赖包，最后安装各个 Pod。这样，一个统一的项目环境就搭建完成了，接下来开发者就可以打开 <strong>Moments.xcworkspace</strong>进行开发了。</p>
<p>说完 Ruby 环境搭建以后，最后我们一起聊聊保证项目文件一致性的 .gitignore 文件。</p>
<h2 id="gitignore-文件"><a href="#gitignore-文件" class="headerlink" title=".gitignore 文件"></a>.gitignore 文件</h2><p>.gitignore 文件是一个配置文件，用来指定让 Git 需要忽略的文件或者目录。如果没有 .gitignore 文件，项目成员可能会不小心把一些自动生成等无关重要的文件或者具有个人信息(例如 <code>xcuserdata</code>)的文件保存到 Git 里面。这就大大增加了查看 Git 修改历史的难度。因此，在项目初期就配置一个合适的 .gitignore 文件，能减轻后续的管理工作。</p>
<p>如何创建 .gitignore 文件呢？</p>
<p>我一般会在 <code>gitignore.io</code> 里面输入关键字，例如 Xcode，Swift 等，然后该网站会帮我们生成一个默认的 .gitignore 文件。咱们项目 Moments App 的.gitignore 文件你可以到<a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/.gitignore">拉勾教育的仓库中</a>查看。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/2021-03-17_10.24.47.png" alt="2021-03-17_10.24.47"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>以上，我们通过 Xcode、rbenv、RubyGems 和 Bundler 搭建一个统一的 iOS 开发和构建环境。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/2021-03-17_10.25.34.png" alt="2021-03-17_10.25.34"></p>
<p>再次强调下，为了让各个开发和构建环境能保持一致，我们要把 .ruby-version、 Gemfile 和 Gemfile.lock 文件通过 Git 统一管理起来，并共享给整个项目团队使用。</p>
<p>而且，由于我们的开发环境已经通过 Bundler 管理起来，今后，当使用各个 Gem 工具的时候，也需要使用 Bundler。例如在使用 CocoaPods 时要执行<code>bundle exec pod</code>，以保证我们使用的是项目级别而不是操作系统级别的 Gem 工具。</p>
<p><strong>源码地址：</strong></p>
<blockquote>
<p>README.md<br><a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/README.md">https://github.com/lagoueduCol/iOS-linyongjian/blob/main/README.md</a><br>Moments App 的.gitignore 文件<br><a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/.gitignore">https://github.com/lagoueduCol/iOS-linyongjian/blob/main/.gitignore</a></p>
</blockquote>
<h1 id="学习笔记与扩展"><a href="#学习笔记与扩展" class="headerlink" title="学习笔记与扩展"></a>学习笔记与扩展</h1><p>上文有提到过，目前流行的 Ruby 环境管理工具有 <code>RVM</code> 和 <code>rbenv</code>，文章中推荐使用的是 <code>rbenv</code>，但是，如果我们的团队已经有人使用 <code>RVM</code> 来管理ruby，因为 <strong>团队内部不能同时使用不同的 Ruby 环境管理工具，否则项目编译会出错</strong> ，所以，我们可能也需要使用 <code>RVM</code> 来管理ruby了。</p>
<p>下面我们就来了解一下 <code>RVM</code>。</p>
<p><a href="https://rvm.io/">RVM</a> 是一个命令行工具，它允许我们轻松安装、管理和使用从解释器到 gem 集的多个 ruby 环境。 </p>
<h2 id="RVM-安装"><a href="#RVM-安装" class="headerlink" title="RVM 安装"></a>RVM 安装</h2><p>首先，安装 <code>RVM</code> 需要使用 <code>gpg</code> 或者 <code>gpg2</code>，如果没有需要使用 <code>Homebrew</code> 进行安装：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">brew install gpg</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">brew install gpg2</span><br></pre></td></tr></table></figure>

<p>如果没有 <code>Homebrew</code> 可以用以下方法安装：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;</span></span><br></pre></td></tr></table></figure>

<p>安装完 <code>gpg</code> 、<code>gpg2</code>之后，需要安装 GPG keys：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span><br></pre></td></tr></table></figure>

<p>安装完 <code>GPG keys</code> ，就可以愉快地安装rvm了：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">curl -sSL <span class="attr">https</span>:<span class="comment">//get.rvm.io | bash -s stable</span></span><br></pre></td></tr></table></figure>

<p>安装成功之后，需要配置 <code>RVM</code> 开发环境，打开<code>~/.bash_profile</code> 或者 <code>~/.zshrc </code> 文件，在文件最后一行增加下面的内容：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">[[ -s<span class="string">&quot;$HOME/.rvm/scripts/rvm&quot;</span>]] &amp;&amp; source<span class="string">&quot;$HOME/.rvm/scripts/rvm&quot;</span># <span class="title class_">Load</span> <span class="variable constant_">RVM</span> into a shell session *<span class="keyword">as</span> afunction*</span><br></pre></td></tr></table></figure>

<p>至此，<code>RVM</code> 就算安装完成了，我们可以通过 <code>rvm -v</code> 代码验证安装</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/16786723453552.jpg"></p>
<h2 id="RVM-使用"><a href="#RVM-使用" class="headerlink" title="RVM 使用"></a>RVM 使用</h2><h3 id="查看可安装的Ruby版本"><a href="#查看可安装的Ruby版本" class="headerlink" title="查看可安装的Ruby版本"></a>查看可安装的Ruby版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm list known</span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/16786726089796.jpg"></p>
<h3 id="安装一个-Ruby-版本"><a href="#安装一个-Ruby-版本" class="headerlink" title="安装一个 Ruby 版本"></a>安装一个 Ruby 版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm install <span class="number">3.0</span><span class="number">.0</span> </span><br></pre></td></tr></table></figure>

<h3 id="查询已经安装的-Ruby-版本"><a href="#查询已经安装的-Ruby-版本" class="headerlink" title="查询已经安装的 Ruby 版本"></a>查询已经安装的 Ruby 版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm list</span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/16786729194881.jpg"></p>
<blockquote>
<p>=&gt; 指向的是当前使用ruby版本<br>=* 指向的是当前和默认ruby版本</p>
<ul>
<li>指向的是默认ruby版本</li>
</ul>
</blockquote>
<p>我们可以通过以下命令来进行切换：</p>
<h3 id="切换-Ruby-版本"><a href="#切换-Ruby-版本" class="headerlink" title="切换 Ruby 版本"></a>切换 Ruby 版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm use <span class="number">3.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>

<h3 id="设置默认-Ruby-版本"><a href="#设置默认-Ruby-版本" class="headerlink" title="设置默认 Ruby 版本"></a>设置默认 Ruby 版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm use <span class="number">3.0</span><span class="number">.0</span> --<span class="keyword">default</span></span><br></pre></td></tr></table></figure>

<h3 id="切换-Ruby-版本并设置为默认"><a href="#切换-Ruby-版本并设置为默认" class="headerlink" title="切换 Ruby 版本并设置为默认"></a>切换 Ruby 版本并设置为默认</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm use ext-ruby-<span class="number">3.0</span><span class="number">.0</span> --<span class="keyword">default</span></span><br></pre></td></tr></table></figure>

<h3 id="卸载已安装-Ruby-版本"><a href="#卸载已安装-Ruby-版本" class="headerlink" title="卸载已安装 Ruby 版本"></a>卸载已安装 Ruby 版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm remove <span class="number">3.0</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>

<h3 id="查看-Ruby-的安装目录"><a href="#查看-Ruby-的安装目录" class="headerlink" title="查看 Ruby 的安装目录"></a>查看 Ruby 的安装目录</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查看安装的 Ruby 目录</span></span><br><span class="line"><span class="comment">// -a：打印每个匹配文件名的所有匹配路径名</span></span><br><span class="line"><span class="comment">// which：通过搜索 PATH 环境变量中的路径来搜索与参数名称匹配的可执行文件</span></span><br><span class="line">which -a ruby</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">which ruby</span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/16786736350427.jpg"></p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/16786739572124.jpg"></p>
<h3 id="查看-rvm-命令帮助"><a href="#查看-rvm-命令帮助" class="headerlink" title="查看 rvm 命令帮助"></a>查看 rvm 命令帮助</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">rvm help </span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/01%20|%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%20Ruby%20%E5%B7%A5%E5%85%B7%E9%93%BE%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9F/16786740460740.jpg"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>02｜依赖管理：如何使用CocoaPods统一依赖库的管理？</title>
    <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="依赖管理：如何使用-CocoaPods-统一依赖库的管理？"><a href="#依赖管理：如何使用-CocoaPods-统一依赖库的管理？" class="headerlink" title="依赖管理：如何使用 CocoaPods 统一依赖库的管理？"></a>依赖管理：如何使用 CocoaPods 统一依赖库的管理？</h1><p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788496868852.jpg"></p>
<span id="more"></span>

<p>在 iOS App 开发方面，几乎所有的 App 都需要使用到第三方依赖库。依赖库不仅能为我们提供丰富的功能，还能避免我们从头开发，在节省时间的同时也减少许多 Bug 。</p>
<p>但伴随着软件功能越来越丰富，依赖库数量越来越多，由此也出现了“依赖地狱”，比如依赖库循环依赖，底层依赖库版本冲突等。为了解决此类问题，于是，依赖库管理工具也就出现了。</p>
<p>目前流行的依赖库管理工具主要有：<strong>Git Submodules</strong>、<strong>Carthage</strong>、 <strong>Swift Package Manager</strong> 和 <strong>CocoaPods</strong>。在这里我们选择 CocoaPods。为什么呢？原因有三：</p>
<ol>
<li><p>CocoaPods 非常成熟，十分稳定，并且简单易用，学习成本低，效果明显；</p>
</li>
<li><p>CocoaPods 会自动整合 Xcode 项目，使得其他项目成员在使用第三方库时无须任何额外的手工操作；</p>
</li>
<li><p>CocoaPods 已经成为 iOS 业界标准，支持几乎所有的开源库和商业库，即便是 Objective-C 的依赖库以及二进制文件（binary）依赖库，CocoaPods 也提供支持。</p>
</li>
</ol>
<p>那么，怎样使用 CocoaPods 来管理第三方依赖库呢？接下来我会从<strong>语义化版本管理</strong>、<strong>Pod 版本管理</strong>、<strong>Pod 版本更新</strong>三个方面展开介绍。</p>
<h2 id="语义化版本管理"><a href="#语义化版本管理" class="headerlink" title="语义化版本管理"></a>语义化版本管理</h2><p>开发软件，免不了要更新迭代，所以每一次更新的版本号管理变得很重要。并且，一旦版本号混乱，就会导致一系列问题，比如很难查找和修改线上崩溃，没办法支持多团队并行开发，等等。为了避免此类问题，我们可以使用语义化版本管理（Semantic Versioning）来统一版本号的定义规范。</p>
<p>语义化版本号是一种通用的版本号格式规范，目前绝大部分优秀的第三方依赖库都遵循这一规范来发布版本。</p>
<p>具体来说，语义化版本号的版本号一般包括四部分：<code>MAJOR、MINOR、PATCH、BUILD</code>。每一部分都由递增的数值组成，例如 1.2.3.4，其中 1 是MAJOR， 2 是 MINOR。如果我们更新 MINOR 版本号，那么下一个版本就是 1.3.0.0。接下来我详细介绍下这四部分。</p>
<ul>
<li><p><strong>MAJOR 是指主版本号</strong>，通常在重大更新的时候才会需要更新主版本号。例如 iOS 每年都会更新一个主版本号。而对于第三方库来说，主版本号的更新，表示该库的 API 新增了重大功能，或者引入了不可兼容的更新 （breaking changes）。</p>
</li>
<li><p><strong>MINOR 是指副版本号</strong>，用于小功能的改善。例如 iOS 14 在发布主版本后，在一年内可能发布多个副版本如 14.1、 14.2 来完善其系统功能。一般对于第三方库来说，副版本的更新就是新增一些 API，但不包含不可兼容的更新。</p>
</li>
<li><p><strong>PATCH 是指补丁版本号</strong>，一般用于 bug fix 以及修复安全性问题等。对于第三方库来说，补丁版本号的更新也不应该有不可兼容的更新。虽然实际操作中这会有些困难，但我们可以通过把原有 API 标记为 deprecated，或者为新 API 参数提供默认值等办法来解决。</p>
</li>
<li><p><strong>BUILD 是指构建版本号</strong>，通常在内部测试时使用。一般当我们使用 CI 服务器进行自动构建时，构建版本号会自动更新。</p>
</li>
</ul>
<h2 id="Pod-版本管理"><a href="#Pod-版本管理" class="headerlink" title="Pod 版本管理"></a>Pod 版本管理</h2><p>要使用 CocoaPods 管理第三方依赖库，首先要新建一个 Podfile 文件，然后执行 <code>bundle exec pod install</code> 命令来安装所有依赖库。这时候 CocoaPods 会自动帮我们建立一个 Podfile.lock 文件和一个 Workspace文档。</p>
<p>注意，在第一讲我们说过，由于是通过 Bundler 来安装 CocoaPods，每次执行<code>pod</code>命令前，都需要加上<code>bundle exec</code>。不过为了简洁，后面涉及<code>pod</code>命令时，我会省略<code>bundle exec</code>部分。</p>
<p>接下来，我详细介绍下 Podfile 文件、 Podfile.lock 和 Workspace 文档到底是什么，以及如何使用。</p>
<h3 id="Podfile-文件"><a href="#Podfile-文件" class="headerlink" title="Podfile 文件"></a>Podfile 文件</h3><p><code>Podfile</code> 文件是一个配置文件，它主要是用来描述 Xcode 项目里各个 target 的依赖库。我们项目的 Podfile 文件可以在<a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/Podfile">仓库中</a>找到。在这里，我主要和你介绍一下 Podfile 文件中的几个重要配置。</p>
<h3 id="source-配置"><a href="#source-配置" class="headerlink" title="source 配置"></a>source 配置</h3><p><code>source</code>用于指向 PodSpec（Pod 规范）文件的 Repo，从而使得 CocoaPods 能查询到相应的 PodSpec 文件。</p>
<p>具体来说，当使用公共依赖库的时候，source需要指向 CocoaPods Master Repo，这个主仓库集中存放所有公共依赖库的 PodSpec 文件。 由于 CocoaPods 经常被开发者吐槽 Pod 下载很慢，因此 CocoaPods 使用了 CDN （Content Delivery Network，内容分发网络）来缓存整个 CocoaPods Master Repo， 方便开发者快速下载。具体的配置方法就是使source指向 CND 的地址，代码示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">source <span class="string">&#x27;https://cdn.cocoapods.org/&#x27;</span></span><br></pre></td></tr></table></figure>

<p>如果使用的是私有依赖库，我们也需要把source指向私有库的 PodSpec Repo，以使得 CocoaPods 能找到相应的 PodSpec 文件。 代码示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">source <span class="string">&#x27;https://my-git-server.com/internal-podspecs&#x27;</span></span><br></pre></td></tr></table></figure>

<p>注意，当我们使用私有库时，执行pod install命令的机器必须能访问到source所指向的 Repo。</p>
<h3 id="project-和-workspace"><a href="#project-和-workspace" class="headerlink" title="project 和 workspace"></a>project 和 workspace</h3><p>project用于指定我们的主项目文档。该项目文档会使用到 CocoaPods 管理的所有第三方依赖库。</p>
<p>workspace用于指定要生成和更新的 Workspace 文档。和其他依赖库管理工具不一样，CocoaPods 会自动生成一个 Workspace 文档，然后我们只能使用该文档而不是 Xcode 项目文档来进行后续开发。</p>
<p>代码示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">project <span class="string">&#x27;./Moments/Moments.xcodeproj&#x27;</span></span><br><span class="line">workspace <span class="string">&#x27;./Moments.xcworkspace&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这其中 <code>Moments.xcodeproj</code> 就是我们的主项目文档，它一般放在和项目名字相同的下一层目录下。</p>
<p>而 <code>Moments.xcworkspace</code> 是 CocoaPods 为我们生成的 Workspace文档，为了统一，我建议名字也是和主项目相同。</p>
<h3 id="platform-和-use-frameworks"><a href="#platform-和-use-frameworks" class="headerlink" title="platform 和 use_frameworks"></a>platform 和 use_frameworks</h3><p>先看示例，它表示什么呢？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">platform :ios, <span class="string">&#x27;14.0&#x27;</span></span><br><span class="line">use_frameworks!</span><br></pre></td></tr></table></figure>

<p>为了保证所有依赖库与主项目在编译和运行时兼容，我们指定的系统版本号需要和主项目所支持的系统版本号保持一致。而<code>platform</code>就是用于指定操作系统以及所支持系统的最低版本号。比如，例子中的<code>platform :ios, &#39;14.0&#39;</code>就表示支持 iOS 14.0 以上的所有 iOS 版本。</p>
<p>另外一行的<code>use_frameworks!</code>这一配置会让 CocoaPods 把所有第三方依赖库打包生成一个动态加载库，而不是静态库。因为动态库是我们经常用到的，它能有效地加快编译和链接的速度。</p>
<h3 id="组织同类型的第三方依赖库"><a href="#组织同类型的第三方依赖库" class="headerlink" title="组织同类型的第三方依赖库"></a>组织同类型的第三方依赖库</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">def dev_pods</span><br><span class="line">  pod <span class="string">&#x27;SwiftLint&#x27;</span>, <span class="string">&#x27;0.40.3&#x27;</span>, <span class="attr">configurations</span>: [<span class="string">&#x27;Debug&#x27;</span>]</span><br><span class="line">  pod <span class="string">&#x27;SwiftGen&#x27;</span>, <span class="string">&#x27;6.4.0&#x27;</span>, <span class="attr">configurations</span>: [<span class="string">&#x27;Debug&#x27;</span>]</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>其中<code>configurations: [&#39;Debug&#39;]</code>用于指定该依赖库只是使用到<code>Debug</code>构建目标（target）里面，而不在其他（如<code>Release</code>）构建目标里面，这样做能有效减少 App Store 发布版本的体积。</p>
<p><code>def dev_pods end</code>代码块是“复用同一类依赖库方式”的意思，我们可以把同类型的依赖库都放进这个代码块里面。比如，我们的 Moments 项目中就分别有<code>dev_pods</code>（开发相关的库）,<code>core_pods</code>（核心库）以及<code>thirdparty_pods</code>(第三方库)等代码块定义。</p>
<h3 id="target-配置"><a href="#target-配置" class="headerlink" title="target 配置"></a>target 配置</h3><p>有了这些复用库定义以后，怎样使用到项目的构建目标（target）里面呢？下面就是一个例子。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">target <span class="string">&#x27;Moments&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  dev_pods</span><br><span class="line">  core_pods</span><br><span class="line">  # other pods...</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>我们可以把构建目标所使用的所有依赖库放进<code>target</code>代码块中间，上面中的<code>Moments</code>就是我们的 App 构建目标。该构建目标依赖了<code>dev_pods</code>和<code>core_pods</code>等各组依赖库。执行<code>pod install</code>的时候，CocoaPods 会把<code>dev_pods</code>代码块自动展开为<code>SwiftLint</code>和<code>SwiftGen</code>，那么<code>Moments</code>构建目标能使用<code>SwiftLint</code>和<code>SwiftGen</code>依赖库了。</p>
<h3 id="依赖库的版本"><a href="#依赖库的版本" class="headerlink" title="依赖库的版本"></a>依赖库的版本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;RxSwift&#x27;</span>, <span class="string">&#x27;= 5.1.1&#x27;</span></span><br><span class="line">pod <span class="string">&#x27;RxRelay&#x27;</span>, <span class="string">&#x27;= 5.1.1&#x27;</span></span><br></pre></td></tr></table></figure>

<p>在 CocoaPods 里面，每一个依赖库称为一个 Pod （注意这里首字母大写，Pod 指一个库），指定一个 Pod 的命令是<code>pod</code>（注意这里是小写，表示一条命令）。在 Podfile 里面我们可以通过这样的格式<code>pod &#39;RxSwift&#39;, &#39;= 5.1.1&#39;</code>来配置依赖库的版本号。其中，<code>RxSwift</code>或者<code>RxRelay</code>是依赖库的名字，<code>5.1.1</code>为版本号。这些库的名字以及版本号都可以在 CocoaPods 官网上找到。</p>
<p><strong>为了统一管理第三方依赖库的版本，我建议统一使用 <code>= </code>来锁定该依赖库的版本，这样就能保证每次执行<code>pod install</code>的时候都可以为同一个库下载同一个版本。</strong></p>
<p>除了 <code>=</code> 操作符以外，CocoaPods 还支持其他操作符来指定版本：</p>
<ul>
<li><p><code>&gt; 0.1</code>表示大于 0.1 的任何版本，这样可以包含 0.2 或者 1.0；</p>
</li>
<li><p><code>&gt;= 0.1</code>表示大于或等于 0.1 的任何版本；</p>
</li>
<li><p><code>&lt; 0.1</code>表示少于 0.1 的任何版本；</p>
</li>
<li><p><code>&lt;= 0.1</code>表示少于或等于 0.1 的任何版本；</p>
</li>
<li><p><code>~&gt; 0.1.2</code>表示大于 0.1.2 而且最高支持 0.1.* 的版本，但不包含 0.2 版本。</p>
</li>
</ul>
<p>这几个操作符相里面，<code>~&gt;</code>（Squiggy arrow）操作符更为常用，它是以最后一个部分的版本号（例子中 0.1.2 的最后一个部分是补丁版本号 ..2）来计算可以支持的最高版本号。</p>
<p>例如<code>~&gt; 0.1.2</code>表示 &gt;= 0.1.2 并且 &lt; 0.2.0，但不能等于 0.2.0， 因为 0.2.0 已经更新了副版本号而不仅仅是补丁版本号了。</p>
<p>另外一个例子是<code>~&gt; 0.1</code>，表示  &gt;= 0.1  并且 &lt; 1.0，举例来说，我们可以更新到 0.9 但不能更新到 1.0。</p>
<p>前面我介绍的是引用外部的第三方依赖库，如果我们的项目有自己的内部依赖库，要怎样在 CocoaPods 引用它呢？其实很简单，我们可以执行以下命令：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;DesignKit&#x27;</span>, :<span class="function"><span class="params">path</span> =&gt;</span> <span class="string">&#x27;./Frameworks/DesignKit&#x27;</span>, :<span class="function"><span class="params">inhibit_warnings</span> =&gt;</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>和其他外部依赖库不一样，我们需要使用<code>:path</code>来指定该内部库的路径。</p>
<h3 id="Podfile-lock-文件"><a href="#Podfile-lock-文件" class="headerlink" title="Podfile.lock 文件"></a>Podfile.lock 文件</h3><p><code>Podfile.lock</code> 文件是由 CocoaPods 自动生成和更新的，该文件会详细列举所有依赖库具体的版本号。比如，</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">DEPENDENCIES</span>:</span><br><span class="line">  - <span class="title class_">Alamofire</span> (= <span class="number">5.2</span><span class="number">.0</span>)</span><br><span class="line">  - <span class="title class_">Firebase</span>/<span class="title class_">Analytics</span> (= <span class="number">7.0</span><span class="number">.0</span>)</span><br><span class="line"><span class="variable constant_">PODFILE</span> <span class="attr">CHECKSUM</span>: 400d19dbc4f5050f438797c5c6459ca0ef74a777</span><br></pre></td></tr></table></figure>

<p>当执行<code>pod install</code>后，CocoaPods 会根据 Podfile 文件解释出各依赖库的特定版本号，然后一一列举在 <code>DEPENDENCIES</code> 下面。在上述的例子中，我们的 App 在构建过程中使用了5.2.0 的 Alamofire 库以及 7.0.0 的 Firebase Analytics 库。</p>
<p><code>PODFILE CHECKSUM</code> 用于记录 Podfile 的验证码，任何库的版本号的更改，都会改变该验证码。这样能帮助我们在不同的机器上，快速检测依赖库的版本号是否一致。</p>
<p>我建议要把 <code>Podfile</code> 和 <code>Podfile.lock</code> 文件一同 commit 并 push 到 Git 代码管理服务器里面。特别是在团队开发的环境下，这样能帮助我们保证各个依赖库版本号的一致性。</p>
<p>在实践操作中，无论我们在哪台机器上执行<code>pod install</code>， <code>PODFILE CHECKSUM</code> 都不应该发生任何改变。因为我们在 Git 保存了 <code>Podfile.lock</code>，一旦我们发现老版本 App 的 Bug ，就可以根据该文件为各个依赖库重新安装同一版本号，来重现和定位问题，从而帮助我们快速修改这些 Bug。</p>
<h3 id="Workspace-文档"><a href="#Workspace-文档" class="headerlink" title="Workspace 文档"></a>Workspace 文档</h3><p><code>Workspace</code> 文档是 Xcode 管理子项目的方式。通过 Workspace，我们可以把相关联的多个 Xcode 子项目组合起来方便开发。</p>
<p>前面说过，当我们执行<code>pod install</code>的时候，CocoaPods 会自动创建或者更新一个叫作 Pods 的项目文档（<code>Pods.xcodeproj</code> ）以及一个 Workspace 文档（在我们项目中叫作 <code>Moments.xcworkspace</code>）。</p>
<p>其中，Pods 项目文档负责统一管理各个依赖库，当我们在 Podfile 里面指定构建成动态库的时候，该项目会自动生成一个名叫<code>Pods_&lt;项目名称&gt;.framework</code>的动态库供我们项目使用。</p>
<p>而 Workspace 文档则统一管理了我们原有的主项目 （Moments.xcodeproj）以及那个 Pods 项目。</p>
<p>与此同时，CocoaPods 还会修改 Xcode 项目中的 <code>Build Phases</code>  以此来检测 <code>Podfile.lock</code> 和 <code>Manifest.lock</code> 文件的一致性，并把<code>Pods_&lt;项目名称&gt;.framework</code>动态库嵌入我们的主项目中去。</p>
<p>以上所有操作都是由 CocoaPods 自动帮我们完成。以后的开发，我们都可以打开 Workspace 文档而不是原有的 Xcode 项目文档来进行。</p>
<h2 id="Pod-版本更新"><a href="#Pod-版本更新" class="headerlink" title="Pod 版本更新"></a>Pod 版本更新</h2><p>使用 CocoaPods 管理第三方依赖库的操作非常简单，可是一旦使用不当，特别是在 Pod 更新的时候，很容易引起依赖库版本不一致，从而出现各种问题。</p>
<p>比如，在编译程序的时候，有些开发者可以顺利进行，而另外一些开发者编译时候就会出错；或者程序在本地编译时运行良好，一旦在 <code>CI</code> 上构建，就会出现 App 崩溃，等等。</p>
<p>那么，怎么保证更新 Pod 的时候都能保证版本一致呢？</p>
<p>下面结合我的实践经验，以第三方网络库 Alamofire 为例子和你介绍下。</p>
<p><strong>第一步</strong>，CocoaPods 已经为我们提供了<code>pod outdated</code>命令，我们可以用它一次查看所有 Pod 的最新版本，而无须到 GitHub 上逐一寻找。下面是执行<code>pod outdated</code>命令的其中一条结果：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">The</span> following pod updates are <span class="attr">available</span>:</span><br><span class="line">- <span class="title class_">Alamofire</span> <span class="number">5.2</span><span class="number">.0</span> -&gt; <span class="number">5.2</span><span class="number">.0</span> (latest version <span class="number">5.4</span><span class="number">.0</span>)</span><br></pre></td></tr></table></figure>

<p>这表示当前我们使用了版本为 5.2.0 的 Alamofire ，其最新版本为 5.4.0。如果我们决定更新到版本 5.4.0，那么可以继续下一步。</p>
<p><strong>第二步</strong>，在更新依赖库版本之前，为了避免在新版本中不小心引入 Bug，我们需要了解新的版本到底提供了哪些新功能，修改了哪些 Bug，与老版本是否兼容等事项。具体我们可以到 CocoaPods 官网上查找需要更新的第三方依赖库，然后在 GitHub 等平台上找到，并仔细阅读该库的版本说明（<code>release note</code>）。</p>
<p><code>请注意，我们要阅读当前使用版本到要更新的版本之间的所有版本说明</code>。 在这个例子中，我们要阅读 5.2.1，5.2.2，5.3.0 和 5.4.0 的所有版本说明。这些版本说明会列出新增功能，更新的 API，修改的 Bug，有没有不可兼容的更新 。</p>
<p><strong>第三步</strong>，在 Podfile 文件里把要更新的 Pod 的版本号进行修改。例如把<code>pod &#39;Alamofire&#39;, &#39;= 5.2.0&#39;</code>改成<code>pod &#39;Alamofire&#39;, &#39;= 5.4.0&#39;</code>。 然后执行pod install来重新生成 Podfile.lock 文件。</p>
<p>此时特别注意的是，我们要使用<code>pod install</code>而不是<code>pod update</code>。因为执行pod update会自动更新所有 Pod 的版本，这可能会更新了一些我们目前还不想更新的 Pod，从而会引入一些难以觉察的问题。</p>
<p><strong>第四步</strong>，如果所更新的版本包含了不可兼容的更新，我们需要修改代码来保证代码能顺利完成编译。</p>
<p><strong>第五步</strong>，很多第三方依赖库都是一些通用的基础组件，一旦发生问题会影响到整个 App 的功能，因此我们需要根据所更新的库进行回归测试。例如当更新了 Alamofire 库的时候，我们需要把每个网络请求都执行一遍，避免所更新的版本引入新的 Bug。</p>
<p><strong>第六步</strong>，为了把更新的版本共享给所有开发者和 CI 服务器，我们需要把 Podfile 和 Podfile.lock 文件一同 commit 并 push 到 Git 代码管理服务器，并通过 Pull Request 流程并入主分支。</p>
<p><strong>第七步</strong>，一旦更新的代码并入主分支后，要通过 Slack 等内部通信软件告诉所有开发者 pull 或者 rebase 主分支的代码，并执行pod install来更新他们开发环境的所有依赖库。</p>
<p><code>特别注意，千万不要使用pod update，因为pod update会自动把开发者机器上所有 Pod 的版本自动更新了</code>。这种更新往往不是我们想要的结果，我们希望统一更新各个 Pod 的版本，并通过 Git 进行集中管理。</p>
<p>如果开发者在编译新代码前没有执行pod install命令，会出现以下的错误。</p>
<blockquote>
<p>The sandbox is not in sync with the Podfile.lock. Run ‘pod install’ or update your CocoaPods installation.</p>
</blockquote>
<p>这错误可以有效提醒所有开发者，需要再次执行pod install来更新他们本地的依赖库，从而保证所有开发者使用的依赖库的版本都是一致的。</p>
<p>另外，如果更新了基础组件的依赖库（如网络库），在测试阶段，我们还需要进行全面的回归测试。因为这些基础组件库的新版本如果有 Bug 很可能导致我们的 App 会发生大比例的崩溃，严重影响用户的体验。</p>
<p>有了上面的一流程，我们就可以有效地保证每个开发者使用的依赖库版本都是一致的，同时也能保证 CI 在自动构建 App 的时候所使用的依赖库版本也是统一的。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这一讲我介绍了如何使用 CocoaPods 来统一管理依赖库的版本。特别是根据我自己的经验总结了一套更新 Pod 版本的流程，希望你灵活使用这些步骤，从而少走弯路。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788497199239.jpg"></p>
<p><strong>这里我再特别强调一下，为了保证依赖库版本都能保持一致，尽量不要执行pod update，而是使用通过修改 Podfile 文件里的版本号并执行pod install来更新 Pod 的版本，然后把 Podfile 和 Podfile.lock 文件一同并入 Git 主分支中进行统一管理。</strong></p>
<h3 id="源码地址："><a href="#源码地址：" class="headerlink" title="源码地址："></a>源码地址：</h3><blockquote>
<p>Podfile 文件地址：<br><a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/Podfile">https://github.com/lagoueduCol/iOS-linyongjian/blob/main/Podfile</a></p>
</blockquote>
<h1 id="学习笔记与扩展"><a href="#学习笔记与扩展" class="headerlink" title="学习笔记与扩展"></a>学习笔记与扩展</h1><h2 id="Carthage-的简单使用"><a href="#Carthage-的简单使用" class="headerlink" title="Carthage 的简单使用"></a>Carthage 的简单使用</h2><h3 id="一、安装-Carthage："><a href="#一、安装-Carthage：" class="headerlink" title="一、安装 Carthage："></a>一、安装 Carthage：</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">brew install carthage</span><br><span class="line"><span class="comment">// 查看版本</span></span><br><span class="line">carthage version</span><br><span class="line"><span class="comment">// 升级</span></span><br><span class="line">brew upgrade carthage</span><br><span class="line"><span class="comment">// 卸载</span></span><br><span class="line">brew uninstall carthage</span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788497339391.jpg"></p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788497595924.jpg"></p>
<h3 id="二、使用-Carthage-下载三方库"><a href="#二、使用-Carthage-下载三方库" class="headerlink" title="二、使用 Carthage 下载三方库"></a>二、使用 Carthage 下载三方库</h3><h4 id="1、在工程文件里创建-Cartfile-文件"><a href="#1、在工程文件里创建-Cartfile-文件" class="headerlink" title="1、在工程文件里创建 Cartfile 文件:"></a>1、在工程文件里创建 Cartfile 文件:</h4><p><code>cd</code> 到工程目录下，然后执行如下命令：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建 Cartfile 文件</span></span><br><span class="line">touch <span class="title class_">Cartfile</span></span><br><span class="line"><span class="comment">// 使用 Xcode 命令打开 Cartfile 文件</span></span><br><span class="line">open -a <span class="title class_">Xcode</span> <span class="title class_">Cartfile</span></span><br></pre></td></tr></table></figure>

<h4 id="2、在-Cartfile-文件添加依赖库"><a href="#2、在-Cartfile-文件添加依赖库" class="headerlink" title="2、在 Cartfile 文件添加依赖库"></a>2、在 Cartfile 文件添加依赖库</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">github <span class="string">&quot;SnapKit/SnapKit&quot;</span> ~&gt; <span class="number">5.6</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788497742378.jpg"></p>
<p>版本含义：如果没有指明版本号，则会自动使用最新的版本</p>
<ul>
<li><code>~&gt;5.0</code>：表示使用版本 <code>5.0</code> 以上但是低于 <code>6.0</code> 的最新版本，如 <code>5.1</code> ，<code>5.4</code></li>
<li><code>==5.0</code>：表示使用 <code>5.0</code> 版本</li>
<li><code>&gt;=5.0</code>：表示使用 <code>5.0</code> 或更高的版本</li>
</ul>
<h4 id="3、保存-Cartfile-文件，然后执行安装"><a href="#3、保存-Cartfile-文件，然后执行安装" class="headerlink" title="3、保存 Cartfile 文件，然后执行安装"></a>3、保存 Cartfile 文件，然后执行安装</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下载添加依赖库的第三方框架</span></span><br><span class="line">carthage update</span><br></pre></td></tr></table></figure>

<p>执行成功之后，会在工程目录里生成一个 <code>Carthage</code> 的文件夹，里面有自动生成的 <code>framework</code>:</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788497876744.jpg"></p>
<ul>
<li>有时候 Carthage 更新会出现 arm64 报错：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">A shell task (<span class="regexp">/usr/</span>bin/xcrun lipo -create /<span class="title class_">Users</span>/coming_ay/<span class="title class_">Library</span>/<span class="title class_">Caches</span>/org.<span class="property">carthage</span>.<span class="property">CarthageKit</span>/<span class="title class_">DerivedData</span>/<span class="number">12.5</span><span class="number">.1_12E507</span>/<span class="title class_">Alamofire</span>/<span class="number">5.4</span><span class="number">.4</span>/<span class="title class_">Build</span>/<span class="title class_">Intermediates</span>.<span class="property">noindex</span>/<span class="title class_">ArchiveIntermediates</span>/<span class="title class_">Alamofire</span>\ iOS/<span class="title class_">IntermediateBuildFilesPath</span>/<span class="title class_">UninstalledProducts</span>/iphoneos/<span class="title class_">Alamofire</span>.<span class="property">framework</span>/<span class="title class_">Alamofire</span> /<span class="title class_">Users</span>/coming_ay/<span class="title class_">Library</span>/<span class="title class_">Caches</span>/org.<span class="property">carthage</span>.<span class="property">CarthageKit</span>/<span class="title class_">DerivedData</span>/<span class="number">12.5</span><span class="number">.1_12E507</span>/<span class="title class_">Alamofire</span>/<span class="number">5.4</span><span class="number">.4</span>/<span class="title class_">Build</span>/<span class="title class_">Products</span>/<span class="title class_">Release</span>-iphonesimulator/<span class="title class_">Alamofire</span>.<span class="property">framework</span>/<span class="title class_">Alamofire</span> -output /<span class="title class_">Users</span>/coming_ay/<span class="title class_">Desktop</span>/AY_Project/<span class="number">123456</span>/<span class="title class_">Carthage</span>/<span class="title class_">Build</span>/iOS/<span class="title class_">Alamofire</span>.<span class="property">framework</span>/<span class="title class_">Alamofire</span>) failed <span class="keyword">with</span> exit code <span class="number">1</span>:</span><br><span class="line">fatal <span class="attr">error</span>: <span class="regexp">/Applications/</span><span class="title class_">Xcode</span>.<span class="property">app</span>/<span class="title class_">Contents</span>/<span class="title class_">Developer</span>/<span class="title class_">Toolchains</span>/<span class="title class_">XcodeDefault</span>.<span class="property">xctoolchain</span>/usr/bin/<span class="attr">lipo</span>: <span class="regexp">/Users/</span>coming_ay/<span class="title class_">Library</span>/<span class="title class_">Caches</span>/org.<span class="property">carthage</span>.<span class="property">CarthageKit</span>/<span class="title class_">DerivedData</span>/<span class="number">12.5</span><span class="number">.1_12E507</span>/<span class="title class_">Alamofire</span>/<span class="number">5.4</span><span class="number">.4</span>/<span class="title class_">Build</span>/<span class="title class_">Intermediates</span>.<span class="property">noindex</span>/<span class="title class_">ArchiveIntermediates</span>/<span class="title class_">Alamofire</span> iOS/<span class="title class_">IntermediateBuildFilesPath</span>/<span class="title class_">UninstalledProducts</span>/iphoneos/<span class="title class_">Alamofire</span>.<span class="property">framework</span>/<span class="title class_">Alamofire</span> and /<span class="title class_">Users</span>/coming_ay/<span class="title class_">Library</span>/<span class="title class_">Caches</span>/org.<span class="property">carthage</span>.<span class="property">CarthageKit</span>/<span class="title class_">DerivedData</span>/<span class="number">12.5</span><span class="number">.1_12E507</span>/<span class="title class_">Alamofire</span>/<span class="number">5.4</span><span class="number">.4</span>/<span class="title class_">Build</span>/<span class="title class_">Products</span>/<span class="title class_">Release</span>-iphonesimulator/<span class="title class_">Alamofire</span>.<span class="property">framework</span>/<span class="title class_">Alamofire</span> have the same architectures (arm64) and can<span class="string">&#x27;t be in the same fat output file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Building universal frameworks with common architectures is not possible. The device and simulator slices for &quot;Alamofire&quot; both build for: arm64</span></span><br><span class="line"><span class="string">Rebuild with --use-xcframeworks to create an xcframework bundle instead.</span></span><br></pre></td></tr></table></figure>

<ul>
<li>根据提示终端重新输入：</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 不区分iOS、macOS</span></span><br><span class="line">carthage update --use-xcframeworks</span><br><span class="line"><span class="comment">// 只限iOS</span></span><br><span class="line">carthage update --platform iOS --use-xcframeworks</span><br></pre></td></tr></table></figure>

<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788498111841.jpg"></p>
<h3 id="三、将下载三方框架集成到项目"><a href="#三、将下载三方框架集成到项目" class="headerlink" title="三、将下载三方框架集成到项目"></a>三、将下载三方框架集成到项目</h3><h4 id="1、添加-framework-文件："><a href="#1、添加-framework-文件：" class="headerlink" title="1、添加 framework 文件："></a>1、添加 framework 文件：</h4><p>打开工程文件中的iOS文件夹 -&gt; 将 framework 文件拖入到项目 General 中的 Frameworks，Libraries 中</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788498234874.jpg"></p>
<h4 id="2、添加编译脚本："><a href="#2、添加编译脚本：" class="headerlink" title="2、添加编译脚本："></a>2、添加编译脚本：</h4><p><strong>Target -&gt; Build Phases -&gt; 点击 + -&gt; New Run Script Phase</strong> -&gt; 添加如下脚本：</p>
<p><code>/usr/local/bin/carthage copy-frameworks</code></p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788498355244.jpg"></p>
<h4 id="3、编译，导入头文件使用"><a href="#3、编译，导入头文件使用" class="headerlink" title="3、编译，导入头文件使用"></a>3、编译，导入头文件使用</h4><p>编译，然后导入头文件使用，但是可能会出现如下错误：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788498494980.jpg"></p>
<p>这是因为，我使用的是模拟器运行，但是导入的却是 iOS 真机的 framework，这时候我们需要将原来的 framework 删除，然后导入模拟器 framework。找到如下目录然后拖入：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788498611867.jpg"></p>
<p>然后，我们再次编译运行，就可以成功了，效果如下：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/02%EF%BD%9C%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%E7%BB%9F%E4%B8%80%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%9F/16788498763007.jpg"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>03 | 配置准备：如何搭建多环境支持，为 App 开发作准备</title>
    <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/</url>
    <content><![CDATA[<h1 id="一、配置准备：如何搭建多环境支持，为-App-开发作准备"><a href="#一、配置准备：如何搭建多环境支持，为-App-开发作准备" class="headerlink" title="一、配置准备：如何搭建多环境支持，为 App 开发作准备"></a>一、配置准备：如何搭建多环境支持，为 App 开发作准备</h1><p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788668316765.jpg"></p>
<span id="more"></span>

<p>在开始之前，我先问你几个问题，在测试的时候，App 一般需要连接测试服务器，那么在上架后，还需要连生产服务器吗？在发布前，你的 App 需要通过 <code>Ad-hoc </code>分发给内部测试组吗？在发布到 <code>App Store</code> 的时候，你的 App 需要同时支持免费版和收费版吗？</p>
<p>如果你的回答是<code>“是”</code>，那么你的 App 就需要搭建多环境支持，优化开发的工作流程。多环境提供很多好处，比如能基于同一套源代码自动构建出有差异功能的 App；能支持多个团队并行开发，也能分离测试和生产环境，提高产品的迭代速度，保证上架的 App 通过严格测试和功能验证。</p>
<p>在 Moments App 项目中，我们就使用了三个不同的环境，分别是<code>开发环境</code>，<code>测试环境</code>和<code>生产环境</code>。它们到底有什么区别呢？</p>
<ul>
<li><p><strong>开发环境</strong>， 用于日常的开发，一般有未完成的功能模块。编译时，也不进行任何优化，可以打印更多的日志，帮助开发者快速定位问题。</p>
</li>
<li><p><strong>测试环境</strong>， 主要是用于测试，以及为产品经理进行功能验证，包括部分完成的功能模块，也提供一些隐藏功能，方便我们进行开发和迭代，例如快速切换用户，清理 Cache，连接到不同后台服务器等等。</p>
</li>
<li><p><strong>生产环境</strong>， 只包含通过了测试并验证过的功能模块，它是最终提交到 App Store 供终端用户使用的版本。</p>
</li>
</ul>
<p>多环境支持需要用到 Xcode 的构建配置，这一讲，我就结合 Moments App 项目来聊聊这个问题。</p>
<h2 id="Xcode-构建基础概念"><a href="#Xcode-构建基础概念" class="headerlink" title="Xcode 构建基础概念"></a>Xcode 构建基础概念</h2><p>一般在构建一个 iOS App 的时候，需要用到 <code>Xcode Project</code>，<code>Xcode Target</code>，<code>Build Settings</code>，<code>Build Configuration</code> 和 <code>Xcode Scheme</code> 等构建配置。它们各有什么用呢？</p>
<h3 id="Xcode-Project"><a href="#Xcode-Project" class="headerlink" title="Xcode Project"></a>Xcode Project</h3><p><code>Xcode Project</code>用于组织源代码文件和资源文件。一个 Project 可以包含多个 Target，例如当我们新建一个 Xcode Project 的时候，它会自动生成 App 的主 Target，Unit Test Target 和 UI Test Target。</p>
<p>在 Moments App 项目中，主 Target 就是 Moments，Unit Test Target 是 MomentsTests， UI Test Target 就是 MomentsUITests。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788669693800.jpg"></p>
<h3 id="Xcode-Target"><a href="#Xcode-Target" class="headerlink" title="Xcode Target"></a>Xcode Target</h3><p><code>Xcode Target</code>用来定义如何构建出一个产品（例如 <code>App</code>， <code>Extension</code> 或者 <code>Framework</code>），Target 可以指定需要编译的源代码文件和需要打包的资源文件，以及构建过程中的步骤。</p>
<p>例如在我们的 Moments App 项目中，负责单元测试的MomentsTestsTarget 就指定了 14 个测试文件需要构建（见下图的 Compile Sources），并且该 Target 依赖了主 App TargetMoments（见下图的 Dependencies）。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788669841278.jpg"></p>
<p>有了 Target 的定义，构建系统就可以读取相关的源代码文件进行编译，然后把相关的资源文件进行打包，并严格按照 Target 所指定的设置和步骤执行。那么 Target 所指定的设置哪里来的呢？来自 Build Settings。</p>
<h3 id="Build-Settings"><a href="#Build-Settings" class="headerlink" title="Build Settings"></a>Build Settings</h3><p><code>Build Setting</code>保存了构建过程中需要用到的信息，它以一个变量的形式而存在，例如所支持的设备平台，或者支持操作系统的最低版本等。</p>
<p>通常，一条 Build Setting 信息由两部分组成：名字和值。比如下面是一条 Setting 信息，<code>iOS Development Target</code>是名字，而<code>iOS 14.0</code>是值。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788670287057.jpg"></p>
<p>有了这些基础知识以后，接下来我就结合 Moments App 来和你介绍下如何进行多环境配置，从而生成不同环境版本的 App。</p>
<h2 id="Moments-App-构建配置"><a href="#Moments-App-构建配置" class="headerlink" title="Moments App 构建配置"></a>Moments App 构建配置</h2><p>一般用 Xcode 编译出不同环境版本的 App 有多种办法，例如拷贝复制所有源代码，建立多个 Target 来包含不同的源码文件等等。不过，在这里我推荐使用 <code>Build Configuration</code> 和 <code>Xcode Scheme</code> 来管理多环境，进而构建出不同环境版本的 App。为什么？因为这两个是目前管理成本最低的办法。接下来我一一介绍下。</p>
<h3 id="Build-Configuration"><a href="#Build-Configuration" class="headerlink" title="Build Configuration"></a>Build Configuration</h3><p>当我们在 Xcode 上新建一个项目的时候，Xcode 会自动生成两个 Configuration：<code>Debug</code>和<code>Release</code>。Debug 用于日常的本地开发，Release 用于构建和分发 App。而在我们的 Moments App 项目中，有三个 configuration：<code>Debug</code>，<code>Internal</code> 和 <code>AppStore</code>。它们分别用于构建<code>开发环境</code>、<code>测试环境</code>和<code>生产环境</code>。 其中 Internal 和 AppStore 是从自动生成的 Release 拷贝而来的。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788670470474.jpg"></p>
<p>那什么是 Build Configuration 呢？</p>
<p><code>Build Configuration</code>就是一组 Build Setting。 我们可以通过 Build Configuration 来分组和管理不同组合的 Build Setting 集合，然后传递给 Xcode 构建系统进行编译。</p>
<p>有了 Build Configuration 以后，我们就能为同一个 Build Setting 设置不同的值。例如<code>Build Active Architecture Only</code>在 Debug configuration 是<code>Yes</code>，而在 Internal 和 AppStore configuration 则是<code>No</code>。这样就能做到同一份源代码通过使用不同的 Build Configuration 来构建出功能不一样的 App 了。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788670611837.jpg"></p>
<p>那么，在构建过程中怎样才能选择不同的 Build Configuration 呢？答案是使用 Xcode Scheme。</p>
<h3 id="Xcode-Scheme"><a href="#Xcode-Scheme" class="headerlink" title="Xcode Scheme"></a>Xcode Scheme</h3><p><code>Xcode Scheme</code>用于定义一个完整的构建过程，其包括指定哪些 Target 需要进行构建，构建过程中使用了哪个 Build Configuration ，以及需要执行哪些测试案例等等。在项目新建的时候只有一个 Scheme，但可以为同一个项目建立多个 Scheme。不过这么多 Scheme 中，同一时刻只能有一个 Scheme 生效。</p>
<p>我们一起看一下 Moments App 项目的 Scheme 吧。 Moments App 项目有三个 Scheme 来分别代表三个环境，<code>Moments Scheme</code> 用于开发环境，<code>Moments-Internal Scheme</code> 用于测试环境，而 <code>Moments-AppStore Scheme</code> 用于生产环境。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788670751535.jpg"></p>
<p>下面是<code>MomentsScheme</code> 的配置。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788670865410.jpg"></p>
<p>左边是该 Scheme 的各个操作，如当前选择了 Build 操作；右边是对应该操作的配置，比如 Build 对应的 Scheme 可以构建三个不同的 Targets。不同的 Scheme 所构建的 Target 数量可以不一样，例如下面是<code>Moments-InternalScheme</code> 的配置。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788670987138.jpg"></p>
<p>该 Scheme 只构建主 App TargetMoments，而不能构建其他两个测试 Target。</p>
<p>当我们选择 Run、Test、Profile、 Analyze 和 Archive 等操作时，在右栏有一个很关键的配置<br>叫作 Build Configuration，我们可以通过下拉框来选择 Moments App 项目里面三个 Configuration （Debug，Internal 和 AppStore） 中的其中一个。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788671106806.jpg"></p>
<p>为了方便管理，我们通常的做法是，一个 <code>Scheme</code> 对应一个 <code>Configuration</code>。有了这三个 Scheme 以后，我们就可以很方便地构建出 <code>Moments α（开发环境）</code>，<code>Moments β（测试环境</code>）和 <code>Moments（生产环境）</code>三个功能差异的 App。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788671219745.jpg"></p>
<p>你可能已经注意到这三个 App 的名字都不一样，怎么做到的呢？实际上是我们为不同的 Configuration 设置了不一样的 Build Setting。其中决定 App 名字的 Build Setting 叫作<code>PRODUCT_BUNDLE_NAME</code>，然后在 <code>Info.plist</code> 文件里面为 <code>Bundle name</code> 赋值，就能构建出名字不一样的 App。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788671327468.jpg"></p>
<p>为了构建出不同环境版本的 App，我们需要经常为各个 Build Configuration 下的 Build Setting 设置不一样的值。 在这其中，使用好 xcconfig 配置文件就显得非常重要。</p>
<h2 id="xcconfig-配置文件"><a href="#xcconfig-配置文件" class="headerlink" title="xcconfig 配置文件"></a>xcconfig 配置文件</h2><p>xcconfig 会起到什么作用呢？</p>
<p>一般修改 Build Setting 的办法是在 Xcode 的 Build Settings 界面上进行。 例如下面的例子中修改 Suppress Warnings。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788671456874.jpg"></p>
<p>这样做有一些不好的地方，首先是手工修改很容易出错，例如有时候很难看出来修改的 Setting 到底是 Project 级别的还是 Target 级别的。其次，最关键的是每次修改完毕以后都会修改了 xcodeproj 项目文档 （如下图所示），导致 Git 历史很难查看和对比。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788671580857.jpg"></p>
<p>幸运的是，Xcode 为我们提供了一个统一管理这些 Build Setting 的便利方法，那就是使用 xcconfig 配置文件来管理。</p>
<h3 id="xcconfig-概念及其作用"><a href="#xcconfig-概念及其作用" class="headerlink" title="xcconfig 概念及其作用"></a>xcconfig 概念及其作用</h3><p><code>xcconfig</code>也叫作 <code>Build configuration file（构建配置文件）</code>，我们可以使用它来为 Project 或 Target 定义一组 Build Setting。由于它是一个纯文本文件，我们可以使用 Xcode 以外的其他文本编辑器来修改，而且可以保存到 Git 进行统一管理。 这样远比我们在 Xcode 的 Build Settings 界面上手工修改要方便很多，而且还不容易出错。</p>
<p>在 xcconfig 文件里面的每一条 Setting 都是下面的格式：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">BUILD_SETTING_NAME</span> = value</span><br></pre></td></tr></table></figure>

<p>其中，<code>BUILD_SETTING_NAME</code>表示 Build Setting 的名字，而value是该 Setting 的值。下面是一个例子。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">SWIFT_VERSION</span> = <span class="number">5.0</span></span><br></pre></td></tr></table></figure>

<p><code>SWIFT_VERSION</code>是用于定义 Swift 语言版本的 Build Setting，其值是<code>5.0</code>。Setting 的名字都是由大写字母，数值和下划线组成。这种命名法我们一般称为<code>蛇型命名法</code>，例如<code>SNAKE_CASE_NAME</code>。</p>
<p>当我们使用 xcconfig 时，Xcode 构建系统会按照下面的优先级来计算出 Build Setting 的最后生效值：</p>
<ol>
<li><p><strong>Platform Defaults</strong> (平台默认值)</p>
</li>
<li><p><strong>Xcode Project xcconfig File</strong>（Project 级别的 xcconfig 文件）</p>
</li>
<li><p><strong>Xcode Project File Build Settings</strong>（Project 级别的手工配置的 Build Setting）</p>
</li>
<li><p><strong>Target xcconfig File</strong> （Target 级别的 xcconfig 文件）</p>
</li>
<li><p><strong>Target Build Settings</strong>（Target 级别的手工配置的 Build Setting）</p>
</li>
</ol>
<p>Xcode 构建系统会按照上述列表从上而下读取 Build Setting，如果发现同样的 Setting ，就会把下面的 Setting 覆盖掉上面的，越往下优先级别越高。</p>
<p>例如我们在 Project 级别的 xcconfig 文件配置了<code>SWIFT_VERSION = 5.0</code>而在Target 级别的 xcconfig 文件配置了<code>SWIFT_VERSION = 5.1</code>，那么Target 级别的 Build Setting 会覆盖 Project 级别的<code>SWIFT_VERSION</code>设置，最终<code>SWIFT_VERSION</code>生效的值是<code>5.1</code>。</p>
<p>那么，要怎样做才能做到不覆盖原有的 Build Setting 呢？我们可以使用下面例子中的<code>$(inherited)</code>来实现。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">BUILD_SETTING_NAME</span> = $(inherited) additional value</span><br></pre></td></tr></table></figure>

<p>可以保留原先的 Setting，然后把新的值添加到后面去。比如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">FRAMEWORK_SEARCH_PATHS</span> = $(inherited) ./<span class="title class_">Moments</span>/<span class="title class_">Pods</span></span><br></pre></td></tr></table></figure>

<p>其中的<code>FRAMEWORK_SEARCH_PATHS</code>会保留原有的值，然后加上<code>./Moments/Pods</code>作为新值。<br>在配置 Build Setting 时，还可以引用其他已定义的 Build Setting。</p>
<p>例如下面的例子中，<code>FRAMEWORK_SEARCH_PATHS</code>使用了另外一个 Build Setting <code>PROJECT_DIR</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">FRAMEWORK_SEARCH_PATHS</span> = $(inherited) $(<span class="variable constant_">PROJECT_DIR</span>)</span><br></pre></td></tr></table></figure>

<p>为了重用，我们可以通过<code>#include</code>引入其他 xcconfig 文件。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;path/to/OtherFile.xcconfig&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Moments-App-xcconfig-配置文件"><a href="#Moments-App-xcconfig-配置文件" class="headerlink" title="Moments App xcconfig 配置文件"></a>Moments App xcconfig 配置文件</h3><p>下面我们一起来看看 Moments App 项目是怎样管理 xcconfig 配置文件吧。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788671799157.jpg"></p>
<p>我们把所有 xcconfig 文件分成三大类：<code>Shared</code>、 <code>Project</code> 和 <code>Targets</code>。</p>
<p>其中 Shared 文件夹用于保存分享到整个 App 的 Build Setting，例如 Swift 的版本号、App 所支持的 iOS 版本号等各种共享的基础信息。 下面是 <code>SDKAndDeviceSupport.xcconfig</code> 文件里面所包含的信息：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">TARGETED_DEVICE_FAMILY</span> = <span class="number">1</span></span><br><span class="line"><span class="variable constant_">IPHONEOS_DEPLOYMENT_TARGET</span> = <span class="number">14.0</span></span><br></pre></td></tr></table></figure>

<p><code>TARGETED_DEVICE_FAMILY</code>表示支持的设备，<code>1</code>表示 <code>iPhone</code>。<br>而<code>IPHONEOS_DEPLOYMENT_TARGET</code>表示支持 iOS 的最低版本，我们的 Moments App 所支持的最低版本是 <code>iOS 14.0</code>。</p>
<p>Project 文件夹用于保存 Xcode Project 级别的 Build Setting，其中 BaseProject.xcconfig 会引入 Shared 文件夹下所有的 xcconfig 配置文件，如下所示：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;CompilerAndLanguage.xcconfig&quot;</span></span><br><span class="line">#include <span class="string">&quot;SDKAndDeviceSupport.xcconfig&quot;</span></span><br><span class="line">#include <span class="string">&quot;BaseConfigurations.xcconfig&quot;</span></span><br></pre></td></tr></table></figure>

<p>然后我们会根据三个不同的环境分别建了三个xcconfig 配置文件，如下：</p>
<ul>
<li>DebugProject.xcconfig 文件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;BaseProject.xcconfig&quot;</span></span><br><span class="line"><span class="variable constant_">SWIFT_ACTIVE_COMPILATION_CONDITIONS</span> = $(inherited) <span class="variable constant_">DEBUG</span></span><br></pre></td></tr></table></figure>

<ul>
<li>InternalProject.xcconfig 文件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;BaseProject.xcconfig&quot;</span></span><br><span class="line"><span class="variable constant_">SWIFT_ACTIVE_COMPILATION_CONDITIONS</span> = $(inherited) <span class="variable constant_">INTERNAL</span></span><br></pre></td></tr></table></figure>

<ul>
<li>AppStoreProject.xcconfig 文件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;BaseProject.xcconfig&quot;</span></span><br><span class="line"><span class="variable constant_">SWIFT_ACTIVE_COMPILATION_CONDITIONS</span> = $(inherited) <span class="variable constant_">PRODUCTION</span></span><br></pre></td></tr></table></figure>

<p>它们的共同点是都引入了用于共享的 BaseProject.xcconfig 文件，然后分别定义了 Swift 编译条件配置<code>SWIFT_ACTIVE_COMPILATION_CONDITIONS</code>。其中<code>$(inherited)</code>表示继承原有的配置，<code>$(inherited)</code>后面的<code>DEBUG</code>或者<code>INTERNAL</code>表示在原有配置的基础上后面添加了一个新条件。有了这些编译条件，我们就可以在代码中这样使用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#<span class="keyword">if</span> <span class="variable constant_">DEBUG</span></span><br><span class="line">    <span class="title function_">print</span>(<span class="string">&quot;Debug Environment&quot;</span>)</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>

<p>该段代码只在开发环境执行，因为只有开发环境的<code>SWIFT_ACTIVE_COMPILATION_CONDITIONS</code>才有<code>DEBUG</code>的定义。这样做能有效分离各个环境，保证同一份代码构建出对应不同环境的 App。</p>
<p>Targets 文件夹用于保存 Xcode Target 级别的 Build Setting，也是由一个 BaseTarget.xcconfig 文件来共享所有 Target 都需要使用的信息。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_NAME</span> = <span class="title class_">Moments</span></span><br></pre></td></tr></table></figure>

<p>这里的<code>PRODUCT_BUNDLE_NAME</code>是 App 的名字。<br>下面是三个不同环境的 Target xcconfig 文件。</p>
<ul>
<li>DebugTarget.xcconfig</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;../Pods/Target Support Files/Pods-Moments/Pods-Moments.debug.xcconfig&quot;</span></span><br><span class="line">#include <span class="string">&quot;BaseTarget.xcconfig&quot;</span></span><br><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_NAME</span> = $(inherited) α</span><br><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_IDENTIFIER</span> = com.<span class="property">ibanimatable</span>.<span class="property">moments</span>.<span class="property">development</span></span><br></pre></td></tr></table></figure>

<ul>
<li>InternalTarget.xcconfig</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;../Pods/Target Support Files/Pods-Moments/Pods-Moments.internal.xcconfig&quot;</span></span><br><span class="line">#include <span class="string">&quot;BaseTarget.xcconfig&quot;</span></span><br><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_NAME</span> = $(inherited) β</span><br><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_IDENTIFIER</span> = com.<span class="property">ibanimatable</span>.<span class="property">moments</span>.<span class="property">internal</span></span><br></pre></td></tr></table></figure>

<ul>
<li>AppStoreTarget.xcconfig</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#include <span class="string">&quot;../Pods/Target Support Files/Pods-Moments/Pods-Moments.appstore.xcconfig&quot;</span></span><br><span class="line">#include <span class="string">&quot;BaseTarget.xcconfig&quot;</span></span><br><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_NAME</span> = $(inherited)</span><br><span class="line"><span class="variable constant_">PRODUCT_BUNDLE_IDENTIFIER</span> = com.<span class="property">ibanimatable</span>.<span class="property">moments</span></span><br></pre></td></tr></table></figure>

<p>它们都需要引入 CocoaPods 所生成的 xcconfig 和共享的 BaseTarget.xcconfig 文件，然后根据需要改写 App 的名字。例如DebugTarget 覆盖了<code>PRODUCT_BUNDLE_NAME</code>的值为<code>Moments α*</code>, 其所构建的 App 叫作<code>Moments α</code>。</p>
<p>一般在 App Store 上所有 App 的标识符都必须是唯一的。如果你的项目通过 Configuration 和 Scheme 来生成免费版和收费版的 App，那么，你必须在两个 Configuration 中分别为<code>PRODUCT_BUNDLE_IDENTIFIER</code>配置对应的标识符，例如<code>com.lagou.free</code>和<code>com.lagou.paid</code>。</p>
<p>在 Moments App 中，我们也为各个环境下的 App 使用了不同的标识符，以方便我们通过 CI 自动构建，并分发到内部测试组或者 App Store。同时，这也能为各个环境版本的 App 分离用户行为数据，方便统计分析。</p>
<p>一旦有了这些 xcconfig 配置文件，今后我们就可以在 Xcode 的 Project Info 页面里的 Configurations 上引用它们。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788672041808.jpg"></p>
<p>下面是所有 Configurations 所引用的 xcconfig 文件。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788672157238.jpg"></p>
<p>在配置好所有 xcconfig 文件的引用以后，可以在 Build Settings 页面查看某个 Build Setting 的生效值。我们以<code>IPHONEOS_DEPLOYMENT_TARGET</code>为例，一起看看。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788672309236.jpg"></p>
<p>当我们选择<code>All</code>和<code>Levels</code>时，可以看到所有配置信息分成了不同的列。这些列分别代表前面的 Build Setting 优先级：</p>
<ol>
<li><p>平台默认值</p>
</li>
<li><p>Project 级别的 xcconfig 文件</p>
</li>
<li><p>Xcode 项目文件中的 Project 级别配置</p>
</li>
<li><p>Target 级别的 xcconfig 文件</p>
</li>
<li><p>Xcode 项目文件中的 Target 级别配置</p>
</li>
</ol>
<p><strong>Build Settng 的优先级是从左到右排序的。越是左边优先级就越高</strong>。例如，我们在 Project 级别的 xcconfig 文件里面定义了<code>IPHONEOS_DEPLOYMENT_TARGET</code>的值为14.0，那么Project 级别的 xcconfig 文件（Project Config File） 一列上就会显示iOS 14.0，它覆盖了系统的默认值 （iOS Default）iOS 14.2。这就是因为 Project 级别的 xcconfig 文件，它的优先级高于系统默认值，因此最后生效的值是iOS 14.0。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本讲我介绍了如何通过 Build Configuration、 Xcode Scheme 以及 xcconfig 配置文件来统一项目的构建配置，从而搭建出多个不同环境，为后期构建出对应环境的 App 做准备。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788672568915.jpg"></p>
<p>在使用 xcconfig 配置时，还是需要注意以下两点：</p>
<ul>
<li><p><strong>首先</strong>，我们必须把所有 Build Setting 都配置在 xcconfig 文件里面，并通过 Git 进行统一管理；</p>
</li>
<li><p><strong>其次</strong>，我们千万不要在 Xcode 的 Build Settings 页面修改任何 Setting，否则该配置会覆盖 xcconfig 文件里面的配置。如果你不小心修改了，可以通过点击删除键把页面是的配置删掉。</p>
</li>
</ul>
<h3 id="源码地址："><a href="#源码地址：" class="headerlink" title="源码地址："></a>源码地址：</h3><blockquote>
<p><a href="https://github.com/lagoueduCol/iOS-linyongjian/tree/main/Moments/Moments/Configurations">https://github.com/lagoueduCol/iOS-linyongjian/tree/main/Moments/Moments/Configurations</a></p>
</blockquote>
<h1 id="二、学习笔记与扩展"><a href="#二、学习笔记与扩展" class="headerlink" title="二、学习笔记与扩展"></a>二、学习笔记与扩展</h1><h2 id="Swift-多个-Target-的管理与配置"><a href="#Swift-多个-Target-的管理与配置" class="headerlink" title="Swift 多个 Target 的管理与配置"></a>Swift 多个 Target 的管理与配置</h2><h3 id="1、创建多个-Target"><a href="#1、创建多个-Target" class="headerlink" title="1、创建多个 Target"></a>1、创建多个 Target</h3><p>创建一个新的Swift工程，并 <code>Duplicate</code> 多个Target。</p>
<p>(1)、<code>Duplicate</code> 复制 Target：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788672796397.jpg"></p>
<p>(2)、可以生成了新的 target 和 info.plist 文件：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788672924486.jpg"></p>
<p>(3)、修改 target 名字：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673034270.jpg"></p>
<p>此处：</p>
<ul>
<li><code>TargetsDemo</code> ：为正式环境 target</li>
<li><code>TargetsDemo-Debug</code> ：为开发环境 target</li>
<li><code>TargetsDemo-Internal</code> ：为测试环境 target</li>
</ul>
<p>(4)、配置 Schemes：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673161851.jpg"></p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673310718.jpg"></p>
<p>修改成功如下：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673438173.jpg"></p>
<h3 id="2、配置工程相关信息"><a href="#2、配置工程相关信息" class="headerlink" title="2、配置工程相关信息"></a>2、配置工程相关信息</h3><p>我们现在已经有了三个Target，接下来我们为他们命名不同地 <code>Display Name</code> 、<code>Bundle Identifier</code>，并引入不同的 <code>Assets.xcassets</code>资源以生成和管理不同的app。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673572335.jpg"></p>
<p>为不同的 app 引入不同的 <code>Assets.xcassets</code> 图片资源。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673685116.jpg"></p>
<p>然后导入图片即可：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673830388.jpg"></p>
<p>不同图片资源的使用可以自主选择：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788673961061.jpg"></p>
<h3 id="3、宏定义配置"><a href="#3、宏定义配置" class="headerlink" title="3、宏定义配置"></a>3、宏定义配置</h3><p>虽然是swift，我们还是叫它宏定义。接下来我们为不同的 target 设置不同的宏定义以区分它们，然后在代码中引用。</p>
<p>找到设置路径：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788674590270.jpg"></p>
<p>以下是 swift 情况下三种 “宏定义” 的配置方式：</p>
<ul>
<li>分开写，加引号，加 -D</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“-D”</span><br><span class="line">“APPSTORE”</span><br></pre></td></tr></table></figure>

<ul>
<li>分开写，不加引号，加 -D</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-D</span><br><span class="line">APPSTORE</span><br></pre></td></tr></table></figure>

<ul>
<li>写成一排，不加引号，加 -D</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-DAPPSTORE</span><br></pre></td></tr></table></figure>

<p>三种方式任选其一即可：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788674715539.jpg"></p>
<p>分别为 target 设置 “宏定义” 之后，我们就可以在代码中使用了：</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/03%EF%BD%9C%E9%85%8D%E7%BD%AE%E5%87%86%E5%A4%87%EF%BC%9A%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E5%A4%9A%E7%8E%AF%E5%A2%83%E6%94%AF%E6%8C%81%EF%BC%8C%E4%B8%BAApp%E5%BC%80%E5%8F%91%E4%BD%9C%E5%87%86%E5%A4%87/16788674824238.jpg"></p>
<h3 id="4、Podfile-设置"><a href="#4、Podfile-设置" class="headerlink" title="4、Podfile 设置"></a>4、Podfile 设置</h3><p>如果不同的 target 需要引入不同三方库，可以在<code>podfile</code> 文件中进行设置：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># <span class="title class_">Uncomment</span> the next line to define a <span class="variable language_">global</span> platform <span class="keyword">for</span> your project</span><br><span class="line">platform :ios, <span class="string">&#x27;13.0&#x27;</span></span><br><span class="line"></span><br><span class="line"># 正式环境</span><br><span class="line">target <span class="string">&#x27;TargetsDemo&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  use_frameworks!</span><br><span class="line"></span><br><span class="line">  pod <span class="string">&#x27;SnapKit&#x27;</span></span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"># 开发环境，使用 <span class="title class_">SwiftLint</span> 进行代码规范检测，<span class="title class_">SwiftGen</span> 自动生成资源管理文件</span><br><span class="line">target <span class="string">&#x27;TargetsDemo-Debug&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  use_frameworks!</span><br><span class="line"></span><br><span class="line">  pod <span class="string">&#x27;SwiftLint&#x27;</span>, <span class="string">&#x27;= 0.42.0&#x27;</span>, <span class="attr">configurations</span>: [<span class="string">&#x27;Debug&#x27;</span>]</span><br><span class="line">  pod <span class="string">&#x27;SwiftGen&#x27;</span>, <span class="string">&#x27;= 6.4.0&#x27;</span>, <span class="attr">configurations</span>: [<span class="string">&#x27;Debug&#x27;</span>]</span><br><span class="line"></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"># 测试环境，引用单元测试三方库</span><br><span class="line">target <span class="string">&#x27;TargetsDemo-Internal&#x27;</span> <span class="keyword">do</span></span><br><span class="line">  use_frameworks!</span><br><span class="line"></span><br><span class="line">  pod <span class="string">&#x27;Quick&#x27;</span>, <span class="string">&#x27;= 3.0.0&#x27;</span></span><br><span class="line">  pod <span class="string">&#x27;Nimble&#x27;</span>, <span class="string">&#x27;= 9.0.0&#x27;</span></span><br><span class="line">  pod <span class="string">&#x27;RxTest&#x27;</span>, <span class="string">&#x27;= 5.1.1&#x27;</span></span><br><span class="line">  pod <span class="string">&#x27;RxBlocking&#x27;</span>, <span class="string">&#x27;= 5.1.1&#x27;</span></span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>04 | 编码规范：如何使用 SwiftLint 统一编码规范？</title>
    <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="如何使用-SwiftLint-统一编码规范？"><a href="#如何使用-SwiftLint-统一编码规范？" class="headerlink" title="如何使用 SwiftLint 统一编码规范？"></a>如何使用 SwiftLint 统一编码规范？</h1><p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/16781731613340.jpg" alt="16781731613340"></p>
<span id="more"></span>

<p>在软件开发领域有很多有趣且重要的话题，比如使用什么样的系统架构来让代码更容易维护，使用哪些第三方库能提高开发效率，等等。但也有一些话题不仅无趣，还很难得出结论，比如像下面这行变量定义，里面的空格哪个正确？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">name</span>: <span class="title class_">String</span> = <span class="string">&quot;Jake&quot;</span></span><br><span class="line"><span class="keyword">let</span> name : <span class="title class_">String</span> = <span class="string">&quot;Jake&quot;</span></span><br><span class="line"><span class="keyword">let</span> name :<span class="title class_">String</span> = <span class="string">&quot;Jake&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">name</span>: <span class="title class_">String</span>= <span class="string">&quot;Jake&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">name</span>: <span class="title class_">String</span>=<span class="string">&quot;Jake&quot;</span></span><br></pre></td></tr></table></figure>

<p>还有代码缩减，到底是用 2 个空格还是 4 个？这就像豆浆到底是喝甜的还是喝咸的一样，并没有标准答案。也因此，出现了许多永无休止的讨论。特别是当新成员所提交的代码风格，与团队其他成员有很大的区别时，往往会出现沟通与协作问题，甚至发生争执而影响工作。此时，团队如果有一套统一的编码规范，那么这样的问题就很容易解决。</p>
<p>除了能促进沟通协作，一套统一的编码规范还能降低代码维护的成本和减少 Bug 的数量。此外，由于规范往往由团队资深开发者指定并不断完善，也有助于其他团队成员快速成长。</p>
<p>既然统一的编码规范由那么多优点，那么我们如何在团队中实施统一编码规范呢？在 iOS 开发领域，使用 SwiftLint 能有效地建立和改进 Swift 项目的编码规范。接下来我就和你聊聊这方面的内容。</p>
<h2 id="安装-SwiftLint"><a href="#安装-SwiftLint" class="headerlink" title="安装 SwiftLint"></a>安装 SwiftLint</h2><p>安装 <code>SwiftLint</code> 的方式有很多种，例如使用 <code>Homebrew</code>，<code>Mint</code>，下载 SwiftLint.pkg 安装包等等。但我只推荐 <code>CocoaPods</code> 这一种方法，因为通过 CocoaPods 可以有效地管理 SwiftLint 的版本，从而保证团队内各个成员都能使用一模一样的 SwiftLint 及其编码规范。</p>
<p>通过 CocoaPods 来安装 SwiftLint 非常简单。在 Moments App 项目中，我们在<code>Podfile</code>文件中添加<code>SwiftLint Pod</code> 即可。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pod <span class="string">&#x27;SwiftLint&#x27;</span>, <span class="string">&#x27;= 0.41.0&#x27;</span>, <span class="attr">configurations</span>: [<span class="string">&#x27;Debug&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>由于我们只在开发环境下使用 SwiftLint，因此配置了只有<code>Debug</code>的 <code>Build Configuration</code> 才生效。</p>
<p>为了每次编译完都使用 SwiftLint 来检查代码，我们需要在主 App TargetMoments的 <code>Build Phases</code> 里面添加<code>Run SwiftLint</code>步骤。然后配置它执行<code>&quot;$&#123;PODS_ROOT&#125;/SwiftLint/swiftlint&quot;</code>命令。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/16781724760038.jpg" alt="16781724760038"></p>
<p>这里要注意，由于 SwiftLint 的设计是检查有效的 Swift 代码（编译通过的代码就是有效的代码），我们需要把<code>Run SwiftLint</code>步骤放在<code>Compile Source</code>步骤之后。否则 SwiftLint 可能会反馈一些错误的结果。</p>
<p>有了上面的配置以后，每次编译程序， SwiftLint 都会自动执行检查，我们可以在 Xcode 上修正这些警告信息来保证编码规范的统一。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/16781725272726.jpg" alt="16781725272726"></p>
<p>例如上面的截图所示，SwiftLint 告诉我们空格的使用不正确。</p>
<p>那么，这些警告信息到底怎样来的呢？我们一起看看<code>.swiftlint.yml</code>文件吧。</p>
<h2 id="swiftlint-yml-文件"><a href="#swiftlint-yml-文件" class="headerlink" title=".swiftlint.yml 文件"></a>.swiftlint.yml 文件</h2><p>当我们执行 <code>SwiftLint</code> 命令时，它会自动帮我们启动一堆编码规则，并扫描和检查我们的项目。这些规则有<code>comma</code>（逗号前后的空格处理），<code>private_over_fileprivate</code>（优先使用 priviate），<code>force_cast</code>（避免强制转型）等等 。详细规则列表你也可以在 <a href="https://realm.github.io/SwiftLint/rule-directory.html">SwiftLint 官网</a> 找到。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/SwiftLint%E5%AE%98%E7%BD%91.png" alt="SwiftLint官网"></p>
<p>但正如 SwiftLint 的作者所说： <em>“规则存在，但并不意味着你必须用它”</em>。我们需要根据团队自身的情况和成员的统一意见，来决定需要启动和关闭哪些规则。此时，就需要用到 <code>.swiftlint.yml</code> 文件了。</p>
<p><code>.swiftlint.yml</code>主要用于启动和关闭 SwiftLint 所提供的规则，以及自定义配置与规则。一旦我们有了 .swiftlint.yml 文件以后，SwiftLint 在执行过程中会严格按照该文件的定义来扫描和检查代码。由于 .swiftlint.yml 是一个纯文本文件，我们可以通过 Git 统一管理，这样能保证整个团队在执行 SwiftLint 的时候都会得到一模一样的效果，从而保证了整个团队代码规范的一致性。</p>
<h3 id="规则设置"><a href="#规则设置" class="headerlink" title="规则设置"></a>规则设置</h3><p>SwiftLint 提供了<code>disabled_rules</code>,<code>opt_in_rules</code>和<code>only_rules</code>三种规则设置方法。其中，<code>disabled_rules</code>能帮我们关闭默认生效的规则，而<code>opt_in_rules</code>可以启动默认关闭的规则。</p>
<p>另外，SwiftLint 所提供的每条规则都有一个叫作<code>Enabled by default</code>的属性来表示该规则是否默认启动。例如<code>class_delegate_protocol</code>规则是默认启动的，而<code>array_init</code>规则是默认关闭的。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">disabled_rules</span>:</span><br><span class="line">  - class_delegate_protocol</span><br><span class="line"><span class="attr">opt_in_rules</span>:</span><br><span class="line">  - array_init</span><br></pre></td></tr></table></figure>

<p>上面的配置表示，关闭默认生效的<code>class_delegate_protocol</code>，并同时启动<code>array_init</code>。</p>
<p>虽然使用<code>disabled_rules</code>和<code>opt_in_rules</code>能够完成配置，但我不推荐你使用它们 ，而是用<code>only_rules</code>来定义每条生效的规则。</p>
<p>我们在 Moments App 项目中也使用了<code>only_rules</code>。你可以在 <a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/Moments/.swiftlint.yml">代码仓库</a> 找到该 <code>.swiftlint.yml</code> 文件来查看项目启动的所有规则。由于<code>only_rules</code>是 <code>SwiftLint 0.41.0</code> 引入的，如果你需要以前版本，可以使用<code>whitelist_rules</code>来替代。下面是 .swiftlint.yml 文件中的部分规则。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">only_rules</span>:</span><br><span class="line">  - array_init</span><br><span class="line">  - attributes</span><br><span class="line">  - block_based_kvo</span><br><span class="line">  - class_delegate_protocol</span><br><span class="line">  - closing_brace</span><br></pre></td></tr></table></figure>

<p>通过<code>only_rules</code>，我们可以把每一条规则明确添加到 SwiftLint 里面。这样能保证我们整个团队都使用一致的规则，而不会像使用<code>disabled_rules</code>和<code>opt_in_rules</code>那样，随着 SwiftLint 默认规则的改变，导致最终启动的规则不一样。</p>
<h3 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h3><p>在我们配置一条规则的时候，为了符合团队自身的情况，可以修改其默认配置。例如<code>line_length</code>的默认配置是当一行代码多于 120 个字符的时候会报告编译警告，而多于 200 个字符的时候报告编译错误。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/16781729423822.jpg" alt="16781729423822"></p>
<p>我们可以在 .swiftlint.yml 文件中修改这些配置。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">line_length</span>: <span class="number">110</span></span><br><span class="line"><span class="attr">file_length</span>:</span><br><span class="line">  <span class="attr">warning</span>: <span class="number">500</span></span><br><span class="line">  <span class="attr">error</span>: <span class="number">1200</span></span><br></pre></td></tr></table></figure>

<p>上述的配置表示我们修改了<code>line_length</code>的配置，当一行代码多于 110 个字符（而不是默认的 120 个字符）时就会报告编译警告。我们也可以同时覆盖编译警告和编译错误的配置，例如把<code>file_length</code>的编译警告改成 500，而编译错误改成 1200。</p>
<h3 id="自定义规则"><a href="#自定义规则" class="headerlink" title="自定义规则"></a>自定义规则</h3><p>除了 SwiftLint 所提供的默认规则以外，我们还可以自定义规则。例如在 Moments App 项目中，我就自定义了<strong>“不能硬编码字符串”</strong>的规则，具体如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_rules</span>:</span><br><span class="line">  <span class="attr">no_hardcoded_strings</span>:</span><br><span class="line">    <span class="attr">regex</span>: <span class="string">&quot;([A-Za-z]+)&quot;</span></span><br><span class="line">    <span class="attr">match_kinds</span>: string</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&quot;Please do not hardcode strings and add them to the appropriate `Localizable.strings` file; a build script compiles all strings into strongly typed resources available through `Generated/Strings.swift`, e.g. `L10n.accessCamera&quot;</span></span><br><span class="line">    <span class="attr">severity</span>: warning</span><br></pre></td></tr></table></figure>

<p>该规则<code>no_hardcoded_strings</code>会通过正则表达式来检查字符串是否进行了硬编码。如果是SwiftLint 会根据我们的自定义规则显示警告信息，如下图所示。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/16781730434720.jpg" alt="16781730434720"></p>
<h3 id="排除扫描文件"><a href="#排除扫描文件" class="headerlink" title="排除扫描文件"></a>排除扫描文件</h3><p>默认情况下 SwiftLint 会扫描和检查整个项目的所有代码。因为一些第三方依赖库的源码风格可能和我们团队的风格不一致，为了方便使用第三方依赖库，我们可以用<code>excluded</code>来把它排除在外，避免扫描和检查。示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">excluded</span>:</span><br><span class="line">  - <span class="title class_">Pods</span></span><br></pre></td></tr></table></figure>

<p>现在我们已经通过配置 .swiftlint.yml 文件来帮助我们统一编码规范了。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在这一讲，我介绍了如何使用 SwiftLint 来统一编码规范。特别是其中的<code>only_rules</code>，我们要使用它来定义需要生效的规则。</p>
<p><img data-src="/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/04%EF%BD%9C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-SwiftLint-%E7%BB%9F%E4%B8%80%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9F/16781731613340.jpg" alt="16781731613340"></p>
<p>此外，在制定编码规范时，我们还需要注意以下几点。</p>
<ul>
<li><p><strong>首先</strong>，所制定的规范要和业界标准同步，这能让新成员接手代码时，更容易接受而不是反驳。一个建议是，你可以从 SwiftLint 所提供的默认规则开始，毕竟这些规则都是通过许多人沟通和完善下来的，比你独自一人想出来要靠谱得多。</p>
</li>
<li><p><strong>其次</strong>，在制定规范时，重点是提高代码的可读性，而不是为了高大上去使用黑魔法或者选择那些不常用功能等。这样可以让团队绝大部分成员更容易理解和遵循这些规范。</p>
</li>
<li><p><strong>最后要强调的是</strong>，一套编码规范是需要不断迭代和完善的，我建议团队要定时 <code>Retro（Retrospective，敏捷回顾）</code>，讨论和优化这些规范，让得大家都有机会贡献到规范中，增加他的认同感。这种做法在多团队平行开发的环境下特别有效。</p>
</li>
</ul>
<h3 id="源码地址："><a href="#源码地址：" class="headerlink" title="源码地址："></a>源码地址：</h3><blockquote>
<p>swiftlint.yml 文件<br><a href="https://github.com/lagoueduCol/iOS-linyongjian/blob/main/Moments/.swiftlint.yml">https://github.com/lagoueduCol/iOS-linyongjian/blob/main/Moments/.swiftlint.yml</a></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown语法</title>
    <url>/Tips/Markdown/</url>
    <content><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h2 id="一、Markdown纯文本基本语法"><a href="#一、Markdown纯文本基本语法" class="headerlink" title="一、Markdown纯文本基本语法"></a>一、Markdown纯文本基本语法</h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。 类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is an H1</span><br><span class="line">=======</span><br><span class="line"></span><br><span class="line">This is an H2</span><br><span class="line">----------</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>效果如下：</p>
<h1 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h1><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><p>任何数量的 = 和 - 都可以有效果。</p>
<p>这里需要注意一点，由于分割线也是 “—-”， 因此在使用分割线时，一定要空一行，不然会把上方的文字识别为第二阶标题。原因会在后面的段落和换行中说到。<br>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># this is H1</span><br><span class="line">## this is H2</span><br><span class="line">###### this is H6</span><br></pre></td></tr></table></figure>

<p>效果不再展示，但要注意的是，标准语法一般在 # 后跟个空格再写文字，不然可能会无法识别。</p>
<h3 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a>2. 字体</h3><h4 id="粗-斜-删除线-下划线"><a href="#粗-斜-删除线-下划线" class="headerlink" title="粗/斜/删除线/下划线"></a>粗/斜/删除线/下划线</h4><p>Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。但个人感觉写中文时还是（*）比较好用，因为它不区分全角半角，不用切换输入法。 示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**这是加粗**</span><br><span class="line">__这也是加粗__</span><br><span class="line">*这是倾斜*</span><br><span class="line">_这也是倾斜_</span><br><span class="line">***这是加粗倾斜***</span><br><span class="line">~~这是加删除线~~</span><br></pre></td></tr></table></figure>

<p>效果如下：<br><strong>这是加粗</strong><br><strong>这也是加粗</strong><br><em>这是倾斜</em><br><em>这也是倾斜</em><br><em><strong>这是加粗倾斜</strong></em><br><del>这是加删除线</del></p>
<p>注意：强调也可以直接插在文字中间，但是如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。 如果要在文字前后直接插入普通的星号或底线，你可以用反斜线 \ 。</p>
<h4 id="字体、字号、颜色"><a href="#字体、字号、颜色" class="headerlink" title="字体、字号、颜色"></a>字体、字号、颜色</h4><p>如果想要指定字体大小、颜色和类型可以通过<code>&lt;font&gt;&lt;/font&gt;</code>语法来完成。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">指定字体类型： &lt;font face=<span class="string">&quot;黑体&quot;</span>&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">指定字体大小： &lt;font size=<span class="number">12</span>&gt;我是<span class="number">12</span>号字&lt;/font&gt;</span><br><span class="line">指定字体颜色：&lt;font color=#0099ff&gt;我是蓝色字&lt;/font&gt; #0099ff 为颜色的<span class="number">16</span>进制代码</span><br><span class="line">指定字体颜色、字号、字体类型&lt;font color=#0099ff size=<span class="number">12</span> face=<span class="string">&quot;黑体&quot;</span>&gt;黑体&lt;/font&gt;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>指定字体类型： <font face="黑体">我是黑体字</font><br>指定字体大小： <font size="12">我是12号字</font><br>指定字体颜色：<font color="#0099ff">我是蓝色字</font> #0099ff 为颜色的16进制代码<br>指定字体颜色、字号、字体类型<font color="#0099ff" size="12" face="黑体">黑体</font></p>
<h3 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3. 分割线"></a>3. 分割线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * *</span><br><span class="line">***</span><br><span class="line">**********</span><br><span class="line">- - -</span><br><span class="line">_________________</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<hr>
<hr>
<hr>
<h3 id="4-引用"><a href="#4-引用" class="headerlink" title="4. 引用"></a>4. 引用</h3><p>在引用的文字前加 &gt; 即可。 在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">&gt; </span><br><span class="line">&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse</span><br><span class="line">&gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
</blockquote>
<p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,</span><br><span class="line">consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</span><br><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
</blockquote>
<p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; This is the first level of quoting.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; This is nested blockquote.</span><br><span class="line">&gt;</span><br><span class="line">&gt; &gt; &gt; &gt; Back to the first level.</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested blockquote.</p>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>Back to the first level.</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等。</p>
<h3 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h3><p>Markdown 支持有序列表和无序列表。 无序列表使用星号、加号或是减号作为列表标记。 示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure>

<p>效果如下： </p>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<p>有序列表则使用数字接着一个英文句点作为标记。 示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line">注意：序号跟内容之间要有空格 </span><br></pre></td></tr></table></figure>
<p>效果如下： </p>
<ol>
<li>列表内容</li>
<li>列表内容</li>
<li>列表内容</li>
</ol>
<p>列表可以嵌套，上一级和下一级之间敲三个空格即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* 一级无序列表内容</span><br><span class="line"></span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br><span class="line">   * 二级无序列表内容</span><br></pre></td></tr></table></figure>

<p>效果如下： </p>
<ul>
<li><p>一级无序列表内容</p>
<ul>
<li>二级无序列表内容</li>
<li>二级无序列表内容</li>
<li>二级无序列表内容</li>
</ul>
</li>
</ul>
<p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.</span><br><span class="line">    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,</span><br><span class="line">    viverra nec, fringilla in, laoreet vitae, risus.</span><br><span class="line">*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br><span class="line">    Suspendisse id sem consectetuer libero luctus adipiscing</span><br></pre></td></tr></table></figure>

<p>效果如下： </p>
<ul>
<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br>  Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br>  viverra nec, fringilla in, laoreet vitae, risus.</li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br>  Suspendisse id sem consectetuer libero luctus adipiscing</li>
</ul>
<p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.  This is a list item with two paragraphs. Lorem ipsum dolor</span><br><span class="line">    sit amet, consectetuer adipiscing elit. Aliquam hendrerit</span><br><span class="line">    mi posuere lectus.</span><br><span class="line"></span><br><span class="line">    Vestibulum enim wisi, viverra nec, fringilla in, laoreet</span><br><span class="line">    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum</span><br><span class="line">    sit amet velit.</span><br><span class="line"></span><br><span class="line">2.  Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure>
<p>效果如下： </p>
<ol>
<li><p>This is a list item with two paragraphs. Lorem ipsum dolor<br> sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br> mi posuere lectus.</p>
<p> Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br> vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br> sit amet velit.</p>
</li>
<li><p> Suspendisse id sem consectetuer libero luctus adipiscing.</p>
</li>
</ol>
<p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*   This is a list item with two paragraphs.</span><br><span class="line"></span><br><span class="line">    This is the second paragraph in the list item. You&#x27;re</span><br><span class="line">only required to indent the first line. Lorem ipsum dolor</span><br><span class="line">sit amet, consectetuer adipiscing elit.</span><br><span class="line"></span><br><span class="line">*   Another item in the same list.</span><br></pre></td></tr></table></figure>

<p>效果不再展示。 此外： 如果要在列表项目内放进引用，那 &gt; 就需要缩进， 如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符。</p>
<h3 id="6-表格"><a href="#6-表格" class="headerlink" title="6. 表格"></a>6. 表格</h3><p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure>

<p>效果如下： </p>
<table>
<thead>
<tr>
<th>表头</th>
<th align="center">表头</th>
<th align="right">表头</th>
</tr>
</thead>
<tbody><tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
<tr>
<td>内容</td>
<td align="center">内容</td>
<td align="right">内容</td>
</tr>
</tbody></table>
<h3 id="7-代码"><a href="#7-代码" class="headerlink" title="7. 代码"></a>7. 代码</h3><p>在Markdown中加入代码块有两种方式： 第一种，只要简单地缩进 4 个空格或是 1 个制表符就可以:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">    这是一个代码区块。</span><br><span class="line"></span><br><span class="line">(当然，前面要有一个空行和前面的文字分隔开)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>这是一个普通段落：</p>
<pre><code>这是一个代码区块。
</code></pre>
<p>第二种方法似乎是更为常用， 单行代码：代码之间分别用一个反引号包起来即可；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这里有一句代码`代码内容`。</span><br></pre></td></tr></table></figure>
<p>效果如下：<br>这里有一句代码<code>代码内容</code>。</p>
<p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\```</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">  代码...</span><br><span class="line">\```</span><br><span class="line">\ 是为了防止转译，实际是没有的。</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">代码...</span><br><span class="line">代码...</span><br><span class="line">代码...</span><br></pre></td></tr></table></figure>
<p>还可以在上面的 ``` 后面注明你的代码类型，可以产生相应的代码高亮。</p>
<h3 id="8-段落和换行"><a href="#8-段落和换行" class="headerlink" title="8. 段落和换行"></a>8. 段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。 我们在两个不同的文字块之间，一定要空行以示区分，不然就会被归入同一文字块中。 </p>
<h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>Markdown 允许段落内的强迫换行（插入换行符）。 如果想要空一行，在插入处先按入两个以上的空格然后回车，即可。</p>
<ul>
<li>方法1：连敲2个以上空格+enter键；</li>
<li>方法2：利用html语法，<code>&lt;br&gt;</code>。</li>
</ul>
<h4 id="缩进-空格"><a href="#缩进-空格" class="headerlink" title="缩进/空格"></a>缩进/空格</h4><p>但有时也可以使用标记来强制空行和空格，比如需要首行缩进的时候： 一个空格大小的表示：\  或 \  两个空格的大小表示：\ 或 \ 不换行空格：\ 或 \ 强制空行： \</p>
<blockquote>
<p>由于平时中文的排版习惯，首行通常缩进两字符什么的，所以顺便也了解以下操作,在markdown里这个还稍微有点麻烦，不是敲两下空格键就搞定的。这里需要借用html方面的空格实体。<br>首先明确1个汉字=2个空格大小<br>1、一个空格大小的表示&ensp; &#8194;两种用法显示效果一致。<br>2、两个空格大小的表示&emsp; &#8195;两种用法显示效果一致。<br>3、不换行空格的表示&nbsp; &#160;也是占一个空格的宽度大小。</p>
</blockquote>
<h3 id="9-插入超链接"><a href="#9-插入超链接" class="headerlink" title="9. 插入超链接"></a>9. 插入超链接</h3><p>链接分两种。一种是链接到其他网上地址的，还有一种是链接到本文中的某个位置的。<br>两种的基本格式一样<code>[]()</code>。需要添加链接的文字内容用<code>[方括号]</code>来括起来，后面紧跟着带有网址的<code>(圆括号)</code>，如果要加上连接的title文字，在网址后面，把 title文字放到双引号里面。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line">title可加可不加</span><br><span class="line">文字链接 [链接名称](http://链接网址)</span><br><span class="line">网址链接 &lt;http://链接网址&gt;</span><br><span class="line">实例：</span><br><span class="line">[Github](https://github.com/fengyanxin) &amp;emsp;&lt;https://github.com/fengyanxin&gt;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><a href="https://github.com/fengyanxin">Github</a>：<a href="https://github.com/fengyanxin">https://github.com/fengyanxin</a></p>
<h3 id="10-插入图片"><a href="#10-插入图片" class="headerlink" title="10. 插入图片"></a>10. 插入图片</h3><p>添加图片形式和链接相似，只需要在链接的基础上前方加一个<code>！</code> 感叹号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![图片alt](图片地址  &quot;optional title&quot;)</span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释，可以不写。</span><br><span class="line">图片地址链接可以是图片的本地地址或网址。</span><br><span class="line">图片optional title是图片的标题，当鼠标悬置于图片上时显示的内容。title可加可不加。</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><img data-src="/Tips/Markdown/16781754751832.jpg"></p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>【Flutter】导出iOS包时，如何自动与手动更改版本号？</title>
    <url>/Flutter/%E3%80%90Flutter%E3%80%91%E5%AF%BC%E5%87%BAiOS%E5%8C%85%E6%97%B6%EF%BC%8C%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E4%B8%8E%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="【Flutter】导出iOS包时，如何自动与手动更改版本号？"><a href="#【Flutter】导出iOS包时，如何自动与手动更改版本号？" class="headerlink" title="【Flutter】导出iOS包时，如何自动与手动更改版本号？"></a>【Flutter】导出iOS包时，如何自动与手动更改版本号？</h1><h2 id="1、通过flutter工程更改版本号"><a href="#1、通过flutter工程更改版本号" class="headerlink" title="1、通过flutter工程更改版本号"></a>1、通过flutter工程更改版本号</h2><p>1）首先，打开项目下的iOS工程，找到<code>info.plist</code>文件，右键以<code>Source Code</code>方式打开，找到版本号配置参数 <code>CFBundleShortVersionString</code>和<code>CFBundleVersion</code>。</p>
<p>一般未做改动之前的效果如下，<code>$(FLUTTER_BUILD_NAME)</code>表示跟随flutter工程创建。</p>
<span id="more"></span>

<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span>key<span class="operator">&gt;</span><span class="type">CFBundleShortVersionString</span>&lt;/key&gt;</span><br><span class="line"><span class="operator">&lt;</span>string<span class="operator">&gt;</span>$(<span class="type">FLUTTER_BUILD_NAME</span>)<span class="operator">&lt;/</span>string<span class="operator">&gt;</span></span><br><span class="line"><span class="operator">&lt;</span>key<span class="operator">&gt;</span><span class="type">CFBundleVersion</span>&lt;/key&gt;</span><br><span class="line"><span class="operator">&lt;</span>string<span class="operator">&gt;</span>$(<span class="type">FLUTTER_BUILD_NAME</span>)<span class="operator">&lt;/</span>string<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>2）其次，了解了<code>$(FLUTTER_BUILD_NAME)</code>的含义之后，我们再来打开<code>flutter</code>工程目录下的<code>pubspec.yaml</code>文件。</p>
<p>如下图所示，我们可以看到关于版本信息的代码<code>version: 0.6.0+1</code>。</p>
<p>这里的<code>0.6.0</code>就是构建iOS包的版本号，而<code>1</code>就是build号。分别对应前面的<code>CFBundleVersion</code>和<code>CFBundleShortVersionString</code>。</p>
<p><img data-src="/Flutter/%E3%80%90Flutter%E3%80%91%E5%AF%BC%E5%87%BAiOS%E5%8C%85%E6%97%B6%EF%BC%8C%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E4%B8%8E%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%9F/16781763866764.jpg" alt="16781763866764"></p>
<p>3）最后，了解了上面的信息之后，我们想要修改构建出来的iOS包的版本号就好办了。</p>
<p>一般有两种办法：</p>
<p>方法一：更改上图中的版本信息代码</p>
<p>将<code>version: 0.6.0+1</code>更改成你想要的版本，比如：<code>version: 1.0.0+2</code></p>
<p>然后<code>cd</code>到<code>flutter</code>项目目录下运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flutter clean</span><br><span class="line">flutter build ios --release</span><br></pre></td></tr></table></figure>

<p>然后再使用Xcode打开iOS工程，此时我们就可以很清晰的看到自动生成的版本信息文件<code>(Generated)</code>发生变化了。内容如下：</p>
<p><img data-src="/Flutter/%E3%80%90Flutter%E3%80%91%E5%AF%BC%E5%87%BAiOS%E5%8C%85%E6%97%B6%EF%BC%8C%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E4%B8%8E%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%9F/16781777724396.jpg" alt="16781777724396"></p>
<p>确认完以上信息，我们就可以手动打包了。</p>
<p>方法二：清理工程，直接用<code>flutter</code>脚本语言打包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flutter clean</span><br><span class="line">flutter build ios --build-name=0.6.0 --build-number=1</span><br></pre></td></tr></table></figure>

<p>这里的<code>--build-name=0.6.0</code>就对应上图的<code>FLUTTER BUILD NAME=0.6.0</code>，<code>build-number=1</code>对应<code>FLUTTER BUILD NUMBER=1</code>。</p>
<h2 id="2、通过iOS工程更改版本号"><a href="#2、通过iOS工程更改版本号" class="headerlink" title="2、通过iOS工程更改版本号"></a>2、通过iOS工程更改版本号</h2><p>1）首先，还是回到iOS工程下，找到<code>info.plist</code>文件，右键以<code>Source Code</code>方式打开，找到版本号配置参数<code>CFBundleShortVersionString</code>和<code>CFBundleVersion</code>。</p>
<p>对这两个参数的<code>value</code>值进行修改，让它们不再跟随<code>flutter</code>工程创建，修改如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;key&gt;CFBundleShortVersionString&lt;/key&gt;</span><br><span class="line">&lt;string&gt;$(MARKETING_VERSION)&lt;/string&gt;</span><br><span class="line">&lt;key&gt;CFBundleVersion&lt;/key&gt;</span><br><span class="line">&lt;string&gt;$(CURRENT_PROJECT_VERSION)&lt;/string&gt;</span><br></pre></td></tr></table></figure>

<p>这里，<code>$(CURRENT_PROJECT_VERSION)</code>: 表示当前项目版本号；<br><code>$(MARKETING_VERSION)</code>：表示当前项目build号。</p>
<p>更改以上配置之后，我们就可以在iOS工程配置中手动修改iOS包的版本信息了。效果如下图：</p>
<p><img data-src="/Flutter/%E3%80%90Flutter%E3%80%91%E5%AF%BC%E5%87%BAiOS%E5%8C%85%E6%97%B6%EF%BC%8C%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E4%B8%8E%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%94%B9%E7%89%88%E6%9C%AC%E5%8F%B7%EF%BC%9F/16781786409936.jpg" alt="16781786409936"></p>
<p>修改完进行打包。</p>
]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】Mac 上使用Hexo + Github搭建个人博客</title>
    <url>/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="【Hexo】Mac-上使用Hexo-Github搭建个人博客"><a href="#【Hexo】Mac-上使用Hexo-Github搭建个人博客" class="headerlink" title="【Hexo】Mac 上使用Hexo + Github搭建个人博客"></a>【Hexo】Mac 上使用Hexo + Github搭建个人博客</h1><h2 id="为什么要用Hexo-Github？"><a href="#为什么要用Hexo-Github？" class="headerlink" title="为什么要用Hexo + Github？"></a>为什么要用Hexo + Github？</h2><h3 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h3><p>Hexo是一款基于Nodejs的，快速、简洁且高效的博客框架。它具有丰富的插件和主题，具有超快的速度，支持Makedown语法，可以方便快捷的编写博客文档。同时还支持node命令，可以一键部署到GitHub Pages, Heroku 或其他平台。更详细的信息可以看一下 <a href="https://hexo.io/zh-cn">Hexo官网</a> 。</p>
<p>值得一提的是，它在github上的<em>star</em>现在已经达到了<a href="https://github.com/hexojs/hexo">36.3k</a>，优不优秀可见一斑。</p>
<span id="more"></span>

<p>Hexo主要有以下特点：</p>
<ol>
<li><p>超快速度：<em>Node.js</em>所带来的超快生成速度，可以让上百个页面在几秒内完成渲染。</p>
</li>
<li><p>支持 <em>Markdown</em>：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p>
</li>
<li><p>一键部署：只需一条指令即可部署到 <em>GitHub Pages, Heroku</em> 或其他平台。</p>
</li>
<li><p>插件或可扩展性：强大的 API 带来无限的可能，与数种模板引擎（<em>EJS，Pug，Nunjucks</em>）和工具（<em>Babel，PostCSS，Less/Sass</em>）轻易集成。</p>
</li>
</ol>
<h3 id="Guthub"><a href="#Guthub" class="headerlink" title="Guthub"></a>Guthub</h3><p>GitHub 那就更不用说了，做程序员的都知道，它是多nice的一个东西。</p>
<p>今天我们要说的主要是它提供的一个功能：<em>GitHub Pages</em> ，GitHub Pages 允许每个账户创建一个名为 {username}.<a href="http://github.io/">http://github.io</a> 的仓库，另外它还会自动为这个仓库分配一个 <a href="http://github.io/">http://github.io</a> 的二级域名，这就为我们搭建个人博客提供了很大的方便，既为我们解决了域名、服务器的问题，又为我们提供了一个稳定且免费的静态站点。</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><ol>
<li>官网下载<br>下载地址：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></li>
</ol>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778370777438.jpg" alt="16778370777438"></p>
<ol start="2">
<li>使用homebrew安装</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">## 搜索现有node版本</span><br><span class="line">brew search node</span><br><span class="line">## 安装指定版本</span><br><span class="line">brew install node@x</span><br></pre></td></tr></table></figure>
<p>安装完成之后，可以用 <em>npm -v</em> 查询验证，如果不指定版本安装为最新版本</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778374510393.jpg" alt="16778374510393"></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><ol>
<li>使用外网下载（相对比较慢）</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用命令去安装Hexo</span></span><br><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>

<ol start="2">
<li>更换国内镜像后下载</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用命令安装淘宝镜像：</span></span><br><span class="line">npm install -g cnpm --registry=<span class="attr">https</span>:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用淘宝源安装Hexo</span></span><br><span class="line">cnpm install -g hexo-cli </span><br></pre></td></tr></table></figure>
<p>安装成功后，可以使用 <em>hexo -v</em> 命令查看一下hexo版本：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778379318597.jpg" alt="16778379318597"></p>
<h2 id="初始化Hexo-Blog"><a href="#初始化Hexo-Blog" class="headerlink" title="初始化Hexo Blog"></a>初始化Hexo Blog</h2><h3 id="新建一个文件夹"><a href="#新建一个文件夹" class="headerlink" title="新建一个文件夹"></a>新建一个文件夹</h3><p>我这里创建一个名为Blogs的文件夹，并进入该文件夹内：</p>
<h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化hexo</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>初始化成功如下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778382111564.jpg" alt="16778382111564"></p>
<p>这时候Blogs下的目录结构如下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778382603905.jpg" alt="16778382603905"></p>
<h3 id="本地启动Hexo"><a href="#本地启动Hexo" class="headerlink" title="本地启动Hexo"></a>本地启动Hexo</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 启动Hexo</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778384529301.jpg" alt="16778384529301"></p>
<h3 id="浏览器打开博客网站"><a href="#浏览器打开博客网站" class="headerlink" title="浏览器打开博客网站"></a>浏览器打开博客网站</h3><p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778384888543.jpg" alt="16778384888543"></p>
<h2 id="创建博客文章"><a href="#创建博客文章" class="headerlink" title="创建博客文章"></a>创建博客文章</h2><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一篇博客</span></span><br><span class="line">hexo n <span class="string">&quot;first blog&quot;</span></span><br></pre></td></tr></table></figure>

<p>文章在Blogs目录下的结构如下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778386968316.jpg" alt="16778386968316"></p>
<h3 id="清理项目缓存"><a href="#清理项目缓存" class="headerlink" title="清理项目缓存"></a>清理项目缓存</h3><p>新增博客文章或者修改博客文章内容，需要执行此命令:</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清理之前生成的网站</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<h3 id="重新生成博客"><a href="#重新生成博客" class="headerlink" title="重新生成博客"></a>重新生成博客</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 重新生成博客</span></span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h3 id="再次启动项目"><a href="#再次启动项目" class="headerlink" title="再次启动项目"></a>再次启动项目</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 再次启动博客网站</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>浏览器页面展示如下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778388704782.jpg" alt="16778388704782"></p>
<h2 id="修改网站主题"><a href="#修改网站主题" class="headerlink" title="修改网站主题"></a>修改网站主题</h2><p>Hexo框架默认的是landscape主题，Hexo上有三百多种主题，大家可以上Hexo官网选择自己喜欢的<a href="https://hexo.io/themes/">主题</a>，我这里以next为例：</p>
<h3 id="下载next主题"><a href="#下载next主题" class="headerlink" title="下载next主题"></a>下载next主题</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下载next</span></span><br><span class="line">git clone <span class="attr">https</span>:<span class="comment">//github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>

<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778391682864.jpg" alt="16778391682864"></p>
<p>我们下载的主题都存放在Blogs/themes文件夹下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778392610610.jpg" alt="16778392610610"></p>
<h3 id="修改项目配置文件"><a href="#修改项目配置文件" class="headerlink" title="修改项目配置文件"></a>修改项目配置文件</h3><p>主题下载下来之后，我们需要在项目配置文件_config.yml里面修改我们的主题：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778393394648.jpg" alt="16778393394648"></p>
<p>把默认的landscape修改为我们下载好的主题 next</p>
<h3 id="重新生成项目"><a href="#重新生成项目" class="headerlink" title="重新生成项目"></a>重新生成项目</h3><p>这时候再执行我们Hexo三连：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清理项目缓存</span></span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新生成项目</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment">// 本地启动项目</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>Tips：重新生成项目和本地启动项目可以合并： <em>hexo g &amp; hexo s</em><br>再次打开项目，效果图如下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778394696679.jpg" alt="16778394696679"></p>
<p>到这里，我们的主题修改就完成了，后期我们可以根据自己的需要去修改next的配置文件，让我们的博客网站更加个性化。</p>
<p>下一篇文章我将说说如何修改主题让我们的博客网站更具个性化。</p>
<p>关于Hexo搭建博客到这里就讲得差不多了，下面我们就想怎么把博客部署到Github上。</p>
<h2 id="部署博客到Github"><a href="#部署博客到Github" class="headerlink" title="部署博客到Github"></a>部署博客到Github</h2><p>首先，你得要有一个自己的Github账号吧，我相信99.99%的开发者都是有Github账号的，如果你是那0.01%，请前往<a href="https://github.com/">Github</a>自行注册。</p>
<h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>在Github里创建一个存放博客项目的仓库，操作如下：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778397130902.jpg" alt="16778397130902"></p>
<p>这里有几个注意点：</p>
<ol>
<li>仓库的名称必须与你Github账号名相同</li>
<li>仓库必须以gitHub.io结尾（这里我已经创建过了，所以报错）</li>
<li>使用GitHub Pages最好选 <em>Public</em> repo（Private需要付费）</li>
</ol>
<p>比如你Github账号名叫：zhangsan，那你新建的这个仓库名就叫：zhangsan.github.io</p>
<p>创建之后，我们就有了一个存放博客项目仓库：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778399347942.jpg" alt="16778399347942"></p>
<h3 id="安装Hexo部署插件"><a href="#安装Hexo部署插件" class="headerlink" title="安装Hexo部署插件"></a>安装Hexo部署插件</h3><p>进入到Blogs目录下，安装部署插件：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">#使用淘宝镜像安装</span><br><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<h3 id="修改项目配置文件-1"><a href="#修改项目配置文件-1" class="headerlink" title="修改项目配置文件"></a>修改项目配置文件</h3><p>好了，万事俱备，只欠修改 <em>_config.yml</em> 文件了，打开_config.yml文件，拖拽到最后，修改文件：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778401117276.jpg" alt="16778401117276"></p>
<p>修改为：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778401892146.jpg" alt="16778401892146"></p>
<p>注意：<em>repo</em> 为你刚创建的Github项目的地址，如果你是使用的 <em>vim</em> 打开的 <em>_config.yml</em>，记得修改了要 <em>:wq</em> 保存退出</p>
<h3 id="重新生成项目-1"><a href="#重新生成项目-1" class="headerlink" title="重新生成项目"></a>重新生成项目</h3><p>清理项目缓存：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>重新生成博客：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>部署到云端（Github）:</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>注意：这里每次使用 <em>hexo d</em> 部署到Github为了安全都要求输入账号密码，如果你不希望每次都输入账号密码，可以跟博主一样设置Github的 <em>SSH Keys</em>，以后每次发布到Github就不需要输入账号密码了。</p>
<p>访问云端博客主页</p>
<p>访问地址：https://博客仓库名.github.io<br>比如我的博客地址：<a href="https://fengyanxin.github.io/">https://fengyanxin.github.io</a></p>
<p>可以在以下路径查看：</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91Mac-%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/16778403847380.jpg" alt="16778403847380"></p>
<p>最后</p>
<p>基本上到这里，属于我们自己的博客就搭建完成啦，整个搭建流程如果不出错半个小时之内其实是可以搞定的，但是这路哪里那么好走呢，每个人去搭建的过程中或多或少都会遇到一些问题，我自己在搭建的过程中也碰到了一些问题，我会抽空把遇到的问题详细整理出来，希望能够帮助大家如果要搭建博客的时候少踩点坑。</p>
<p>大兄弟，都看到这里了，就不要吝啬你的小星星了，为博主点个赞再走吧～</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】添加 .sh 脚本文件，快速测试和部署</title>
    <url>/Hexo/%E3%80%90Hexo%E3%80%91%E6%B7%BB%E5%8A%A0-sh-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="添加-sh-脚本文件，快速测试和部署"><a href="#添加-sh-脚本文件，快速测试和部署" class="headerlink" title="添加 .sh 脚本文件，快速测试和部署"></a>添加 .sh 脚本文件，快速测试和部署</h1><h2 id="一、创建-sh-脚本文件"><a href="#一、创建-sh-脚本文件" class="headerlink" title="一、创建 .sh 脚本文件"></a>一、创建 .sh 脚本文件</h2><h3 id="1-启动-Sublime-Test"><a href="#1-启动-Sublime-Test" class="headerlink" title="1.启动 Sublime Test"></a>1.启动 Sublime Test</h3><p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E6%B7%BB%E5%8A%A0-sh-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/16787755102992.jpg"></p>
<span id="more"></span>

<h3 id="2-打开的-Sublime-Test"><a href="#2-打开的-Sublime-Test" class="headerlink" title="2.打开的 Sublime Test"></a>2.打开的 Sublime Test</h3><p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E6%B7%BB%E5%8A%A0-sh-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/16787755213456.jpg"></p>
<h3 id="3-写入或者复制进去脚本代码"><a href="#3-写入或者复制进去脚本代码" class="headerlink" title="3.写入或者复制进去脚本代码"></a>3.写入或者复制进去脚本代码</h3><p>此处以 Hexo localhost 测试为例</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E6%B7%BB%E5%8A%A0-sh-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/16787755345365.jpg"></p>
<h3 id="4-另存为-sh-文件，导入-hexo-文件夹"><a href="#4-另存为-sh-文件，导入-hexo-文件夹" class="headerlink" title="4.另存为 .sh 文件，导入 hexo 文件夹"></a>4.另存为 .sh 文件，导入 hexo 文件夹</h3><p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E6%B7%BB%E5%8A%A0-sh-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/16787755472530.jpg"></p>
<h2 id="二、赋予脚本可执行权限"><a href="#二、赋予脚本可执行权限" class="headerlink" title="二、赋予脚本可执行权限"></a>二、赋予脚本可执行权限</h2><h3 id="1-cd到编写的-sh-文件所在目录"><a href="#1-cd到编写的-sh-文件所在目录" class="headerlink" title="1.cd到编写的 .sh 文件所在目录"></a>1.cd到编写的 .sh 文件所在目录</h3><p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E6%B7%BB%E5%8A%A0-sh-%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6%EF%BC%8C%E5%BF%AB%E9%80%9F%E6%B5%8B%E8%AF%95%E5%92%8C%E9%83%A8%E7%BD%B2/16787755599104.jpg"></p>
<h3 id="2-执行-chmod-x-指令"><a href="#2-执行-chmod-x-指令" class="headerlink" title="2.执行 chmod +x 指令"></a>2.执行 chmod +x 指令</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">chmod +x localhost.<span class="property">sh</span></span><br></pre></td></tr></table></figure>

<h3 id="3-执行脚本"><a href="#3-执行脚本" class="headerlink" title="3.执行脚本"></a>3.执行脚本</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">./localhost.<span class="property">sh</span></span><br></pre></td></tr></table></figure>

<p>至此，localhost 测试脚本就完成了，部署脚本同理，在文件夹下新建一个 <code>deploy.sh</code> 文件，在其中输入以下代码即可：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>当然，添加其他助力 Hexo 快速执行的脚本亦可。</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【Hexo】如何将博客源码上传到GitHub</title>
    <url>/Hexo/%E3%80%90Hexo%E3%80%91%E5%A6%82%E4%BD%95%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/</url>
    <content><![CDATA[<h1 id="如何将博客源码上传到-GitHub"><a href="#如何将博客源码上传到-GitHub" class="headerlink" title="如何将博客源码上传到 GitHub"></a>如何将博客源码上传到 GitHub</h1><h2 id="一、为什么要把博客源码上传到-GitHub-？"><a href="#一、为什么要把博客源码上传到-GitHub-？" class="headerlink" title="一、为什么要把博客源码上传到 GitHub ？"></a>一、为什么要把博客源码上传到 GitHub ？</h2><p>首先，该操作不是使用 hexo 所必须的，但是，这么做却可以让以下问题迎刃而解：</p>
<ul>
<li>多台电脑同时操作 hexo 源码</li>
<li>原先 hexo 源码所在电脑重装系统（丢失文件）</li>
<li>要将 hexo 源码移动到其他磁盘（更换电脑）</li>
</ul>
<span id="more"></span>

<p>将 hexo 源码上传到 GitHub，就是做了一个稳定、安全的远程备份，遇到上面的情况将不会再是什么问题。</p>
<p>因为，之前在 GitHub 上的部署（使用 <code>hexo d</code> 上传部署到github）其实是 hexo 编译后的文件，是用来生成网页的，不包含所有 hexo 生成的网站原始文件。只有把源码也上传才能解决问题。</p>
<h2 id="二、如何上传博客源码？"><a href="#二、如何上传博客源码？" class="headerlink" title="二、如何上传博客源码？"></a>二、如何上传博客源码？</h2><h3 id="1、思路分析"><a href="#1、思路分析" class="headerlink" title="1、思路分析"></a>1、思路分析</h3><ul>
<li><p><code>main</code>（<code>master</code>） 分支：存放博客的静态网页。</p>
</li>
<li><p><code>hexo</code>分支：存放 Hexo 博客的源码文件。</p>
</li>
</ul>
<h3 id="2、hexo-分支创建及管理"><a href="#2、hexo-分支创建及管理" class="headerlink" title="2、hexo 分支创建及管理"></a>2、hexo 分支创建及管理</h3><h4 id="（1）github-准备"><a href="#（1）github-准备" class="headerlink" title="（1）github 准备"></a>（1）github 准备</h4><p>先在 GitHub 项目创建一个远程分支 <code>hexo</code></p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E5%A6%82%E4%BD%95%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/16787834628307.jpg"></p>
<p>将其设置为默认分支</p>
<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E5%A6%82%E4%BD%95%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/16787836604366.jpg"></p>
<h4 id="2-打包将要推送到GitHub上的原始文件"><a href="#2-打包将要推送到GitHub上的原始文件" class="headerlink" title="(2) 打包将要推送到GitHub上的原始文件"></a>(2) 打包将要推送到GitHub上的原始文件</h4><ol>
<li>clone该仓库到本地（clone的是hexo默认分支）</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">git clone git@github.<span class="property">com</span>:fengyanxin/fengyanxin.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>下载的文件夹里仅留下 <code>.git</code> 文件夹，其他的文件都删除</p>
</li>
<li><p>找见我们 hexo 原位置，将 hexo 文件夹内除 <code>.deploy_git</code> 以外都复制到clone下来的文件夹中</p>
</li>
<li><p>修改 <code>.gitignore</code> 文件，将静态网页的目录及其他无需提交的源文件及目录排除掉。(没有即新建添加)</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.<span class="property">DS_Store</span></span><br><span class="line"><span class="title class_">Thumbs</span>.<span class="property">db</span></span><br><span class="line">db.<span class="property">json</span></span><br><span class="line">*.<span class="property">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.<span class="property">deploy</span>*/</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>如果已经 clone 过主题文件，最好把 theme 主题文件夹里的 <code>.git</code> 也删除</li>
</ol>
<h4 id="3-将-clone-并修改的文件夹推送到-GitHub"><a href="#3-将-clone-并修改的文件夹推送到-GitHub" class="headerlink" title="(3) 将 clone 并修改的文件夹推送到 GitHub"></a>(3) 将 clone 并修改的文件夹推送到 GitHub</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;Code update&#x27;</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>

<h3 id="3、main-master-分支管理"><a href="#3、main-master-分支管理" class="headerlink" title="3、main (master) 分支管理"></a>3、main (master) 分支管理</h3><p>进入<strong>站点配置文件</strong>，搜索 <code>deploy</code>关键词，修改如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy</span>:</span><br><span class="line">  <span class="attr">type</span>: git</span><br><span class="line">  <span class="attr">repo</span>: git@github.<span class="property">com</span>:fengyanxin/fengyanxin.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span></span><br><span class="line">  <span class="attr">branch</span>: main</span><br></pre></td></tr></table></figure>

<p><img data-src="/Hexo/%E3%80%90Hexo%E3%80%91%E5%A6%82%E4%BD%95%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0GitHub/16787847648363.jpg"></p>
<p>修改完成，执行以下代码进行管理：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//清除本地旧代码。</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment">//生成静态网站</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment">//部署静态网站到 GitHub 的 main(master) 分支上</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h3 id="4、统一分支管理和部署"><a href="#4、统一分支管理和部署" class="headerlink" title="4、统一分支管理和部署"></a>4、统一分支管理和部署</h3><p>利用我上一篇文章讲到的 <code>deploy.sh</code>脚本进行一键部署，可以极大提高部署效率和降低维护成本。</p>
<p>在 <code>deploy.sh</code> 文件中添加如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>bash</span><br><span class="line"><span class="variable constant_">DIR</span>=<span class="string">`dirname $0`</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">Generate</span> blog</span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">sleep <span class="number">5</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">Deploy</span></span><br><span class="line">hexo deploy</span><br><span class="line">sleep <span class="number">5</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">Push</span> hexo code</span><br><span class="line">git add .</span><br><span class="line">current_date=<span class="string">`date &quot;+%Y-%m-%d %H:%M:%S&quot;`</span></span><br><span class="line">git commit -m <span class="string">&quot;Blog updated: $current_date&quot;</span></span><br><span class="line"></span><br><span class="line">sleep <span class="number">2</span></span><br><span class="line"></span><br><span class="line">git push origin hexo</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;=====&gt;Finish!&lt;=====&quot;</span></span><br></pre></td></tr></table></figure>

<p>然后附加脚本执行权限:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">chmod +x deploy.<span class="property">sh</span></span><br></pre></td></tr></table></figure>

<p>然后执行即可：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">./deploy.<span class="property">sh</span></span><br></pre></td></tr></table></figure>

<p>如此，便可以一键部署博客及备份博客源码到 github 的分支 <code>hexo</code> 分支上。</p>
<h3 id="5、其他电脑源码使用"><a href="#5、其他电脑源码使用" class="headerlink" title="5、其他电脑源码使用"></a>5、其他电脑源码使用</h3><p>换到不同电脑上时，只需clone github 上的 hexo 分支即可：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">git clone git@github.<span class="property">com</span>:fengyanxin/fengyanxin.<span class="property">github</span>.<span class="property">io</span>.<span class="property">git</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【Tips】ASCII码对应表</title>
    <url>/Tips/%E3%80%90Tips%E3%80%91ASCII%E7%A0%81%E5%AF%B9%E5%BA%94%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="ASCII码对应表"><a href="#ASCII码对应表" class="headerlink" title="ASCII码对应表"></a>ASCII码对应表</h2><span id="more"></span>
<table>
<thead>
<tr>
<th align="center">ASCII值</th>
<th align="center">16进制</th>
<th align="center">控制字符</th>
<th align="center"></th>
<th align="center">ASCII值</th>
<th align="center">16进制</th>
<th align="center">控制字符</th>
<th align="center"></th>
<th align="center">ASCII值</th>
<th align="center">16进制</th>
<th align="center">控制字符</th>
<th align="center"></th>
<th align="center">ASCII值</th>
<th align="center">16进制</th>
<th align="center">控制字符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">00</td>
<td align="center">NUT</td>
<td align="center"></td>
<td align="center">32</td>
<td align="center">20</td>
<td align="center">(space)</td>
<td align="center"></td>
<td align="center">64</td>
<td align="center">40</td>
<td align="center">@</td>
<td align="center"></td>
<td align="center">96</td>
<td align="center">60</td>
<td align="center">、</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">01</td>
<td align="center">SOH</td>
<td align="center"></td>
<td align="center">33</td>
<td align="center">21</td>
<td align="center">!</td>
<td align="center"></td>
<td align="center">65</td>
<td align="center">41</td>
<td align="center">A</td>
<td align="center"></td>
<td align="center">97</td>
<td align="center">61</td>
<td align="center">a</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">02</td>
<td align="center">STX</td>
<td align="center"></td>
<td align="center">34</td>
<td align="center">22</td>
<td align="center">“</td>
<td align="center"></td>
<td align="center">66</td>
<td align="center">42</td>
<td align="center">B</td>
<td align="center"></td>
<td align="center">98</td>
<td align="center">62</td>
<td align="center">b</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">03</td>
<td align="center">ETX</td>
<td align="center"></td>
<td align="center">35</td>
<td align="center">23</td>
<td align="center">#</td>
<td align="center"></td>
<td align="center">67</td>
<td align="center">43</td>
<td align="center">C</td>
<td align="center"></td>
<td align="center">99</td>
<td align="center">63</td>
<td align="center">c</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">04</td>
<td align="center">EOT</td>
<td align="center"></td>
<td align="center">36</td>
<td align="center">24</td>
<td align="center">$</td>
<td align="center"></td>
<td align="center">68</td>
<td align="center">44</td>
<td align="center">D</td>
<td align="center"></td>
<td align="center">100</td>
<td align="center">64</td>
<td align="center">d</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">05</td>
<td align="center">ENO</td>
<td align="center"></td>
<td align="center">37</td>
<td align="center">25</td>
<td align="center">%</td>
<td align="center"></td>
<td align="center">69</td>
<td align="center">45</td>
<td align="center">E</td>
<td align="center"></td>
<td align="center">101</td>
<td align="center">65</td>
<td align="center">e</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">06</td>
<td align="center">ACK</td>
<td align="center"></td>
<td align="center">38</td>
<td align="center">26</td>
<td align="center">&amp;</td>
<td align="center"></td>
<td align="center">70</td>
<td align="center">46</td>
<td align="center">F</td>
<td align="center"></td>
<td align="center">102</td>
<td align="center">66</td>
<td align="center">f</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">07</td>
<td align="center">BEL</td>
<td align="center"></td>
<td align="center">39</td>
<td align="center">27</td>
<td align="center">‘</td>
<td align="center"></td>
<td align="center">71</td>
<td align="center">47</td>
<td align="center">G</td>
<td align="center"></td>
<td align="center">103</td>
<td align="center">67</td>
<td align="center">g</td>
</tr>
<tr>
<td align="center">8</td>
<td align="center">08</td>
<td align="center">BS</td>
<td align="center"></td>
<td align="center">40</td>
<td align="center">28</td>
<td align="center">(</td>
<td align="center"></td>
<td align="center">72</td>
<td align="center">48</td>
<td align="center">H</td>
<td align="center"></td>
<td align="center">104</td>
<td align="center">68</td>
<td align="center">h</td>
</tr>
<tr>
<td align="center">9</td>
<td align="center">09</td>
<td align="center">HT</td>
<td align="center"></td>
<td align="center">41</td>
<td align="center">29</td>
<td align="center">)</td>
<td align="center"></td>
<td align="center">73</td>
<td align="center">49</td>
<td align="center">I</td>
<td align="center"></td>
<td align="center">105</td>
<td align="center">69</td>
<td align="center">i</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">0A</td>
<td align="center">LF</td>
<td align="center"></td>
<td align="center">42</td>
<td align="center">2A</td>
<td align="center">*</td>
<td align="center"></td>
<td align="center">74</td>
<td align="center">4A</td>
<td align="center">J</td>
<td align="center"></td>
<td align="center">106</td>
<td align="center">6A</td>
<td align="center">j</td>
</tr>
<tr>
<td align="center">11</td>
<td align="center">0B</td>
<td align="center">VT</td>
<td align="center"></td>
<td align="center">43</td>
<td align="center">2B</td>
<td align="center">+</td>
<td align="center"></td>
<td align="center">75</td>
<td align="center">4B</td>
<td align="center">K</td>
<td align="center"></td>
<td align="center">107</td>
<td align="center">6B</td>
<td align="center">k</td>
</tr>
<tr>
<td align="center">12</td>
<td align="center">0C</td>
<td align="center">FF</td>
<td align="center"></td>
<td align="center">44</td>
<td align="center">2C</td>
<td align="center">,</td>
<td align="center"></td>
<td align="center">76</td>
<td align="center">4C</td>
<td align="center">L</td>
<td align="center"></td>
<td align="center">108</td>
<td align="center">6C</td>
<td align="center">l</td>
</tr>
<tr>
<td align="center">13</td>
<td align="center">0D</td>
<td align="center">CR</td>
<td align="center"></td>
<td align="center">45</td>
<td align="center">2D</td>
<td align="center">-</td>
<td align="center"></td>
<td align="center">77</td>
<td align="center">4D</td>
<td align="center">M</td>
<td align="center"></td>
<td align="center">109</td>
<td align="center">6D</td>
<td align="center">m</td>
</tr>
<tr>
<td align="center">14</td>
<td align="center">0E</td>
<td align="center">SO</td>
<td align="center"></td>
<td align="center">46</td>
<td align="center">2E</td>
<td align="center">.</td>
<td align="center"></td>
<td align="center">78</td>
<td align="center">4E</td>
<td align="center">N</td>
<td align="center"></td>
<td align="center">110</td>
<td align="center">6E</td>
<td align="center">n</td>
</tr>
<tr>
<td align="center">15</td>
<td align="center">0F</td>
<td align="center">SI</td>
<td align="center"></td>
<td align="center">47</td>
<td align="center">2F</td>
<td align="center">/</td>
<td align="center"></td>
<td align="center">79</td>
<td align="center">4F</td>
<td align="center">O</td>
<td align="center"></td>
<td align="center">111</td>
<td align="center">6F</td>
<td align="center">o</td>
</tr>
<tr>
<td align="center">16</td>
<td align="center">10</td>
<td align="center">DLE</td>
<td align="center"></td>
<td align="center">48</td>
<td align="center">30</td>
<td align="center">0</td>
<td align="center"></td>
<td align="center">80</td>
<td align="center">50</td>
<td align="center">P</td>
<td align="center"></td>
<td align="center">112</td>
<td align="center">70</td>
<td align="center">p</td>
</tr>
<tr>
<td align="center">17</td>
<td align="center">11</td>
<td align="center">DC1</td>
<td align="center"></td>
<td align="center">49</td>
<td align="center">31</td>
<td align="center">1</td>
<td align="center"></td>
<td align="center">81</td>
<td align="center">51</td>
<td align="center">Q</td>
<td align="center"></td>
<td align="center">113</td>
<td align="center">71</td>
<td align="center">q</td>
</tr>
<tr>
<td align="center">18</td>
<td align="center">12</td>
<td align="center">DC2</td>
<td align="center"></td>
<td align="center">50</td>
<td align="center">32</td>
<td align="center">2</td>
<td align="center"></td>
<td align="center">82</td>
<td align="center">52</td>
<td align="center">R</td>
<td align="center"></td>
<td align="center">114</td>
<td align="center">72</td>
<td align="center">r</td>
</tr>
<tr>
<td align="center">19</td>
<td align="center">13</td>
<td align="center">DC3</td>
<td align="center"></td>
<td align="center">51</td>
<td align="center">33</td>
<td align="center">3</td>
<td align="center"></td>
<td align="center">83</td>
<td align="center">53</td>
<td align="center">X</td>
<td align="center"></td>
<td align="center">115</td>
<td align="center">73</td>
<td align="center">s</td>
</tr>
<tr>
<td align="center">20</td>
<td align="center">14</td>
<td align="center">DC4</td>
<td align="center"></td>
<td align="center">52</td>
<td align="center">34</td>
<td align="center">4</td>
<td align="center"></td>
<td align="center">84</td>
<td align="center">54</td>
<td align="center">T</td>
<td align="center"></td>
<td align="center">116</td>
<td align="center">74</td>
<td align="center">t</td>
</tr>
<tr>
<td align="center">21</td>
<td align="center">15</td>
<td align="center">NAK</td>
<td align="center"></td>
<td align="center">53</td>
<td align="center">35</td>
<td align="center">5</td>
<td align="center"></td>
<td align="center">85</td>
<td align="center">55</td>
<td align="center">U</td>
<td align="center"></td>
<td align="center">117</td>
<td align="center">75</td>
<td align="center">u</td>
</tr>
<tr>
<td align="center">22</td>
<td align="center">16</td>
<td align="center">SYN</td>
<td align="center"></td>
<td align="center">54</td>
<td align="center">36</td>
<td align="center">6</td>
<td align="center"></td>
<td align="center">86</td>
<td align="center">56</td>
<td align="center">V</td>
<td align="center"></td>
<td align="center">118</td>
<td align="center">76</td>
<td align="center">v</td>
</tr>
<tr>
<td align="center">23</td>
<td align="center">17</td>
<td align="center">TB</td>
<td align="center"></td>
<td align="center">55</td>
<td align="center">37</td>
<td align="center">7</td>
<td align="center"></td>
<td align="center">87</td>
<td align="center">57</td>
<td align="center">W</td>
<td align="center"></td>
<td align="center">119</td>
<td align="center">77</td>
<td align="center">w</td>
</tr>
<tr>
<td align="center">24</td>
<td align="center">18</td>
<td align="center">CAN</td>
<td align="center"></td>
<td align="center">56</td>
<td align="center">38</td>
<td align="center">8</td>
<td align="center"></td>
<td align="center">88</td>
<td align="center">58</td>
<td align="center">X</td>
<td align="center"></td>
<td align="center">120</td>
<td align="center">78</td>
<td align="center">x</td>
</tr>
<tr>
<td align="center">25</td>
<td align="center">19</td>
<td align="center">EM</td>
<td align="center"></td>
<td align="center">57</td>
<td align="center">39</td>
<td align="center">9</td>
<td align="center"></td>
<td align="center">89</td>
<td align="center">59</td>
<td align="center">Y</td>
<td align="center"></td>
<td align="center">121</td>
<td align="center">79</td>
<td align="center">y</td>
</tr>
<tr>
<td align="center">26</td>
<td align="center">1A</td>
<td align="center">SUB</td>
<td align="center"></td>
<td align="center">58</td>
<td align="center">3A</td>
<td align="center">:</td>
<td align="center"></td>
<td align="center">90</td>
<td align="center">5A</td>
<td align="center">Z</td>
<td align="center"></td>
<td align="center">122</td>
<td align="center">7A</td>
<td align="center">z</td>
</tr>
<tr>
<td align="center">27</td>
<td align="center">1B</td>
<td align="center">ESC</td>
<td align="center"></td>
<td align="center">59</td>
<td align="center">3B</td>
<td align="center">;</td>
<td align="center"></td>
<td align="center">91</td>
<td align="center">5B</td>
<td align="center">[</td>
<td align="center"></td>
<td align="center">123</td>
<td align="center">7B</td>
<td align="center">{</td>
</tr>
<tr>
<td align="center">28</td>
<td align="center">1C</td>
<td align="center">FS</td>
<td align="center"></td>
<td align="center">60</td>
<td align="center">3C</td>
<td align="center">&lt;</td>
<td align="center"></td>
<td align="center">92</td>
<td align="center">5C</td>
<td align="center">\</td>
<td align="center"></td>
<td align="center">124</td>
<td align="center">7C</td>
<td align="center">|</td>
</tr>
<tr>
<td align="center">29</td>
<td align="center">1D</td>
<td align="center">GS</td>
<td align="center"></td>
<td align="center">61</td>
<td align="center">3D</td>
<td align="center">=</td>
<td align="center"></td>
<td align="center">93</td>
<td align="center">5D</td>
<td align="center">]</td>
<td align="center"></td>
<td align="center">125</td>
<td align="center">7D</td>
<td align="center">}</td>
</tr>
<tr>
<td align="center">30</td>
<td align="center">1E</td>
<td align="center">RS</td>
<td align="center"></td>
<td align="center">62</td>
<td align="center">3E</td>
<td align="center">&gt;</td>
<td align="center"></td>
<td align="center">94</td>
<td align="center">5E</td>
<td align="center">^</td>
<td align="center"></td>
<td align="center">126</td>
<td align="center">7E</td>
<td align="center">~</td>
</tr>
<tr>
<td align="center">31</td>
<td align="center">1F</td>
<td align="center">US</td>
<td align="center"></td>
<td align="center">63</td>
<td align="center">3F</td>
<td align="center">?</td>
<td align="center"></td>
<td align="center">95</td>
<td align="center">5F</td>
<td align="center">——</td>
<td align="center"></td>
<td align="center">127</td>
<td align="center">7F</td>
<td align="center">DEL</td>
</tr>
</tbody></table>
<h3 id="控制符对应表"><a href="#控制符对应表" class="headerlink" title="控制符对应表"></a>控制符对应表</h3><table>
<thead>
<tr>
<th align="center">控制符</th>
<th align="center">控制符</th>
<th align="center">控制符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">NUL 空</td>
<td align="center">VT 垂直制表</td>
<td align="center">SYN 空转同步</td>
</tr>
<tr>
<td align="center">SOH 标题开始</td>
<td align="center">FF 走纸控制</td>
<td align="center">ETB 信息组传送结束</td>
</tr>
<tr>
<td align="center">STX 正文开始</td>
<td align="center">CR 回车</td>
<td align="center">CAN 作废</td>
</tr>
<tr>
<td align="center">ETX 正文结束</td>
<td align="center">SO 移位输出</td>
<td align="center">EM 纸尽</td>
</tr>
<tr>
<td align="center">EOY 传输结束</td>
<td align="center">SI 移位输入</td>
<td align="center">SUB 换置</td>
</tr>
<tr>
<td align="center">ENQ 询问字符</td>
<td align="center">DLE 空格</td>
<td align="center">ESC 换码</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>【Tips】Git常用命令汇总</title>
    <url>/Tips/%E3%80%90Tips%E3%80%91Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h1 id="Git常用命令汇总"><a href="#Git常用命令汇总" class="headerlink" title="Git常用命令汇总"></a>Git常用命令汇总</h1><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git init </span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>在本地新建一个repo，进入一个项目目录，执行git init，会初始化一个repo，并在当前文件夹下创建一个.git文件夹。</p>
<h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git add README</span><br></pre></td></tr></table></figure>

<p>在提交之前, Git有一个<code>暂存区(staging area)</code>,可以放入新添加的文件或者加入新的改动, commit时提交的改动是上一次加入到staging area中的改动, 而不是我们<code>disk</code>上的改动。<code>git add .</code>会递归地添加当前工作目录中的所有文件.</p>
<h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git commit -m &quot;first commit&quot;</span><br><span class="line">$ git commit -a</span><br><span class="line">$ git commit --amend</span><br></pre></td></tr></table></figure>

<blockquote>
<p>提交已经被add进来的改动。</p>
</blockquote>
<p><code>git commit -m “the commit message&quot;</code><br><code>git commit -a</code> 会先把所有已经<code>track</code>的文件的改动add进来，然后提交(有点像svn的一次提交，不用先暂存)。对于没有track的文件，还是需要<code>git add</code>一下。<br><code>git commit --amend</code> 增补提交，会使用与当前提交节点相同的父节点进行一次新的提交，旧的提交将会被取消。</p>
<h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git remote</span><br><span class="line">$ git remote -v</span><br><span class="line">$ git remote add [alias] [url]</span><br><span class="line">$ git remote rm [alias]</span><br><span class="line">$ git remote rename [old-alias] [new-alias]</span><br><span class="line">$ git remote set-url [alias] [url]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong><code>git remote</code>: list，add and delete remote repository aliases。<br>因为不需要每次都用完整的url，所以Git为每一个remote repo的url都建立一个别名，然后用git remote来管理这个list。</strong></p>
</blockquote>
<p><code>git remote</code>：列出remote aliases。<br>如果你clone一个project，Git会自动将原来的url添加进来，别名就叫做: origin。<br><code>git remote -v</code>：可以看见每一个别名对应的实际url。<br><code>git remote add [alias] [url]</code>： 添加一个新的remote repo。<br><code>git remote rm [alias]</code>： 删除一个存在的remote alias。<br><code>git remote rename [old-alias] [new-alias]</code>： 重命名。<br><code>git remote set-url [alias] [url]</code>：更新url，可以加上—push和fetch参数，为同一个别名set不同的存取地址。</p>
<h3 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git branch -v</span><br><span class="line">$ git branch</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line">$ git branch -D [branch-name]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>git branch，可以用来列出分支，创建分支和删除分支。</strong></p>
</blockquote>
<p><code>git branch -v</code>： 可以看见每一个分支的最后一次提交。<br><code>git branch</code>： 列出本地所有分支，当前分支会被星号标示出。<br><code>git branch [branch-name]</code>: 创建一个新的分支(当你用这种方式创建分支的时候，分支是基于你的上一次提交建立的)。<br><code>git branch -d [branch-name]</code>: 删除指定分支。（<em>查看哪些分支已被并入当前分支，清单中带有<code>*</code>字符的表示当前所在的分支。一般来说，列表中没有<code>*</code>的分支通常都可以用 <code>git branch -d</code> 来删掉。对于未合并的分支，用 git branch -d 删除该分支会导致失败。不过，如果你坚信你要删除它，可以用大写的删除选项 <code>git branch -D</code> 强制执行</em>）</p>
<h3 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git checkout [branch-name]</span><br><span class="line">$ git checkout -b [branch-name]</span><br><span class="line">$ git checkout --&lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p><code>git checkout [branch-name]</code> ： 切换到一个分支。<br><code>git checkout -b [branch-name]</code>：创建并切换到新的分支。这个命令是将 <code>git branch newbranch</code> 和 <code>git checkout newbranch</code> 合在一起的结果。</p>
<p>checkout 还有另一个作用：替换本地改动。</p>
<p><code>git checkout --&lt;filename&gt;</code>：此命令会使用HEAD中的最新内容替换掉你的工作目录中的文件，已添加到暂存区的改动以及新文件都不会受到影响。</p>
<p><font color="#FF0000"><strong>注意: git checkout filename 会删除该文件中所有没有暂存和提交的改动,这个操作是不可逆的.</strong></font></p>
<h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git merge [alias]/[branch]</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>git merge，把一个分支merge进当前的分支。</strong></p>
</blockquote>
<p><code>git merge [alias]/[branch]</code>：把远程分支merge到当前分支。</p>
<p>如果出现冲突，需要手动修改，可以用<code>git mergetool</code>。解决冲突的时候可以用到<code>git diff</code>，解决完之后用<code>git add</code>添加，即表示冲突已经被resolved。</p>
<h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git push [alias] [branch]</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>push your new branches and data to a remote repository aliases.</strong></p>
</blockquote>
<p><code>git push [alias] [branch]</code> ：将会把当前分支 merge 到 [alias] 上的 [branch] 分支。如果分支已经存在，将会更新，如果不存在，将会添加这个分支。</p>
<p>如果有多个人向同一个 <code>remote repo</code> push代码， Git会首先在你试图 push 的分支上运行 git log，检查它的历史中是否能看到 server 上的 branch 现在的 tip，如果本地历史中不能看到server的tip，说明本地的代码不是最新的，Git会拒绝你的push，让你先<code>fetch + merge (pull)</code>，之后再 push，这样就保证了所有人的改动都会被考虑进来。</p>
<h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>fetch from a remote repo and try to merge into the current branch.<br>pull == fetch + merge FETCH_HEAD</strong></p>
</blockquote>
<p><code>git pull</code>：会首先执行<code>git fetch</code>，然后执行<code>git merge</code>，把取来的分支的 head <code>merge</code> 到当前分支。这个 merge 操作会产生一个新的commit。<br>如果使用<code>--rebase</code>参数，它会执行<code>git rebase</code>来取代原来的<code>git merge</code>。</p>
<h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git clone [url]</span><br><span class="line">$ git clone [url] [newname]</span><br></pre></td></tr></table></figure>

<p><code>git clone [url]</code>：获取一个url对应的远程Git repo， 创建一个local copy。</p>
<p>clone下来的repo会以url最后一个斜线后面的名称命名,创建一个文件夹，如果想要指定特定的名称，可以<code>git clone [url] newname</code>指定。</p>
<h3 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag v1.0</span><br><span class="line">git tag -a v1.0</span><br><span class="line">git push -v origin refs/tags/0.1.0</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>tag a point in history as import.</strong></p>
</blockquote>
<p><code>git tag v1.0</code>，会在一个提交上建立永久性的书签，通常是发布一个release版本或者ship了什么东西之后加tag。</p>
<p><code>git tag -a v1.0</code>, -a 参数会允许你添加一些信息，即make an annotated tag。当你运行git tag -a命令的时候，Git会打开一个编辑器让你输入tag信息。</p>
<p><code>git push -v origin refs/tags/0.1.0</code>， 推送标签至远端。</p>
<p>我们可以利用commit SHA来给一个过去的提交打tag:<br><code>git tag -a v0.9 XXXX</code></p>
<p>push的时候是不包含tag的，如果想包含，可以在push时加上<code>--tags</code>参数。</p>
<p>fetch的时候，branch HEAD可以reach的tags是自动被fetch下来的，tags that aren’t reachable from branch heads will be skipped。如果想确保所有的tags都被包含进来，需要加上<code>--tags</code>选项。</p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>【Tips】解决 ping github.com 超时问题</title>
    <url>/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="解决-ping-github-com-超时问题"><a href="#解决-ping-github-com-超时问题" class="headerlink" title="解决 ping github.com 超时问题"></a>解决 ping github.com 超时问题</h1><p>1、尝试 <code>ping github.com</code>，结果发现Ping不通，但是 <code>ping baidu.com</code> 却是正常的。</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787751105633.jpg"></p>
<span id="more"></span>

<p>2、初步分心应该是本地的DNS无法解析导致的，需要修改Hosts文件，添加 github 的ip地址项</p>
<h2 id="如何修改Hosts文件？"><a href="#如何修改Hosts文件？" class="headerlink" title="如何修改Hosts文件？"></a>如何修改Hosts文件？</h2><h3 id="1、通过终端命令修改"><a href="#1、通过终端命令修改" class="headerlink" title="1、通过终端命令修改"></a>1、通过终端命令修改</h3><p>（1）打开终端，输入命令行：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># sudo 以管理员权限执行</span><br><span class="line">sudo vi /etc/hosts</span><br></pre></td></tr></table></figure>

<p>（2）输入本机密码后，会自动打开hosts文件 。</p>
<ul>
<li>键盘输入<code>i</code>（插入），修改完成后，按 <code>esc</code> 键退出插入页面</li>
<li>保存退出：输入  <code>:wq</code> 或者<code>:wq!</code>，再<code>enter</code>键 </li>
<li>不保存退出：输入<code>q</code>和<code>！</code>键，再<code>enter</code>键</li>
</ul>
<h3 id="2、在-Finder-中修改"><a href="#2、在-Finder-中修改" class="headerlink" title="2、在 Finder 中修改"></a>2、在 Finder 中修改</h3><p>方法一：</p>
<p>（1）打开 <code>Finder</code> ，快捷键 <code>Command+Shift+G</code> 查找文件，输入 <code>/etc/hosts</code>，点击前往</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787751416982.jpg"></p>
<p>（2） 复制hosts文件到桌面，修改成功后替换原hosts文件即可</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787751730177.jpg"></p>
<p>方法二：</p>
<p>（1）打开Finder，快捷键 <code>Shift+Command+G</code> 查找文件，输入 <code>/private</code> 前往</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787751897989.jpg"></p>
<p>（2）找到 <code>etc</code> 文件之后，选择显示简介</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787752011240.jpg"></p>
<p>（3）找到共享与权限，将everyone的权限修改为读和写，保存后修改hosts文件，修改成功后记得把权限修改回来！</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787752140821.jpg"></p>
<h2 id="如何在-Hosts-文件中配置-github-com-映射"><a href="#如何在-Hosts-文件中配置-github-com-映射" class="headerlink" title="如何在 Hosts 文件中配置 github.com 映射"></a>如何在 Hosts 文件中配置 github.com 映射</h2><p>host文件打开之后可以看到：</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787752278743.jpg"></p>
<p>在文件下面添加如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#<span class="title class_">GitHub</span>地址</span><br><span class="line"><span class="number">140.82</span><span class="number">.114</span><span class="number">.3</span> github.<span class="property">com</span> git</span><br><span class="line"><span class="number">151.101</span><span class="number">.129</span><span class="number">.194</span> github.<span class="property">global</span>.<span class="property">ssl</span>.<span class="property">fastly</span>.<span class="property">net</span></span><br></pre></td></tr></table></figure>

<p>上图中的 IP 可以通过， <a href="https://www.ipaddress.com/">ipaddress</a> 网站查询，输入网址就可查阅到对应的IP地址。（这是一个查询域名映射关系的工具）</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787752425693.jpg"></p>
<p><code>140.82.114.3</code>：这个IP地址修改为 <code>github.com</code>搜索到的IP地址</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787752554840.jpg"></p>
<p><code>151.101.129.194</code>：这个IP地址修改为<code>github.global.ssl.fastly.net</code>搜索到的<br>IP地址，其中可能会有多个，挑选其中一个即可。</p>
<p>添加完成，重新在终端 <code>ping github.com</code>，发现可以 ping 通了， 如下图：</p>
<p><img data-src="/Tips/%E3%80%90Tips%E3%80%91%E8%A7%A3%E5%86%B3ping%20github.com%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98/16787752693740.jpg"></p>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>【Tips】国际公认国家地区代码表</title>
    <url>/Tips/%E3%80%90Tips%E3%80%91%E5%9B%BD%E9%99%85%E5%85%AC%E8%AE%A4%E5%9B%BD%E5%AE%B6%E5%9C%B0%E5%8C%BA%E4%BB%A3%E7%A0%81%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="国际公认国家地区代码表"><a href="#国际公认国家地区代码表" class="headerlink" title="国际公认国家地区代码表"></a>国际公认国家地区代码表</h1><span id="more"></span>

<table>
<thead>
<tr>
<th align="center">洲</th>
<th align="center">二位字母</th>
<th align="center">国家或地区（ISO 英文用名）</th>
<th align="center">中国 惯用名</th>
<th align="center">台湾 惯用名</th>
<th align="center">香港 惯用名</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">欧洲</td>
<td align="center">AD</td>
<td align="center">Andorra</td>
<td align="center">安道尔</td>
<td align="center">安道尔</td>
<td align="center">安道尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AL</td>
<td align="center">Albania</td>
<td align="center">阿尔巴尼亚</td>
<td align="center">阿尔巴尼亚</td>
<td align="center">阿尔巴尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AT</td>
<td align="center">Austria</td>
<td align="center">奥地利</td>
<td align="center">奥地利</td>
<td align="center">奥地利</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AX</td>
<td align="center">Aland Island</td>
<td align="center">奥兰群岛</td>
<td align="center">奥兰群岛</td>
<td align="center">亚兰群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BA</td>
<td align="center">Bosnia &amp; Herzegovina</td>
<td align="center">波黑</td>
<td align="center">波黑</td>
<td align="center">波黑</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BE</td>
<td align="center">Belgium</td>
<td align="center">比利时</td>
<td align="center">比利时</td>
<td align="center">比利时</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BG</td>
<td align="center">Bulgaria</td>
<td align="center">保加利亚</td>
<td align="center">保加利亚</td>
<td align="center">保加利亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BL</td>
<td align="center">Saint Barthélemy</td>
<td align="center">圣巴泰勒米岛</td>
<td align="center">圣巴瑟米</td>
<td align="center">圣巴托洛缪岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BM</td>
<td align="center">Bermuda</td>
<td align="center">百慕大</td>
<td align="center">百慕大</td>
<td align="center">百慕大</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BQ</td>
<td align="center">Caribbean Netherlands</td>
<td align="center">荷兰加勒比区</td>
<td align="center">荷兰加勒比区</td>
<td align="center">荷兰加勒比区</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BV</td>
<td align="center">Bouvet Island</td>
<td align="center">布韦岛</td>
<td align="center">布威岛</td>
<td align="center">鲍威特岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BY</td>
<td align="center">Belarus</td>
<td align="center">白俄罗斯</td>
<td align="center">白俄罗斯</td>
<td align="center">白俄罗斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CH</td>
<td align="center">Switzerland</td>
<td align="center">瑞士</td>
<td align="center">瑞士</td>
<td align="center">瑞士</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CZ</td>
<td align="center">Czech Republic</td>
<td align="center">捷克</td>
<td align="center">捷克</td>
<td align="center">捷克</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">DE</td>
<td align="center">Germany</td>
<td align="center">德国</td>
<td align="center">德国</td>
<td align="center">德国</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">DK</td>
<td align="center">Denmark</td>
<td align="center">丹麦</td>
<td align="center">丹麦</td>
<td align="center">丹麦</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">EE</td>
<td align="center">Estonia</td>
<td align="center">爱沙尼亚</td>
<td align="center">爱沙尼亚</td>
<td align="center">爱沙尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ES</td>
<td align="center">Spain</td>
<td align="center">西班牙</td>
<td align="center">西班牙</td>
<td align="center">西班牙</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">FI</td>
<td align="center">Finland</td>
<td align="center">芬兰</td>
<td align="center">芬兰</td>
<td align="center">芬兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">FO</td>
<td align="center">Faroe Islands</td>
<td align="center">法罗群岛</td>
<td align="center">法罗群岛</td>
<td align="center">法罗群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">FR</td>
<td align="center">France</td>
<td align="center">法国</td>
<td align="center">法国</td>
<td align="center">法国</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GI</td>
<td align="center">Gibraltar</td>
<td align="center">直布罗陀</td>
<td align="center">直布罗陀</td>
<td align="center">直布罗陀</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GR</td>
<td align="center">Greece</td>
<td align="center">希腊</td>
<td align="center">希腊</td>
<td align="center">希腊</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GS</td>
<td align="center">South Georgia and the South Sandwich Islands</td>
<td align="center">南乔治亚岛和南桑威奇群岛</td>
<td align="center">南乔治亚与南三明治群岛</td>
<td align="center">南乔治亚岛与南桑威奇群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">HR</td>
<td align="center">Croatia</td>
<td align="center">克罗地亚</td>
<td align="center">克罗地亚</td>
<td align="center">克罗地亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">HU</td>
<td align="center">Hungary</td>
<td align="center">匈牙利</td>
<td align="center">匈牙利</td>
<td align="center">匈牙利</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IE</td>
<td align="center">Ireland</td>
<td align="center">爱尔兰</td>
<td align="center">爱尔兰</td>
<td align="center">爱尔兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IM</td>
<td align="center">Isle of Man</td>
<td align="center">马恩岛</td>
<td align="center">马恩岛</td>
<td align="center">马恩岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IS</td>
<td align="center">Iceland</td>
<td align="center">冰岛</td>
<td align="center">冰岛</td>
<td align="center">冰岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IT</td>
<td align="center">Italy</td>
<td align="center">意大利</td>
<td align="center">意大利</td>
<td align="center">意大利</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">JE</td>
<td align="center">Jersey</td>
<td align="center">泽西岛</td>
<td align="center">泽西岛</td>
<td align="center">泽西</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LI</td>
<td align="center">Liechtenstein</td>
<td align="center">列支敦士登</td>
<td align="center">列支敦士登</td>
<td align="center">列支敦士登</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LT</td>
<td align="center">Lithuania</td>
<td align="center">立陶宛</td>
<td align="center">立陶宛</td>
<td align="center">立陶宛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LU</td>
<td align="center">Luxembourg</td>
<td align="center">卢森堡</td>
<td align="center">卢森堡</td>
<td align="center">卢森堡</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LV</td>
<td align="center">Latvia</td>
<td align="center">拉脱维亚</td>
<td align="center">拉脱维亚</td>
<td align="center">拉脱维亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MC</td>
<td align="center">Monaco</td>
<td align="center">摩纳哥</td>
<td align="center">摩纳哥</td>
<td align="center">摩纳哥</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MD</td>
<td align="center">Moldova</td>
<td align="center">摩尔多瓦</td>
<td align="center">摩尔多瓦</td>
<td align="center">摩尔多瓦</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ME</td>
<td align="center">Montenegro</td>
<td align="center">黑山</td>
<td align="center">黑山</td>
<td align="center">黑山</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MK</td>
<td align="center">Republic of Macedonia （FYROM）</td>
<td align="center">马其顿</td>
<td align="center">马其顿</td>
<td align="center">马其顿</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MQ</td>
<td align="center">Martinique</td>
<td align="center">马提尼克</td>
<td align="center">法属马丁尼克</td>
<td align="center">马提尼克</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MS</td>
<td align="center">Montserrat</td>
<td align="center">蒙塞拉特岛</td>
<td align="center">蒙塞拉特岛</td>
<td align="center">蒙塞拉特岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MT</td>
<td align="center">Malta</td>
<td align="center">马耳他</td>
<td align="center">马耳他</td>
<td align="center">马耳他</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NL</td>
<td align="center">Netherlands</td>
<td align="center">荷兰</td>
<td align="center">荷兰</td>
<td align="center">荷兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NO</td>
<td align="center">Norway</td>
<td align="center">挪威</td>
<td align="center">挪威</td>
<td align="center">挪威</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PL</td>
<td align="center">Poland</td>
<td align="center">波兰</td>
<td align="center">波兰</td>
<td align="center">波兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RE</td>
<td align="center">Réunion</td>
<td align="center">留尼汪</td>
<td align="center">留尼汪</td>
<td align="center">留尼汪</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RO</td>
<td align="center">Romania</td>
<td align="center">罗马尼亚</td>
<td align="center">罗马尼亚</td>
<td align="center">罗马尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RS</td>
<td align="center">Serbia</td>
<td align="center">塞尔维亚</td>
<td align="center">塞尔维亚</td>
<td align="center">塞尔维亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RU</td>
<td align="center">Russian Federation</td>
<td align="center">俄罗斯</td>
<td align="center">俄罗斯</td>
<td align="center">俄罗斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SE</td>
<td align="center">Sweden</td>
<td align="center">瑞典</td>
<td align="center">瑞典</td>
<td align="center">瑞典</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SI</td>
<td align="center">Slovenia</td>
<td align="center">斯洛文尼亚</td>
<td align="center">斯洛文尼亚</td>
<td align="center">斯洛文尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SJ</td>
<td align="center">Template:Country data SJM Svalbard</td>
<td align="center">斯瓦尔巴群岛和 扬马延岛</td>
<td align="center">斯瓦巴及 尖棉岛</td>
<td align="center">斯瓦尔巴特群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SK</td>
<td align="center">Slovakia</td>
<td align="center">斯洛伐克</td>
<td align="center">斯洛伐克</td>
<td align="center">斯洛伐克</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SM</td>
<td align="center">San Marino</td>
<td align="center">圣马力诺</td>
<td align="center">圣马力诺</td>
<td align="center">圣马力诺</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">UA</td>
<td align="center">Ukraine</td>
<td align="center">乌克兰</td>
<td align="center">乌克兰</td>
<td align="center">乌克兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VA</td>
<td align="center">Vatican City （The Holy See）</td>
<td align="center">梵蒂冈</td>
<td align="center">梵蒂冈</td>
<td align="center">梵蒂冈</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">YT</td>
<td align="center">Mayotte</td>
<td align="center">马约特</td>
<td align="center">美亚特</td>
<td align="center">马约特</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GG</td>
<td align="center">Guernsey</td>
<td align="center">根西岛</td>
<td align="center">根息岛</td>
<td align="center">根西岛</td>
<td align="center">中国大陆曾将之普遍译作“ 格恩西岛”</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NC</td>
<td align="center">New Caledonia</td>
<td align="center">新喀里多尼亚</td>
<td align="center">新喀里多尼亚岛</td>
<td align="center">新喀里多尼亚</td>
<td align="center">亦有部份人士使用“ 新喀尔多尼亚”一词于 港澳地区</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TF</td>
<td align="center">French Southern Territories</td>
<td align="center">法属南部领地</td>
<td align="center">法属南部属地</td>
<td align="center">法属南部地区</td>
<td align="center">台湾亦普遍采用“ 法属南方及南极陆地”一词于其它场合（如 MSN台湾）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GB</td>
<td align="center">Great Britain （United Kingdom; England）</td>
<td align="center">英国</td>
<td align="center">英国</td>
<td align="center">英国</td>
<td align="center">台湾和 香港亦普遍采用“ 联合王国”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PT</td>
<td align="center">Portugal</td>
<td align="center">葡萄牙</td>
<td align="center">葡萄牙</td>
<td align="center">葡萄牙</td>
<td align="center">澳门民间亦普遍称之为葡国</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SH</td>
<td align="center">St. Helena &amp; Dependencies</td>
<td align="center">圣赫勒拿</td>
<td align="center">圣赫勒拿岛</td>
<td align="center">圣赫勒拿</td>
<td align="center">香港亦普遍采用“圣赫勒拿岛”一词于其它场合（如香港邮政的邮政指南附录表）。亦有部份人士使用“圣海伦娜岛”一词于港澳地区</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">亚洲</td>
<td align="center">AE</td>
<td align="center">United Arab Emirates</td>
<td align="center">阿联酋</td>
<td align="center">阿联</td>
<td align="center">阿联酋</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AF</td>
<td align="center">Afghanistan</td>
<td align="center">阿富汗</td>
<td align="center">阿富汗</td>
<td align="center">阿富汗</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AM</td>
<td align="center">Armenia</td>
<td align="center">亚美尼亚</td>
<td align="center">亚美尼亚</td>
<td align="center">亚美尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AZ</td>
<td align="center">Azerbaijan</td>
<td align="center">阿塞拜疆</td>
<td align="center">阿塞拜疆</td>
<td align="center">阿塞拜疆</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BD</td>
<td align="center">Bangladesh</td>
<td align="center">孟加拉</td>
<td align="center">孟加拉</td>
<td align="center">孟加拉</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BH</td>
<td align="center">Bahrain</td>
<td align="center">巴林</td>
<td align="center">巴林</td>
<td align="center">巴林</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BN</td>
<td align="center">Brunei</td>
<td align="center">文莱</td>
<td align="center">文莱</td>
<td align="center">文莱</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BT</td>
<td align="center">Bhutan</td>
<td align="center">不丹</td>
<td align="center">不丹</td>
<td align="center">不丹</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CY</td>
<td align="center">Cyprus</td>
<td align="center">塞浦路斯</td>
<td align="center">塞浦路斯</td>
<td align="center">塞浦路斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GE</td>
<td align="center">Georgia</td>
<td align="center">格鲁吉亚</td>
<td align="center">乔治亚</td>
<td align="center">格鲁吉亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">HK</td>
<td align="center">Hong Kong</td>
<td align="center">香港</td>
<td align="center">香港</td>
<td align="center">香港</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ID</td>
<td align="center">Indonesia</td>
<td align="center">印尼</td>
<td align="center">印尼</td>
<td align="center">印尼</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IL</td>
<td align="center">Israel</td>
<td align="center">以色列</td>
<td align="center">以色列</td>
<td align="center">以色列</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IN</td>
<td align="center">India</td>
<td align="center">印度</td>
<td align="center">印度</td>
<td align="center">印度</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IO</td>
<td align="center">British Indian Ocean Territory</td>
<td align="center">英属印度洋领地</td>
<td align="center">英属印度洋地区</td>
<td align="center">英属印度洋地区</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IQ</td>
<td align="center">Iraq</td>
<td align="center">伊拉克</td>
<td align="center">伊拉克</td>
<td align="center">伊拉克</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">IR</td>
<td align="center">Iran</td>
<td align="center">伊朗</td>
<td align="center">伊朗</td>
<td align="center">伊朗</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">JO</td>
<td align="center">Jordan</td>
<td align="center">约旦</td>
<td align="center">约旦</td>
<td align="center">约旦</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">JP</td>
<td align="center">Japan</td>
<td align="center">日本</td>
<td align="center">日本</td>
<td align="center">日本</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KH</td>
<td align="center">Cambodia</td>
<td align="center">柬埔寨</td>
<td align="center">柬埔寨</td>
<td align="center">柬埔寨</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KW</td>
<td align="center">Kuwait</td>
<td align="center">科威特</td>
<td align="center">科威特</td>
<td align="center">科威特</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LB</td>
<td align="center">Lebanon</td>
<td align="center">黎巴嫩</td>
<td align="center">黎巴嫩</td>
<td align="center">黎巴嫩</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LK</td>
<td align="center">Sri Lanka</td>
<td align="center">斯里兰卡</td>
<td align="center">斯里兰卡</td>
<td align="center">斯里兰卡</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MM</td>
<td align="center">Myanmar （Burma）</td>
<td align="center">缅甸</td>
<td align="center">缅甸</td>
<td align="center">缅甸</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MO</td>
<td align="center">Macao</td>
<td align="center">澳门</td>
<td align="center">澳门</td>
<td align="center">澳门</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MV</td>
<td align="center">Maldives</td>
<td align="center">马尔代夫</td>
<td align="center">马尔代夫</td>
<td align="center">马尔代夫</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MY</td>
<td align="center">Malaysia</td>
<td align="center">马来西亚</td>
<td align="center">马来西亚</td>
<td align="center">马来西亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NP</td>
<td align="center">Nepal</td>
<td align="center">尼泊尔</td>
<td align="center">尼泊尔</td>
<td align="center">尼泊尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">OM</td>
<td align="center">Oman</td>
<td align="center">阿曼</td>
<td align="center">阿曼</td>
<td align="center">阿曼</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PH</td>
<td align="center">The Philippines</td>
<td align="center">菲律宾</td>
<td align="center">菲律宾</td>
<td align="center">菲律宾</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PK</td>
<td align="center">Pakistan</td>
<td align="center">巴基斯坦</td>
<td align="center">巴基斯坦</td>
<td align="center">巴基斯坦</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PS</td>
<td align="center">Palestinian territories</td>
<td align="center">巴勒斯坦</td>
<td align="center">巴勒斯坦</td>
<td align="center">巴勒斯坦</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">QA</td>
<td align="center">Qatar</td>
<td align="center">卡塔尔</td>
<td align="center">卡达</td>
<td align="center">卡塔尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SG</td>
<td align="center">Singapore</td>
<td align="center">新加坡</td>
<td align="center">新加坡 星加坡</td>
<td align="center">新加坡 星加坡</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SY</td>
<td align="center">Syria</td>
<td align="center">叙利亚</td>
<td align="center">叙利亚</td>
<td align="center">叙利亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TH</td>
<td align="center">Thailand</td>
<td align="center">泰国</td>
<td align="center">泰国</td>
<td align="center">泰国</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TL</td>
<td align="center">Timor-Leste （East Timor）</td>
<td align="center">东帝汶</td>
<td align="center">东帝汶</td>
<td align="center">东帝汶</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TR</td>
<td align="center">Turkey</td>
<td align="center">土耳其</td>
<td align="center">土耳其</td>
<td align="center">土耳其</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VN</td>
<td align="center">Vietnam</td>
<td align="center">越南</td>
<td align="center">越南</td>
<td align="center">越南</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">YE</td>
<td align="center">Yemen</td>
<td align="center">也门</td>
<td align="center">也门</td>
<td align="center">也门</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CN</td>
<td align="center">China</td>
<td align="center">中国 内地</td>
<td align="center">大陆 中国</td>
<td align="center">大陆 内地</td>
<td align="center">“ GB/T 2659-2000”的“CN”适用于整个 中华人民共和国辖区（包括 中国大陆、 香港、 澳门）。而“ISO 3166-1”和“ CNS 12842”的“CN”则仅适用于中国大陆，不含 港澳地区。</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TW</td>
<td align="center">Taiwan</td>
<td align="center">台湾地区/台湾省</td>
<td align="center">台湾</td>
<td align="center">台湾</td>
<td align="center">台湾地区的国际政治地位可参见 未被国际普遍承认的国家列表、台海现状以及旧金山条约。</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SA</td>
<td align="center">Saudi Arabia</td>
<td align="center">沙特阿拉伯</td>
<td align="center">沙特阿拉伯</td>
<td align="center">沙特阿拉伯</td>
<td align="center">新加坡与 马来西亚均将之译作“ 沙特阿拉伯”。 香港亦普遍采用“沙特阿拉伯”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LA</td>
<td align="center">Laos</td>
<td align="center">老挝</td>
<td align="center">老挝</td>
<td align="center">老挝</td>
<td align="center">新加坡与 马来西亚均将之译作“老挝”</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KP</td>
<td align="center">North Korea</td>
<td align="center">朝鲜 北朝鲜</td>
<td align="center">北朝鲜</td>
<td align="center">朝鲜 北朝鲜</td>
<td align="center">澳门习惯称之为“ 北朝鲜”</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KR</td>
<td align="center">South Korea</td>
<td align="center">韩国 南朝鲜</td>
<td align="center">韩国</td>
<td align="center">韩国</td>
<td align="center">澳门习惯称之为“ 韩国”</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KG</td>
<td align="center">Kyrgyzstan</td>
<td align="center">吉尔吉斯斯坦</td>
<td align="center">吉尔吉斯</td>
<td align="center">吉尔吉斯</td>
<td align="center">香港习惯略去“斯坦”后缀，有必要会用全称</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KZ</td>
<td align="center">Kazakhstan</td>
<td align="center">哈萨克斯坦</td>
<td align="center">哈萨克</td>
<td align="center">哈萨克</td>
<td align="center">香港习惯略去“斯坦”后缀，有必要会用全称</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TJ</td>
<td align="center">Tajikistan</td>
<td align="center">塔吉克斯坦</td>
<td align="center">塔吉克</td>
<td align="center">塔吉克</td>
<td align="center">香港习惯略去“斯坦”后缀，有必要会用全称</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TM</td>
<td align="center">Turkmenistan</td>
<td align="center">土库曼斯坦</td>
<td align="center">土库曼</td>
<td align="center">土库曼</td>
<td align="center">香港习惯略去“斯坦”后缀，有必要会用全称</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">UZ</td>
<td align="center">Uzbekistan</td>
<td align="center">乌兹别克斯坦</td>
<td align="center">乌兹别克</td>
<td align="center">乌兹别克</td>
<td align="center">香港习惯略去“斯坦”后缀，有必要会用全称</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MN</td>
<td align="center">Mongolia</td>
<td align="center">蒙古国 蒙古</td>
<td align="center">蒙古</td>
<td align="center">蒙古国</td>
<td align="center">香港亦普遍采用“ 蒙古”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">北美洲</td>
<td align="center">AG</td>
<td align="center">Antigua &amp; Barbuda</td>
<td align="center">安提瓜和巴布达</td>
<td align="center">安提瓜和巴布达</td>
<td align="center">安提瓜和巴布达</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AI</td>
<td align="center">Anguilla</td>
<td align="center">安圭拉</td>
<td align="center">英属安圭拉</td>
<td align="center">安圭拉岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AW</td>
<td align="center">Aruba</td>
<td align="center">阿鲁巴</td>
<td align="center">阿鲁巴</td>
<td align="center">阿鲁巴</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BB</td>
<td align="center">Barbados</td>
<td align="center">巴巴多斯</td>
<td align="center">巴巴多斯</td>
<td align="center">巴巴多斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BS</td>
<td align="center">The Bahamas</td>
<td align="center">巴哈马</td>
<td align="center">巴哈马</td>
<td align="center">巴哈马</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BZ</td>
<td align="center">Belize</td>
<td align="center">伯利兹</td>
<td align="center">伯利兹</td>
<td align="center">伯利兹</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CA</td>
<td align="center">Canada</td>
<td align="center">加拿大</td>
<td align="center">加拿大</td>
<td align="center">加拿大</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CR</td>
<td align="center">Costa Rica</td>
<td align="center">哥斯达黎加</td>
<td align="center">哥斯达黎加</td>
<td align="center">哥斯达黎加</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CU</td>
<td align="center">Cuba</td>
<td align="center">古巴</td>
<td align="center">古巴</td>
<td align="center">古巴</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">DM</td>
<td align="center">Dominica</td>
<td align="center">多米尼克</td>
<td align="center">多米尼克</td>
<td align="center">多米尼克</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">DO</td>
<td align="center">Dominican Republic</td>
<td align="center">多米尼加</td>
<td align="center">多米尼加</td>
<td align="center">多米尼加</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GD</td>
<td align="center">Grenada</td>
<td align="center">格林纳达</td>
<td align="center">格林纳达</td>
<td align="center">格林纳达</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GL</td>
<td align="center">Greenland</td>
<td align="center">格陵兰</td>
<td align="center">格陵兰</td>
<td align="center">格陵兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GP</td>
<td align="center">Guadeloupe</td>
<td align="center">瓜德罗普</td>
<td align="center">瓜德鲁普岛</td>
<td align="center">瓜德鲁普岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GT</td>
<td align="center">Guatemala</td>
<td align="center">危地马拉</td>
<td align="center">危地马拉</td>
<td align="center">危地马拉</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">HN</td>
<td align="center">Honduras</td>
<td align="center">洪都拉斯</td>
<td align="center">洪都拉斯</td>
<td align="center">洪都拉斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">HT</td>
<td align="center">Haiti</td>
<td align="center">海地</td>
<td align="center">海地</td>
<td align="center">海地</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">JM</td>
<td align="center">Jamaica</td>
<td align="center">牙买加</td>
<td align="center">牙买加</td>
<td align="center">牙买加</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KY</td>
<td align="center">Cayman Islands</td>
<td align="center">开曼群岛</td>
<td align="center">开曼群岛</td>
<td align="center">开曼群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MF</td>
<td align="center">Saint Martin （France）</td>
<td align="center">法属圣马丁</td>
<td align="center">法属圣马丁</td>
<td align="center">法属圣马丁</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MX</td>
<td align="center">Mexico</td>
<td align="center">墨西哥</td>
<td align="center">墨西哥</td>
<td align="center">墨西哥</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NI</td>
<td align="center">Nicaragua</td>
<td align="center">尼加拉瓜</td>
<td align="center">尼加拉瓜</td>
<td align="center">尼加拉瓜</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PA</td>
<td align="center">Panama</td>
<td align="center">巴拿马</td>
<td align="center">巴拿马</td>
<td align="center">巴拿马</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PR</td>
<td align="center">Puerto Rico</td>
<td align="center">波多黎各</td>
<td align="center">波多黎各</td>
<td align="center">波多黎各</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SV</td>
<td align="center">El Salvador</td>
<td align="center">萨尔瓦多</td>
<td align="center">萨尔瓦多</td>
<td align="center">萨尔瓦多</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TC</td>
<td align="center">Turks &amp; Caicos Islands</td>
<td align="center">特克斯和凯科斯群岛</td>
<td align="center">土克斯及开科斯群岛</td>
<td align="center">特克斯和凯科斯群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">US</td>
<td align="center">United States of America （USA）</td>
<td align="center">美国</td>
<td align="center">美国</td>
<td align="center">美国</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VG</td>
<td align="center">British Virgin Islands</td>
<td align="center">英属维尔京群岛</td>
<td align="center">英属维尔京群岛</td>
<td align="center">英属处女群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VI</td>
<td align="center">United States Virgin Islands</td>
<td align="center">美属维尔京群岛</td>
<td align="center">美属维尔京群岛</td>
<td align="center">美属处女群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MP</td>
<td align="center">Northern Mariana Islands</td>
<td align="center">北马里亚纳群岛</td>
<td align="center">北马里亚纳群岛</td>
<td align="center">北马里亚纳群岛</td>
<td align="center">亦有部份人士使用“ 北玛利安娜群岛”一词于 港澳地区</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">UM</td>
<td align="center">United States Minor Outlying Islands</td>
<td align="center">美国本土外小岛屿</td>
<td align="center">美国边疆小岛</td>
<td align="center">美国海外小岛</td>
<td align="center">台湾亦普遍采用“ 美国外岛”一词于其它场合（如 MSN台湾）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TT</td>
<td align="center">Trinidad &amp; Tobago</td>
<td align="center">特立尼达和多巴哥</td>
<td align="center"></td>
<td align="center">特立尼达和多巴哥</td>
<td align="center">特立尼达和多巴哥</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VC</td>
<td align="center">St. Vincent &amp; the Grenadines</td>
<td align="center">圣文森特和格林纳丁斯</td>
<td align="center">圣文森特和格林纳丁斯</td>
<td align="center">圣文森特和格林纳丁斯</td>
<td align="center">台湾将之简称为“ 圣文森”</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KN</td>
<td align="center">St. Kitts &amp; Nevis</td>
<td align="center">圣基茨和尼维斯</td>
<td align="center">圣基茨和尼维斯</td>
<td align="center">圣基茨和尼维斯</td>
<td align="center">香港亦普遍采用“ 圣克里斯托佛岛及尼维斯岛”一词于其它场合（如 香港邮政的邮政指南附录表）。亦有部份人士使用“ 圣基茨和尼维斯”一词于 港澳地区</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PM</td>
<td align="center">Saint-Pierre and Miquelon</td>
<td align="center">圣皮埃尔和密克隆</td>
<td align="center">圣皮耶与密克隆群岛</td>
<td align="center">圣皮埃尔岛和密克隆岛</td>
<td align="center">香港亦普遍采用“ 圣皮埃兰和密克隆群岛”一词于其它场合（如 香港邮政的邮政指南附录表）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LC</td>
<td align="center">St. Lucia</td>
<td align="center">圣卢西亚</td>
<td align="center">圣卢西亚</td>
<td align="center">圣卢西亚</td>
<td align="center">香港亦普遍采用“ 圣路西亚”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">非洲</td>
<td align="center">AO</td>
<td align="center">Angola</td>
<td align="center">安哥拉</td>
<td align="center">安哥拉</td>
<td align="center">安哥拉</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BF</td>
<td align="center">Burkina</td>
<td align="center">布基纳法索</td>
<td align="center">布基纳法索</td>
<td align="center">布基纳法索</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BI</td>
<td align="center">Burundi</td>
<td align="center">布隆迪</td>
<td align="center">布隆迪</td>
<td align="center">布隆迪</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BJ</td>
<td align="center">Benin</td>
<td align="center">贝宁</td>
<td align="center">贝宁</td>
<td align="center">贝宁</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BW</td>
<td align="center">Botswana</td>
<td align="center">博茨瓦纳</td>
<td align="center">博茨瓦纳</td>
<td align="center">博茨瓦纳</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CF</td>
<td align="center">Central African Republic</td>
<td align="center">中非</td>
<td align="center">中非</td>
<td align="center">中非</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CM</td>
<td align="center">Cameroon</td>
<td align="center">喀麦隆</td>
<td align="center">喀麦隆</td>
<td align="center">喀麦隆</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CV</td>
<td align="center">Cape Verde</td>
<td align="center">佛得角</td>
<td align="center">佛得角</td>
<td align="center">佛得角</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">DJ</td>
<td align="center">Djibouti</td>
<td align="center">吉布提</td>
<td align="center">吉布提</td>
<td align="center">吉布提</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">DZ</td>
<td align="center">Algeria</td>
<td align="center">阿尔及利亚</td>
<td align="center">阿尔及利亚</td>
<td align="center">阿尔及利亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">EG</td>
<td align="center">Egypt</td>
<td align="center">埃及</td>
<td align="center">埃及</td>
<td align="center">埃及</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">EH</td>
<td align="center">Western Sahara</td>
<td align="center">西撒哈拉</td>
<td align="center">西撒哈拉</td>
<td align="center">西撒哈拉</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ER</td>
<td align="center">Eritrea</td>
<td align="center">厄立特里亚</td>
<td align="center">厄立垂亚</td>
<td align="center">厄立特里亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GA</td>
<td align="center">Gabon</td>
<td align="center">加蓬</td>
<td align="center">加蓬</td>
<td align="center">加蓬</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GH</td>
<td align="center">Ghana</td>
<td align="center">加纳</td>
<td align="center">加纳</td>
<td align="center">加纳</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GN</td>
<td align="center">Guinea</td>
<td align="center">几内亚</td>
<td align="center">几内亚</td>
<td align="center">几内亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GQ</td>
<td align="center">Equatorial Guinea</td>
<td align="center">赤道几内亚</td>
<td align="center">赤道几内亚</td>
<td align="center">赤道几内亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GW</td>
<td align="center">Guinea-Bissau</td>
<td align="center">几内亚比绍</td>
<td align="center">几内亚比绍</td>
<td align="center">几内亚比绍</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KM</td>
<td align="center">The Comoros</td>
<td align="center">科摩罗</td>
<td align="center">科摩罗</td>
<td align="center">科摩罗</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LR</td>
<td align="center">Liberia</td>
<td align="center">利比里亚</td>
<td align="center">利比里亚</td>
<td align="center">利比里亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LS</td>
<td align="center">Lesotho</td>
<td align="center">莱索托</td>
<td align="center">莱索托</td>
<td align="center">莱索托</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">LY</td>
<td align="center">Libya</td>
<td align="center">利比亚</td>
<td align="center">利比亚</td>
<td align="center">利比亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MA</td>
<td align="center">Morocco</td>
<td align="center">摩洛哥</td>
<td align="center">摩洛哥</td>
<td align="center">摩洛哥</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MG</td>
<td align="center">Madagascar</td>
<td align="center">马达加斯加</td>
<td align="center">马达加斯加</td>
<td align="center">马达加斯加</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ML</td>
<td align="center">Mali</td>
<td align="center">马里</td>
<td align="center">马利</td>
<td align="center">马里</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MR</td>
<td align="center">Mauritania</td>
<td align="center">毛里塔尼亚</td>
<td align="center">毛里塔尼亚</td>
<td align="center">毛里塔尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MW</td>
<td align="center">Malawi</td>
<td align="center">马拉维</td>
<td align="center">马拉维</td>
<td align="center">马拉维</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NA</td>
<td align="center">Namibia</td>
<td align="center">纳米比亚</td>
<td align="center">纳米比亚</td>
<td align="center">纳米比亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NE</td>
<td align="center">Niger</td>
<td align="center">尼日尔</td>
<td align="center">尼日</td>
<td align="center">尼日尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NG</td>
<td align="center">Nigeria</td>
<td align="center">尼日利亚</td>
<td align="center">尼日利亚</td>
<td align="center">尼日利亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">RW</td>
<td align="center">Rwanda</td>
<td align="center">卢旺达</td>
<td align="center">卢旺达</td>
<td align="center">卢旺达</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SC</td>
<td align="center">Seychelles</td>
<td align="center">塞舌尔</td>
<td align="center">塞舌尔</td>
<td align="center">塞舌尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SD</td>
<td align="center">Sudan</td>
<td align="center">苏丹</td>
<td align="center">苏丹</td>
<td align="center">苏丹</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SL</td>
<td align="center">Sierra Leone</td>
<td align="center">塞拉利昂</td>
<td align="center">狮子山</td>
<td align="center">塞拉利昂</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SN</td>
<td align="center">Senegal</td>
<td align="center">塞内加尔</td>
<td align="center">塞内加尔</td>
<td align="center">塞内加尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SO</td>
<td align="center">Somalia</td>
<td align="center">索马里</td>
<td align="center">索马里</td>
<td align="center">索马里</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SS</td>
<td align="center">South Sudan</td>
<td align="center">南苏丹</td>
<td align="center">南苏丹</td>
<td align="center">南苏丹</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ST</td>
<td align="center">Sao Tome &amp; Principe</td>
<td align="center">圣多美和普林西比</td>
<td align="center">圣多美普林西比</td>
<td align="center">圣多美及普林西比</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SZ</td>
<td align="center">Swaziland</td>
<td align="center">斯威士兰</td>
<td align="center">斯威士兰</td>
<td align="center">斯威士兰</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TD</td>
<td align="center">Chad</td>
<td align="center">乍得</td>
<td align="center">查德</td>
<td align="center">乍得</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TG</td>
<td align="center">Togo</td>
<td align="center">多哥</td>
<td align="center">多哥</td>
<td align="center">多哥</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TN</td>
<td align="center">Tunisia</td>
<td align="center">突尼斯</td>
<td align="center">突尼斯</td>
<td align="center">突尼斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TZ</td>
<td align="center">Tanzania</td>
<td align="center">坦桑尼亚</td>
<td align="center">坦桑尼亚</td>
<td align="center">坦桑尼亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">UG</td>
<td align="center">Uganda</td>
<td align="center">乌干达</td>
<td align="center">乌干达</td>
<td align="center">乌干达</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ZA</td>
<td align="center">South Africa</td>
<td align="center">南非</td>
<td align="center">南非</td>
<td align="center">南非</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ZM</td>
<td align="center">Zambia</td>
<td align="center">赞比亚</td>
<td align="center">赞比亚</td>
<td align="center">赞比亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ZW</td>
<td align="center">Zimbabwe</td>
<td align="center">津巴布韦</td>
<td align="center">津巴布韦</td>
<td align="center">津巴布韦</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CG</td>
<td align="center">Republic of the Congo</td>
<td align="center">刚果（布）</td>
<td align="center">刚果</td>
<td align="center">刚果</td>
<td align="center">中国大陆主要使用“刚果（布）”一词，意指“首都为 布拉柴维尔的 刚果（共和国）”，而“刚果”一词亦普遍为民间所用。</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CD</td>
<td align="center">Democratic Republic of the Congo</td>
<td align="center">刚果（金）</td>
<td align="center">民主刚果</td>
<td align="center">民主刚果</td>
<td align="center">中国大陆主要使用“刚果（金）”一词，意指“首都为 金沙萨的 刚果（共和国）”，而“民主刚果”一词亦普遍为民间所用。</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MZ</td>
<td align="center">Mozambique</td>
<td align="center">莫桑比克</td>
<td align="center">莫桑比克</td>
<td align="center">莫桑比克</td>
<td align="center">中国大陆和 台湾均曾将之普遍译作“ 莫三比给”</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GM</td>
<td align="center">Gambia</td>
<td align="center">冈比亚</td>
<td align="center">冈比亚</td>
<td align="center">冈比亚</td>
<td align="center">亦有部份人士使用“ 刚比亚”一词于 港澳地区</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">ET</td>
<td align="center">Ethiopia</td>
<td align="center">埃塞俄比亚</td>
<td align="center">埃塞俄比亚</td>
<td align="center">埃塞俄比亚</td>
<td align="center">亦有部份人士使用“ 埃塞俄比亚”一词于 台湾</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MU</td>
<td align="center">Mauritius</td>
<td align="center">毛里求斯</td>
<td align="center">毛里求斯</td>
<td align="center">毛里求斯</td>
<td align="center">香港亦普遍采用“ 毛里求斯”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CI</td>
<td align="center">Cote d’Ivoire</td>
<td align="center">科特迪瓦</td>
<td align="center">科特迪瓦</td>
<td align="center">科特迪瓦</td>
<td align="center">香港亦普遍采用“科特迪瓦”一词于其它场合（如 香港邮政的邮政指南附录表）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KE</td>
<td align="center">Kenya</td>
<td align="center">肯尼亚</td>
<td align="center">肯尼亚</td>
<td align="center">肯尼亚</td>
<td align="center">香港亦普遍采用“ 肯尼亚”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">南美洲</td>
<td align="center">AR</td>
<td align="center">Argentina</td>
<td align="center">阿根廷</td>
<td align="center">阿根廷</td>
<td align="center">阿根廷</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BO</td>
<td align="center">Bolivia</td>
<td align="center">玻利维亚</td>
<td align="center">玻利维亚</td>
<td align="center">玻利维亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">BR</td>
<td align="center">Brazil</td>
<td align="center">巴西</td>
<td align="center">巴西</td>
<td align="center">巴西</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CL</td>
<td align="center">Chile</td>
<td align="center">智利</td>
<td align="center">智利</td>
<td align="center">智利</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CO</td>
<td align="center">Colombia</td>
<td align="center">哥伦比亚</td>
<td align="center">哥伦比亚</td>
<td align="center">哥伦比亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">EC</td>
<td align="center">Ecuador</td>
<td align="center">厄瓜多尔</td>
<td align="center">厄瓜多尔</td>
<td align="center">厄瓜多尔</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">FK</td>
<td align="center">Falkland Islands</td>
<td align="center">马尔维纳斯群岛（ 福克兰）</td>
<td align="center">福克兰群岛</td>
<td align="center">福克兰群岛（ 马尔维纳斯）</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GF</td>
<td align="center">French Guiana</td>
<td align="center">法属圭亚那</td>
<td align="center">法属圭亚那</td>
<td align="center">法属圭亚那</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GY</td>
<td align="center">Guyana</td>
<td align="center">圭亚那</td>
<td align="center">圭亚那</td>
<td align="center">圭亚那</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PE</td>
<td align="center">Peru</td>
<td align="center">秘鲁</td>
<td align="center">秘鲁</td>
<td align="center">秘鲁</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PY</td>
<td align="center">Paraguay</td>
<td align="center">巴拉圭</td>
<td align="center">巴拉圭</td>
<td align="center">巴拉圭</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SR</td>
<td align="center">Suriname</td>
<td align="center">苏里南</td>
<td align="center">苏里南</td>
<td align="center">苏里南</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">UY</td>
<td align="center">Uruguay</td>
<td align="center">乌拉圭</td>
<td align="center">乌拉圭</td>
<td align="center">乌拉圭</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VE</td>
<td align="center">Venezuela</td>
<td align="center">委内瑞拉</td>
<td align="center">委内瑞拉</td>
<td align="center">委内瑞拉</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">大洋洲</td>
<td align="center">AS</td>
<td align="center">American Samoa</td>
<td align="center">美属萨摩亚</td>
<td align="center">美属萨摩亚</td>
<td align="center">美属萨摩亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">AU</td>
<td align="center">Australia</td>
<td align="center">澳大利亚</td>
<td align="center">澳洲</td>
<td align="center">澳洲</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CC</td>
<td align="center">Cocos （Keeling） Islands</td>
<td align="center">科科斯群岛</td>
<td align="center">可可斯群岛</td>
<td align="center">科科斯群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CX</td>
<td align="center">Christmas Island</td>
<td align="center">圣诞岛</td>
<td align="center">圣诞岛</td>
<td align="center">圣诞岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">FJ</td>
<td align="center">Fiji</td>
<td align="center">斐济群岛</td>
<td align="center">斐济</td>
<td align="center">斐济</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">FM</td>
<td align="center">Federated States of Micronesia</td>
<td align="center">密克罗尼西亚联邦</td>
<td align="center">密克罗尼西亚联邦</td>
<td align="center">密克罗尼西亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">GU</td>
<td align="center">Guam</td>
<td align="center">关岛</td>
<td align="center">关岛</td>
<td align="center">关岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">HM</td>
<td align="center">Heard Island and McDonald Islands</td>
<td align="center">赫德岛和麦克唐纳群岛</td>
<td align="center">赫德及麦当劳群岛</td>
<td align="center">赫德岛和麦克唐纳群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">KI</td>
<td align="center">Kiribati</td>
<td align="center">基里巴斯</td>
<td align="center">基里巴斯</td>
<td align="center">基里巴斯</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">MH</td>
<td align="center">Marshall islands</td>
<td align="center">马绍尔群岛</td>
<td align="center">马绍尔群岛</td>
<td align="center">马绍尔群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NF</td>
<td align="center">Norfolk Island</td>
<td align="center">诺福克岛</td>
<td align="center">诺福克岛</td>
<td align="center">诺福克岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NR</td>
<td align="center">Nauru</td>
<td align="center">瑙鲁</td>
<td align="center">瑙鲁</td>
<td align="center">瑙鲁</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PF</td>
<td align="center">French polynesia</td>
<td align="center">法属波利尼西亚</td>
<td align="center">法属波利尼西亚</td>
<td align="center">法属波利尼西亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PG</td>
<td align="center">Papua New Guinea</td>
<td align="center">巴布亚新几内亚</td>
<td align="center">巴布亚新几内亚</td>
<td align="center">巴布亚新几内亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PN</td>
<td align="center">Pitcairn Islands</td>
<td align="center">皮特凯恩群岛</td>
<td align="center">皮特康岛</td>
<td align="center">皮特凯恩群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">PW</td>
<td align="center">Palau</td>
<td align="center">帕劳</td>
<td align="center">帕劳</td>
<td align="center">帕劳</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">SB</td>
<td align="center">Solomon Islands</td>
<td align="center">所罗门群岛</td>
<td align="center">所罗门群岛</td>
<td align="center">所罗门群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TK</td>
<td align="center">Tokelau</td>
<td align="center">托克劳</td>
<td align="center">托克劳群岛</td>
<td align="center">托克劳群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TO</td>
<td align="center">Tonga</td>
<td align="center">汤加</td>
<td align="center">东加</td>
<td align="center">汤加</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">TV</td>
<td align="center">Tuvalu</td>
<td align="center">图瓦卢</td>
<td align="center">吐瓦鲁</td>
<td align="center">图瓦卢</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">WF</td>
<td align="center">Wallis and Futuna</td>
<td align="center">瓦利斯和富图纳</td>
<td align="center">沃里斯与伏塔那岛</td>
<td align="center">瓦利斯群岛和富图纳群岛</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">WS</td>
<td align="center">Samoa</td>
<td align="center">萨摩亚</td>
<td align="center">萨摩亚</td>
<td align="center">萨摩亚</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">VU</td>
<td align="center">Vanuatu</td>
<td align="center">瓦努阿图</td>
<td align="center">瓦努阿图</td>
<td align="center">瓦努阿图</td>
<td align="center">亦有部份人士使用“ 瓦努阿图”一词于 港澳地区</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NU</td>
<td align="center">Niue</td>
<td align="center">纽埃</td>
<td align="center">纽埃</td>
<td align="center">纽埃</td>
<td align="center">台湾亦普遍采用“ 纽威岛”（ CNS 12842译名）一词于其它场合（如 MSN台湾）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">CK</td>
<td align="center">Cook Islands</td>
<td align="center">库克群岛</td>
<td align="center">库克群岛</td>
<td align="center">库克群岛</td>
<td align="center">台湾和 香港亦普遍采用“ 科克群岛”（ CNS 12842译名）一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">NZ</td>
<td align="center">New Zealand</td>
<td align="center">新西兰</td>
<td align="center">纽西兰</td>
<td align="center">新西兰</td>
<td align="center">新加坡与 马来西亚均将之译作“ 新西兰”。 香港亦普遍采用“新西兰”一词于其它场合</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">南极洲</td>
<td align="center">AQ</td>
<td align="center">Antarctica</td>
<td align="center">南极洲</td>
<td align="center">南极洲</td>
<td align="center">南极洲</td>
<td align="center"></td>
</tr>
</tbody></table>
<blockquote>
<p>注：如表中没有统计，可以在此网站在线查询（<a href="https://countrycode.org/%EF%BC%89">https://countrycode.org/）</a><br>一级state：<em>亚洲（AS）</em>、<em>欧洲（EU）</em>、<em>非洲（AF）</em>、<em>北美（NA）</em>、<em>南美（SA）</em>、<em>大洋洲（OA）</em><br>二级country：中国（CN）等全部现存国家和地区
                    </p>
</blockquote>
]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>【iOS】集成阿里云消息推送</title>
    <url>/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/</url>
    <content><![CDATA[<h1 id="集成阿里云消息推送"><a href="#集成阿里云消息推送" class="headerlink" title="集成阿里云消息推送"></a>集成阿里云消息推送</h1><h2 id="基本的业务流程："><a href="#基本的业务流程：" class="headerlink" title="基本的业务流程："></a>基本的业务流程：</h2><p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782576576028.jpg"></p>
<span id="more"></span>

<p>集成阿里云消息推送的流程基本如上图所示，还是比较简单的，我们只需要重点关注一下红框中的部分。</p>
<p>下面我们就来分步骤讲解一下：</p>
<h3 id="一：创建应用"><a href="#一：创建应用" class="headerlink" title="一：创建应用"></a>一：创建应用</h3><p>创建应用获取初始化推送所需的AppKey和Secret</p>
<h4 id="1-登录阿里云控制台，添加产品"><a href="#1-登录阿里云控制台，添加产品" class="headerlink" title="1. 登录阿里云控制台，添加产品"></a>1. 登录阿里云控制台，添加产品</h4><p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782584388892.jpg"></p>
<h4 id="2-点击添加应用，创建ios和android对应的平台"><a href="#2-点击添加应用，创建ios和android对应的平台" class="headerlink" title="2. 点击添加应用，创建ios和android对应的平台"></a>2. 点击添加应用，创建ios和android对应的平台</h4><p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782585058067.jpg"></p>
<h3 id="二：上传证书"><a href="#二：上传证书" class="headerlink" title="二：上传证书"></a>二：上传证书</h3><p>集成阿里云推送，我们需要在阿里云控制台上传两个证书，分别是<strong>开发环境的推送证书</strong>和<strong>生成环境的推送证书</strong>，如下图所示：</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782586952344.jpg"></p>
<p>那么我们要如何获取这两个证书呢？</p>
<h4 id="1-获取CSR文件"><a href="#1-获取CSR文件" class="headerlink" title="1.获取CSR文件"></a>1.获取CSR文件</h4><p>1.1 在Mac的应用程序中打开钥匙串访问，在顶部菜单栏中选择钥匙串访问&gt;证书助理&gt;从证书颁发机构请求证书</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782592582016.jpg"></p>
<p>1.2 在弹出的证书信息中，输入邮箱地址，设置选择储存到磁盘，单击继续将CSR文件存储到本地</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782593206219.jpg"></p>
<p>1.3 生成之后，在目录下找到此文件</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782593919466.jpg"></p>
<h4 id="2-生成AppID"><a href="#2-生成AppID" class="headerlink" title="2.生成AppID"></a>2.生成AppID</h4><p>2.1 登录 <a href="https://developer.apple.com/account">Apple Developer</a>，选择Certificates，Identifiers &amp; Profiles选项</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782595884680.jpg"></p>
<p>2.2 选择Identifiers，项目如果是自动证书管理的话我们可以看到一些以 <code>XC</code>开头的 Bundle ID ，如下图所示：</p>
<p>如果是手动证书管理，需要点击<code>+</code>号创建 App ID，此处我们自动证书管理为例。</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782596990503.jpg"></p>
<p>2.3 在上图的 Identifiers 列表中选择需要配置推送的<br>Bundle ID。（如果列表中没有，可以在Xcode工程中配置）</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782603043050.jpg"></p>
<p>在上图配置文件中填写Bundle ID，然后勾选<code>Automatically manage signing</code>，在下图弹框中选择<code>Enable Automatic</code>，然后回到<a href="https://developer.apple.com/account">Apple Developer</a>，就可以<code>Identifiers</code>列表中看到我们刚才设置的<code>Bundle ID</code>了。</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782604788362.jpg"></p>
<p>2.4 点击Identifiers 列表进入详情，向下划动找到<code>Push Notification</code>选项，勾选开启远程推送服务</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782606658935.jpg"></p>
<h4 id="3-创建生产和开发推送证书"><a href="#3-创建生产和开发推送证书" class="headerlink" title="3.创建生产和开发推送证书"></a>3.创建生产和开发推送证书</h4><p>3.1 点击上图中的<code>Edit</code>按钮，进入配置页面</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782609693712.jpg"></p>
<p>3.2 单击<code>Choose File</code>上传已获取到的CSR文件</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782610616057.jpg"></p>
<p>3.3 生成后，<code>download</code>到本地</p>
<p>3.4 双击打开并安装证书，系统会自动将其导入到钥匙串中</p>
<p>3.5 在Mac中打开钥匙串应用，选择登录&gt;证书，分别右键导出开发环境（<code>Apple Sandbox Push Services</code>）和生产环境(<code>Apple Push Services</code>)的<code>.P12</code>证书文件</p>
<p><font color="#ff0000">此处导出.p12文件时需要设置密码，阿里云配置证书时必填</font></p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782614735761.jpg"></p>
<p>导出结果如下：</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782616606924.jpg"></p>
<p>3.6 在阿里云控制台配置相应的开发和生产证书，如下图所示：</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782617708004.jpg"></p>
<h3 id="三：下载配置文件并集成"><a href="#三：下载配置文件并集成" class="headerlink" title="三：下载配置文件并集成"></a>三：下载配置文件并集成</h3><p>1.在阿里云控制台应用设置找到相应应用，点击<code>iOS配置下载</code>，将我们刚才生成好的配置文件下载下来，如下图所示：</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782621859000.jpg"></p>
<p>下载完成之后，文件如下图：</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782626642638.jpg"></p>
<p>将此文件导入到工程中，可以通过<code>CloudPushSDK.autoInit</code>方法自动生成推送配置，下文<strong>功能实现</strong>模块我们将做详细介绍。</p>
<h3 id="四：下载推送SDK与集成"><a href="#四：下载推送SDK与集成" class="headerlink" title="四：下载推送SDK与集成"></a>四：下载推送SDK与集成</h3><h4 id="1-集成SDK"><a href="#1-集成SDK" class="headerlink" title="1.集成SDK"></a>1.集成SDK</h4><p>一共有两种方法，手动集成和Pod集成，这里我们主要介绍pod集成的方法。</p>
<p>1.1 在Podfile中添加阿里云仓库source源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source &#x27;https://github.com/aliyun/aliyun-specs.git&#x27;</span><br></pre></td></tr></table></figure>

<p>1.2 pod 阿里云推送</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pod &#x27;AlicloudPush&#x27;, &#x27;~&gt; 1.9.9.5&#x27;</span><br></pre></td></tr></table></figure>

<h4 id="2-引入头文件"><a href="#2-引入头文件" class="headerlink" title="2.引入头文件"></a>2.引入头文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import CloudPushSDK</span><br></pre></td></tr></table></figure>

<p>或者OC桥接文件中引入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#import &lt;CloudPushSDK/CloudPushSDK.h&gt;</span><br></pre></td></tr></table></figure>

<h4 id="3-Objc配置"><a href="#3-Objc配置" class="headerlink" title="3.Objc配置"></a>3.Objc配置</h4><p>iOS端集成SDK时需要做<code>-ObjC</code>配置 ，即应用的 <em>TARGETS -&gt; Build Settings -&gt; Linking -&gt; Other Linker Flags</em> ，需添加上<code>-ObjC</code>这个属性，否则推送服务无法正常使用 。</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782636066930.jpg"></p>
<h4 id="4-打开系统通知"><a href="#4-打开系统通知" class="headerlink" title="4.打开系统通知"></a>4.打开系统通知</h4><p><font color="#ff0000">注意：此处千万不要忘记打开，否则收不到推送，这是一个小点，很难定位</font></p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782638087381.jpg"></p>
<h3 id="五：功能实现"><a href="#五：功能实现" class="headerlink" title="五：功能实现"></a>五：功能实现</h3><p>推送功能主要在<code>AppDelegate</code>文件中实现</p>
<h4 id="1-初始化SDK"><a href="#1-初始化SDK" class="headerlink" title="1.初始化SDK"></a>1.初始化SDK</h4><p>使用配置文件<code>AliyunEmasServices-Info.plist</code>直接调用<code>autoInit</code>，这个在前文有提到过。</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">setup</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>, <span class="params">launchOptions</span>: [<span class="params">UIApplicationLaunchOptionsKey</span>: <span class="keyword">Any</span>]<span class="operator">?</span>) &#123;</span><br><span class="line">    <span class="type">CloudPushSDK</span>.autoInit &#123; result <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> result <span class="operator">=</span> result <span class="keyword">else</span> &#123;</span><br><span class="line">            log.error(<span class="string">&quot;Push SDK init failed, error: result is nil!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> result.success &#123;</span><br><span class="line">            log.debug(<span class="string">&quot;Push SDK init success, deviceId: <span class="subst">\(String(describing: CloudPushSDK.getDeviceId()))</span>&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.error(<span class="string">&quot;Push SDK init failed, error: <span class="subst">\(String(describing: result.error))</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="comment">// 点击通知将App从关闭状态启动时，将通知打开回执上报</span></span><br><span class="line">    <span class="type">CloudPushSDK</span>.sendNotificationAck(launchOptions)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-请求通知权限并注册远程通知"><a href="#2-请求通知权限并注册远程通知" class="headerlink" title="2.请求通知权限并注册远程通知"></a>2.请求通知权限并注册远程通知</h4><p>第一次安装会弹出请求通知的<code>alert</code></p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">registerAPNS</span>(<span class="params">application</span>: <span class="type">UIApplication</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> center <span class="operator">=</span> <span class="type">UNUserNotificationCenter</span>.current()</span><br><span class="line">    center.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">    <span class="keyword">var</span> options: <span class="type">UNAuthorizationOptions</span> <span class="operator">=</span> [.alert, .sound, .badge]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">#available</span>(<span class="keyword">iOS</span> <span class="number">12.0</span>, <span class="operator">*</span>) &#123;</span><br><span class="line">        options <span class="operator">=</span> [.alert, .sound, .badge, .providesAppNotificationSettings]</span><br><span class="line">    &#125;</span><br><span class="line">    center.requestAuthorization(options: options) &#123; (granted, error) <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">if</span> granted &#123;</span><br><span class="line">            log.debug(<span class="string">&quot;User authored notification.&quot;</span>)</span><br><span class="line">            <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                application.registerForRemoteNotifications()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.debug(<span class="string">&quot;User denied notification.&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> error <span class="operator">=</span> error &#123;</span><br><span class="line">            log.error(error)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-注册设备并上报deviceToken"><a href="#3-注册设备并上报deviceToken" class="headerlink" title="3.注册设备并上报deviceToken"></a>3.注册设备并上报deviceToken</h4><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">registerDevice</span>(<span class="keyword">_</span> <span class="params">deviceToken</span>: <span class="type">Data</span>) &#123;</span><br><span class="line">    <span class="type">CloudPushSDK</span>.registerDevice(deviceToken) &#123; result <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> result <span class="operator">=</span> result <span class="keyword">else</span> &#123;</span><br><span class="line">            log.error(<span class="string">&quot;Register deviceToken failed, error:: result is nil!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> result.success &#123;</span><br><span class="line">            log.debug(<span class="string">&quot;Register deviceToken success, deviceToken: <span class="subst">\(String(describing: CloudPushSDK.getApnsDeviceToken()))</span>&quot;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.debug(<span class="string">&quot;Register deviceToken failed, error: <span class="subst">\(String(describing: result.error))</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>,</span><br><span class="line">                        <span class="params">didRegisterForRemoteNotificationsWithDeviceToken</span> <span class="params">deviceToken</span>: <span class="type">Data</span>) &#123;</span><br><span class="line">    registerDevice(deviceToken)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册失败</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">func</span> <span class="title function_">application</span>(<span class="keyword">_</span> <span class="params">application</span>: <span class="type">UIApplication</span>,</span><br><span class="line">                        <span class="params">didFailToRegisterForRemoteNotificationsWithError</span> <span class="params">error</span>: <span class="type">Error</span>) &#123;</span><br><span class="line">    log.error(<span class="string">&quot;did Fail To Register For Remote Notifications With Error : <span class="subst">\(error)</span>&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-注册通知类别"><a href="#4-注册通知类别" class="headerlink" title="4.注册通知类别"></a>4.注册通知类别</h4><p>通知类别（category）用于给通知分类，可添加按钮或自定义UI</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">createCustomNotificationCategory</span>() &#123;</span><br><span class="line">    <span class="keyword">let</span> action <span class="operator">=</span> <span class="type">UNNotificationAction</span>(identifier: <span class="string">&quot;actionID&quot;</span>, title: <span class="string">&quot;buttonTitle&quot;</span>, options: [])</span><br><span class="line">    <span class="keyword">let</span> category <span class="operator">=</span> <span class="type">UNNotificationCategory</span>(identifier: <span class="string">&quot;CategoryID&quot;</span>, actions: [action],</span><br><span class="line">                                          intentIdentifiers: [],</span><br><span class="line">                                          options: .customDismissAction)</span><br><span class="line">    <span class="type">UNUserNotificationCenter</span>.current().setNotificationCategories([category])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-UNUserNotificationCenterDelegate"><a href="#5-UNUserNotificationCenterDelegate" class="headerlink" title="5.UNUserNotificationCenterDelegate"></a>5.UNUserNotificationCenterDelegate</h4><p><code>UNUserNotificationCenterDelegate</code>代替了<code>UIAppDelegate</code>的旧通知接收方法<code>didReceiveRemoteNotification</code>将接收通知的情况分为app开启时（foreground）和app不在前台时（background）</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app打开时调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">func</span> <span class="title function_">userNotificationCenter</span>(<span class="keyword">_</span> <span class="params">center</span>: <span class="type">UNUserNotificationCenter</span>,</span><br><span class="line">                                   <span class="params">willPresent</span> <span class="params">notification</span>: <span class="type">UNNotification</span>,</span><br><span class="line">                                   <span class="params">withCompletionHandler</span> <span class="params">completionHandler</span>: <span class="keyword">@escaping</span> (<span class="type">UNNotificationPresentationOptions</span>) -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">    <span class="comment">// 业务逻辑</span></span><br><span class="line">    handleNotification(notification)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在app内弹通知</span></span><br><span class="line">    completionHandler([.badge, .alert, .sound])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app未打开时调用</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">func</span> <span class="title function_">userNotificationCenter</span>(<span class="keyword">_</span> <span class="params">center</span>: <span class="type">UNUserNotificationCenter</span>, <span class="params">didReceive</span> <span class="params">response</span>: <span class="type">UNNotificationResponse</span>, <span class="params">withCompletionHandler</span> <span class="params">completionHandler</span>: <span class="keyword">@escaping</span> () -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> userAction <span class="operator">=</span> response.actionIdentifier</span><br><span class="line">    <span class="keyword">if</span> userAction <span class="operator">==</span> <span class="type">UNNotificationDefaultActionIdentifier</span> &#123; </span><br><span class="line">        <span class="comment">// 点击通知栏本身</span></span><br><span class="line">        log.debug(<span class="string">&quot;User opened the notification.&quot;</span>)</span><br><span class="line"></span><br><span class="line">        handleNotification(response.notification)</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> userAction <span class="operator">==</span> <span class="type">UNNotificationDismissActionIdentifier</span> &#123;</span><br><span class="line">        <span class="comment">// 通知dismiss，category创建时传入UNNotificationCategoryOptionCustomDismissAction才可以触发</span></span><br><span class="line">        log.debug(<span class="string">&quot;User dismissed the notification.&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> userAction <span class="operator">==</span> <span class="string">&quot;actionID&quot;</span> &#123;</span><br><span class="line">        <span class="comment">// 自定义按钮逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    completionHandler()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// iOS12新功能，在app系统通知设置里点击按钮跳到app内通知设置的回调</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">func</span> <span class="title function_">userNotificationCenter</span>(<span class="keyword">_</span> <span class="params">center</span>: <span class="type">UNUserNotificationCenter</span>, <span class="params">openSettingsFor</span> <span class="params">notification</span>: <span class="type">UNNotification</span>?) &#123;</span><br><span class="line">    log.debug(<span class="string">&quot;Open notification in-app setting.&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="扩展功能：Notification-Service-Extension（富媒体推送）"><a href="#扩展功能：Notification-Service-Extension（富媒体推送）" class="headerlink" title="扩展功能：Notification Service Extension（富媒体推送）"></a>扩展功能：Notification Service Extension（富媒体推送）</h2><p>众所周知，苹果的apns推送有一个痛点（当然Apple觉得这是亮点），就是<strong>在我们不点击通知时，app是不会执行任何代码的</strong>，这就是静默推送，虽然app能收到推送，但是它不执行任何代码，这极大的保护了手机性能，却也让开发者没办法对推送内容进行修改了。</p>
<p>那么问题来了，Apple真的不让开发者动态修改推送内容了吗？</p>
<p>不然，Apple还是很有良心的，在静默推送修改之后，它也推出了另一功能<code>Notification Service Extension</code>，它为我们完美解决了对推送内容进行动态修改的需求，接下来我们就来看一下这一功能：</p>
<h3 id="了解Notification-Service-Extension"><a href="#了解Notification-Service-Extension" class="headerlink" title="了解Notification Service Extension"></a>了解Notification Service Extension</h3><ul>
<li><p>iOS 10添加了通知相关的扩展Notification Service Extension，使得通知弹出前可以对通知内容进行修改。</p>
</li>
<li><p>iOS远程推送过程如下图所示，APNs推送的通知直接在设备上弹出；</p>
</li>
</ul>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782654264853.jpg"></p>
<ul>
<li>添加Notification Service Extension后，如下图所示，APNs推送的通知在弹出前，可先到达Extension进行处理。</li>
</ul>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782655214693.jpg"></p>
<p><font color="#ff0000">【注意】OpenAPI 需要调用 setiOSMutableContent(true) 接口，这样Extension才可生效。这里的OpenAPI就是阿里云API了，让后台配置一下setiOSMutableContent(true)就好。</font></p>
<h3 id="使用Notification-Service-Extension"><a href="#使用Notification-Service-Extension" class="headerlink" title="使用Notification Service Extension"></a>使用Notification Service Extension</h3><h4 id="1、点击-file-gt-new-gt-target"><a href="#1、点击-file-gt-new-gt-target" class="headerlink" title="1、点击 file-&gt;new-&gt;target"></a>1、点击 file-&gt;new-&gt;target</h4><p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782671772445.jpg"></p>
<h4 id="2、选择-iOS-gt-Notification-Service-Extension"><a href="#2、选择-iOS-gt-Notification-Service-Extension" class="headerlink" title="2、选择 iOS-&gt;Notification Service Extension"></a>2、选择 iOS-&gt;Notification Service Extension</h4><p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782674597379.jpg"></p>
<h4 id="3、选择创建extension的项目target，输入扩展名称，点击finish，即创建扩展完成"><a href="#3、选择创建extension的项目target，输入扩展名称，点击finish，即创建扩展完成" class="headerlink" title="3、选择创建extension的项目target，输入扩展名称，点击finish，即创建扩展完成"></a>3、选择创建extension的项目target，输入扩展名称，点击finish，即创建扩展完成</h4><p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782674134664.jpg"></p>
<h3 id="配置Extension"><a href="#配置Extension" class="headerlink" title="配置Extension"></a>配置Extension</h3><p>创建完成后，主要有两个文件<code>NotificationService.swift</code> 和 <code>info.plist</code></p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782676305569.jpg"></p>
<p>1、首先，需要在扩展对应的target-&gt;Signing&amp;Capabilities，点击+Capability，添加push notification</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782676848331.jpg"></p>
<p>2、<code>NotificationService.swift</code>中主要有两个方法</p>
<p>1）</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">didReceive</span>(<span class="keyword">_</span> <span class="params">request</span>: <span class="type">UNNotificationRequest</span>, <span class="params">withContentHandler</span> <span class="params">contentHandler</span>: <span class="keyword">@escaping</span> (<span class="type">UNNotificationContent</span>) -&gt; <span class="type">Void</span>)</span><br></pre></td></tr></table></figure>

<p>该方法主要是用于在接受到推送时，针对推送内容进行修改，修改完成后展示给用户</p>
<p>2）</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">serviceExtensionTimeWillExpire</span>()</span><br></pre></td></tr></table></figure>

<p>该方法是用于在方法1）中如果没有向用户展示推送，可以在这里（即apns即将到30s时）向用户推送</p>
<p>3、推送的消息中必须具备alert和<code>&quot;mutable-content&quot;:&quot;1&quot;</code>（表示推送可修改），这个上文有提到过，OpenAPI 需要调用 <code>setiOSMutableContent(true)</code> 接口，发送出来的消息结构中就会有<code>&quot;mutable-content&quot;:&quot;1&quot;</code>。</p>
<p>接下来，我们就可以对接收到的推送消息做自定义动态修改了。如下图所示：</p>
<p><img data-src="/iOS/%E3%80%90iOS%E3%80%91%E9%9B%86%E6%88%90%E9%98%BF%E9%87%8C%E4%BA%91%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/16782680346445.jpg"></p>
<p>然后我们就可以看到手机接收到的推送变了。</p>
<p>🎉🎉🎉 完结撒花 🎉🎉🎉！</p>
<p>❤️ Best wish for you ❤️！</p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次与ChatGPT闲聊</title>
    <url>/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/</url>
    <content><![CDATA[<h1 id="第一次与ChatGPT闲聊"><a href="#第一次与ChatGPT闲聊" class="headerlink" title="第一次与ChatGPT闲聊"></a>第一次与ChatGPT闲聊</h1><p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792994415736.jpg"></p>
<span id="more"></span>

<p>开局来一个盲猜，哈哈！</p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792994578027.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792994726246.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792994851225.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792994960092.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792995226589.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792995362169.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792995475238.jpg"></p>
<p>以上回答都比较中规中矩，而且流于表面，没有什么深刻的理解。</p>
<p>怎么说呢，就好比小学生囫囵吞枣读了一遍红楼，来参加知识竞赛一样，虽然知道一点，但是理解不深，有知识架构，但是没有个人观点的沉淀，甚至还有可能出错和闹笑话，下面错误和笑话就来了。</p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792999646971.jpg"></p>
<p>薛蟠这个回答是我万万没有想到的！</p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792995731944.jpg"></p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792995866936.jpg"></p>
<p>更有甚者，当我问及秦可卿的死因时，它的回答竟是这样的：</p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792996066039.jpg"></p>
<p>这个回答纯属瞎编乱造！</p>
<p><img data-src="/%E9%9A%8F%E7%AC%94/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%B8%8EChatGPT%E9%97%B2%E8%81%8A/16792996214610.jpg"></p>
<p>这个结局确实是一个方向，但是，相信绝不是大多数红迷想要的。</p>
<p>第一次和ChatGPT闲聊，竟然问了很多和《红楼梦》相关的问题，估计ChatGPT都没想到吧，差点被我给整晕了…</p>
<p>未完待续…期待后续的发掘</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
